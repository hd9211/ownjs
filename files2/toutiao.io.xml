<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>8ece3808e62a929f6488fb8e30be4579</guid>
<title>面向 K8s 设计误区</title>
<link>https://toutiao.io/k/iebk207</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.14106583072100312&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_gif/qdzZBE73hWtObtu43aftW8t1XhQRHbvibHWNuYah3xo5Ymgh501WEo6xrricTstkOyK6iaYamOBKPia2cRFhkCrvdA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;638&quot;/&gt;&lt;/p&gt;&lt;h2 data-lake-id=&quot;nTwqV&quot; data-wording=&quot;true&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2 data-lake-id=&quot;nTwqV&quot; data-wording=&quot;true&quot;/&gt;&lt;h2 data-lake-id=&quot;nTwqV&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;K8s 设计模式&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;Kubernetes 是一个具有普遍意义的容器编排工具，它提供了一套基于容器构建分布式系统的基础依赖，其意义等同于 Linux 在操作系统中的地位，可以认为是分布式的操作系统。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3 data-lake-id=&quot;A8Iec&quot; data-wording=&quot;true&quot;&gt;&lt;strong&gt;&lt;span&gt;自定义资源&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;K8s 提供了 Pod、Service、Volume 等一系列基础资源定义，为了更好提供扩展性，CRD 功能是在 1.7 版本被引入。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;用户可以根据自己的需求添加自定义的 Kubernetes 对象资源（CRD）。值得注意的是，这里用户自己添加的 Kubernetes 对象资源都是 native 的都是一等公民，和 Kubernetes 中自带的、原生的那些 Pod、Deployment 是同样的对象资源。在 Kubernetes 的 API Server 看来，它们都是存在于 etcd 中的一等资源。同时，自定义资源和原生内置的资源一样，都可以用 kubectl  来去创建、查看，也享有 RBAC、安全功能。用户可以开发自定义控制器来感知或者操作自定义资源的变化。&lt;/span&gt;&lt;/section&gt;&lt;h3 data-lake-id=&quot;C6CVR&quot; data-wording=&quot;true&quot;&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3 data-lake-id=&quot;C6CVR&quot; data-wording=&quot;true&quot;&gt;&lt;strong&gt;&lt;span&gt;Operator&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;在自定义资源基础上，如何实现自定义资源创建或更新时的逻辑行为，K8s Operator 提供了相应的开发框架。Operator 通过扩展 Kubernetes 定义 Custom Controller，list/watch 对应的自定义资源，在对应资源发生变化时，触发自定义的逻辑。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Operator 开发者可以像使用原生 API 进行应用管理一样，通过声明式的方式定义一组业务应用的期望终态，并且根据业务应用的自身特点进行相应控制器逻辑编写，以此完成对应用运行时刻生命周期的管理并持续维护与期望终态的一致性。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-backh=&quot;378&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.65375&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/qdzZBE73hWtNVLU4cmbWeNGlfmkxXcVuU6MWOR0frjibppjMvEOTX4hZCPIklnHClBYgKj8Au8z1AHhvbTg8mGQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h3 data-lake-id=&quot;jJeCX&quot; data-wording=&quot;true&quot;&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3 data-lake-id=&quot;jJeCX&quot; data-wording=&quot;true&quot;&gt;&lt;strong&gt;&lt;span&gt;通俗的理解&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;CRD 是 K8s 标准化的资源扩展能力，以 Java 为例，int、long、Map、Object 是 Java 内置的类，用户可以自定义 Class 实现类的扩展，CRD 就是 K8s 中的自定义类，CR 就是对应类的一个 instance。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Operator 模式 = 自定义类 + 观察者模式，Operator 模式让大家编写 K8s 的扩展变得非常简单快捷，逐渐成为面向 K8s 设计的标准。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Operator 提供了标准化的设计流程：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;ol lake-indent=&quot;0&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;使用 SDK 创建一个新的 Operator 项目；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;通过添加自定义资源（CRD）定义新的资源 API；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;指定使用 SDK API 来 watch 的资源；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;自定义 Controller 实现 K8s 协调（reconcile）逻辑；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-lake-id=&quot;LWV6K&quot; data-wording=&quot;true&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2 data-lake-id=&quot;LWV6K&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h2 data-lake-id=&quot;LWV6K&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;有了锤子，看到的只有钉子&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们团队（KubeOne 团队）一直在致力于解决复杂中间件应用如何部署到 K8s，自然也是 Operator 模式的践行者。经历了近 2 年的开发，初步解决了中间件在各个环境 K8s 的部署，当前中间也走了很多弯路，踩了很多坑。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;KubeOne 内核也经历 3 个大版本的迭代，前 2 次开发过程基本都是 follow Operator 标准开发流程进行开发设计。遵循一个标准的、典型的 Operator 的设计过程，看上去一切都是这么的完美，但是每次设计都非常痛苦，践行 Operator 模式之后，最值得反思和借鉴的就是”有了锤子，看到的只有钉子，简单总结一下就是 4 个一切：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;ol lake-indent=&quot;0&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;一切设计皆 YAML；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;一切皆合一；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;一切皆终态；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;一切交互皆 cr。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-lake-id=&quot;6vJv6&quot; data-wording=&quot;true&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2 data-lake-id=&quot;6vJv6&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h2 data-lake-id=&quot;6vJv6&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;误区1：一切设计皆 YAML&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;K8s 的 API 是 YAML 格式，Operator 设计流程也是让大家首先定义 CRD，所以团队开始设计时直接采用了 YAML 格式。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3 data-lake-id=&quot;OIrqU&quot; data-wording=&quot;true&quot;&gt;&lt;strong&gt;&lt;span&gt;案例&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;根据标准化流程，团队面向 YAML 设计流程大体如下：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;ol lake-indent=&quot;0&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;先根据已知的数据初步整理一个大而全的 YAML，做一下初步的分类，例如应用大概包含基础信息，依赖服务，运维逻辑，监控采集等，每个分类做一个子部分。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;开会讨论具体的内容是否能满足要求，结果每次开会都难以形成共识。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-lake-id=&quot;659784ebcf5b9a15fcc27f020fc617dd&quot; lake-indent=&quot;1&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;ul lake-indent=&quot;0&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;因为总是有新的需求满足不了，在讨论A时，就有人提到 B、C、D，不断有新的需求；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;每个部分的属性非常难统一，因为不同的实现属性差异较大；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;理解不一致，相同名字但使用时每个人的理解也不同；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ol start=&quot;3&quot; lake-indent=&quot;0&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;由于工期很紧，只能临时妥协，做一个中间态，后面再进一步优化。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;后续优化升级，相同的流程再来一遍，还是很难形成共识。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这是第 2 个版本的设计：&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;apiVersion: apps.mwops.alibaba-inc.com/v1alpha1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;kind: AppDefinition&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;metadata:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  labels:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    app: &quot;A&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  name: A-1.0 //chart-name+chart-version&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  namespace: kubeone&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;spec:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  appName: A  //chart-name&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  version: 1.0 //chart-version&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  type: apps.mwops.alibaba-inc.com/v1alpha1.argo-helm&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  workloadSettings:   //注 workloadSettings 标识type应该使用的属性&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: &quot;deployToK8SName&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: &quot;&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: &quot;deployToNamespace&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: ${resources:namespace-resource.name}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  parameterValues:   //注 parameterValues标识业务属性&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: &quot;enableTenant&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: &quot;1&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: &quot;CPU&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: &quot;1&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: &quot;MEM&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: &quot;2Gi&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: &quot;jvm&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: &quot;flag;gc&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: vip.fileserver-edas.ip&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: ${resources:fileserver_edas.ip}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: DB_NAME&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      valueFromConfigMap:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        name: ${resources:rds-resource.cm-name}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        expr: ${database}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: DB_PASSWORD&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      valueFromSecret:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          name: ${instancename}-rds-secret&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          expr: ${password}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: object-storage-endpoint&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: ${resources:object-storage.endpoint}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: object-storage-username&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      valueFromSecret:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          name: ${resources:object-storage.secret-name}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          expr: ${username}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: object-storage-password&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      valueFromSecret:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          name: ${resources:object-storage.secret-name}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          expr: ${password}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: redis-endpoint&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: ${resources:redis.endpoint}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: redis-password&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: ${resources:redis.password}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  resources:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      - name: tolerations&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        type: apps.mwops.alibaba-inc.com/tolerations&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        parameterValues:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;           - name: key&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;             value: &quot;sigma.ali/is-ecs&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;           - name: key&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;             value: &quot;sigma.ali/resource-pool&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      - name: namespace-resource&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        type: apps.mwops.alibaba-inc.com/v1alpha1.namespace&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        parameterValues:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: name&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: edas&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      - name: fileserver-edas&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        type: apps.mwops.alibaba-inc.com/v1alpha1.database.vip&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        parameterValues:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: port&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: 21,80,8080,5000&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: src_port&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: 21,80,8080,5000&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: type&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: ClusterIP&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: check_type&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: &quot;&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: uri&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: &quot;&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: ip&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: &quot;&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      - name: test-db&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        type: apps.mwops.alibaba-inc.com/v1alpha1.database.mysqlha&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        parameterValues:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: name&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: test-db&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: user&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: test-user&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: password&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: test-passwd&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: secret&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: test-db-mysqlha-secret&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      - name: service-slb&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        type: apps.mwops.alibaba-inc.com/v1alpha1.slb&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        mode: post-create&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        parameterValues:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: service&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: &quot;serviceA&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: annotations&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: &quot;app:a,version:1.0&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: external-ip&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      - name: service-resource2&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        type: apps.mwops.alibaba-inc.com/v1alpha1.service&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        parameterValues: &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: second-domain&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: edas.console&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: ports&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: &quot;80:80&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: selectors&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: &quot;app:a,version:1.0&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: type&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: &quot;loadbalance&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      - name: service-dns&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        type: apps.mwops.alibaba-inc.com/v1alpha1.dns&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        parameterValues:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: domain&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: edas.server.${global:domain}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: vip&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: ${resources:service-resource2.EXTERNAL-IP}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      - name: dns-resource&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        type: apps.mwops.alibaba-inc.com/v1alpha1.dns&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        parameterValues:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: domain&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: edas.console.${global:domain}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: vip&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: “127.0.0.1”&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      - name: cni-resource&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        type: apps.mwops.alibaba-inc.com/v1alpha1.cni&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        parameterValues:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: count&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: 4&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: ip_list&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      - name: object-storage&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        type: apps.mwops.alibaba-inc.com/v1alpha1.objectStorage.minio&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        parameterValues:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: namespace&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: test-ns&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: username&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: test-user&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: password&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: test-password&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: storage-capacity&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: 20Gi&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: secret-name&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: minio-my-store-access-keys&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: endpoint&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: minio-instance-external-service&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      - name: redis&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        type: apps.mwops.alibaba-inc.com/v1alpha1.database.redis&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        parameterValues:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: cpu&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: 500m&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: memory&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: 128Mi&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: password&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: i_am_a_password&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: storage-capacity&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: 20Gi&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: endpoint&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: redis-redis-cluster &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      - name: accesskey&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        type: apps.mwops.alibaba-inc.com/v1alpha1.accesskey&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        parameterValues:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: name&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: default&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: userName&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: ecs_test@aliyun.com&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  exposes:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: dns&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: ${resources:dns-resource.domain}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: db-endpoint&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      valueFromConfigmap:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        name: ${resources:rds-resource.cm-name}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        expr: ${endpoint}:3306/${database}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: ip_list&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: ${resources:cni-resource.ip_list}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: object-storage-endpoint&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: ${resources:object-storage.endpoint}.${resource:namespace-resource.name}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: object-storage-username&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      valueFromSecret:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          name: ${resources:object-storage.secret-name}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          expr: ${username}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: object-storage-password&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      valueFromSecret:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          name: ${resources:object-storage.secret-name}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          expr: ${password}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: redis-endpoint&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: ${resources:redis.endpoint}.${resource:namespace-resource.name}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: redis-password&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: ${resources:redis.password}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h3 data-lake-id=&quot;63AxB&quot; data-wording=&quot;true&quot;&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3 data-lake-id=&quot;63AxB&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;反思&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;这样的痛苦难以用语言表达，感觉一切都脱离了掌控，没有统一的判断标准，设计标准，公说公有理婆说婆有理，内容一直加，字段一直改。事不过三，第三次设计时，我们集体讨论反思为什么这么难形成共识？为什么每个人理解不同？为什么总是在改？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;结论很一致，没有面向 YAML 的设计，只有面向对象的设计，设计语言也只有 UML，只有这些历经考验、成熟的设计方法论，才是最简单也是最高效的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;从上面那个一个巨大无比的 YAML 大家可以体会我们设计的复杂，但是这还是不是最痛苦的。最痛苦的是大家抛弃了原有的设计流程及设计语言，试图使用一个开放的 Map 来描述一切。当设计没有对象，也没有关系，只剩下 Map 里一个个属性，也就无所谓对错，也无所谓优劣。最后争来争去，最后不过是再加一个字段，争了一个寂寞。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3 data-lake-id=&quot;xJkJO&quot; data-wording=&quot;true&quot;&gt;&lt;strong&gt;&lt;span&gt;适用范围&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;那 Operator 先设计 CRD，再开发 controller 的方式不正确吗？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;答案：部分正确。&lt;/span&gt;&lt;/section&gt;&lt;h4 data-lake-id=&quot;2uWvL&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4 data-lake-id=&quot;2uWvL&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;1、适用场景&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;与 Java Class 相同，简单对象不需要经过复杂的设计流程，直接设计 YAML 简单高效。&lt;/span&gt;&lt;/section&gt;&lt;h4 data-lake-id=&quot;NBecT&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4 data-lake-id=&quot;NBecT&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;2、不适用场景&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;在设计一个复杂的体系时，例如：应用管理，包含多个对象且对象之间有复杂的关系，有复杂的用户故事，UML 和面向对象的设计就显得非常重要。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;设计时只考虑 UML 和领域语言，设计完成后，CRD 可以认为是 Java 的 Class，或者是数据库的表结构，只是最终要实现时的一种选择。而且有很多对象不需要持久化，也不需要通过 Operator 机制触发对应的逻辑，就不需要设计 CRD，而是直接实现一个 controller 即可。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;YAML 是接口或 Class 声明的一种格式化表达，常规 YAML 要尽可能小，尽可能职责单一，尽可能抽象。复杂的 YAML 是对简单 CRD 资源的一种编排结果，提供类似一站式资源配套方案。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在第 3 个版本及 PaaS-Core 设计时，我们就采取了如下的流程：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;ol lake-indent=&quot;0&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;UML 用例图；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;梳理用户故事；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;基于用户故事对齐 Domain Object，确定关键的业务对象以及对象间关系；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;需要 Operator 化的对象，每个对象描述为一个 CRD，当然 CRD 缺乏接口、继承等面向对象的能力，可以通过其他方式曲线表达；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;不需要 Operator 化的对象，直接编写 Controller；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-lake-id=&quot;Q3cf0&quot; data-wording=&quot;true&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2 data-lake-id=&quot;Q3cf0&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h2 data-lake-id=&quot;Q3cf0&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;误区2：一切皆合一&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;为了保证一个应用的终态，或者为了使用 gitops 管理一个应用，是否应该把应用相关的内容都放入一个 CRD 或一个 IAC 文件？根据 gitops 设计，每次变更时需要下发整个文件？&lt;/span&gt;&lt;/section&gt;&lt;h2 data-lake-id=&quot;jJhHh&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h2 data-lake-id=&quot;jJhHh&quot; data-wording=&quot;true&quot;&gt;&lt;strong&gt;&lt;span&gt;案例&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;案例1: 应用 WordPress，需要依赖一个 MySQL，终态如何定义?&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;apiVersion: apps.mwops.alibaba-inc.com/v1alpha1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;kind: AppDefinition&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;metadata:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  labels:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    app: &quot;WordPress&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  name: WordPress-1.0 //chart-name+chart-version&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  namespace: kubeone&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;spec:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  appName: WordPress  //chart-name&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  version: 1.0 //chart-version&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  type: apps.mwops.alibaba-inc.com/v1alpha1.argo-helm&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  parameterValues:   //注 parameterValues标识业务属性&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: &quot;enableTenant&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: &quot;1&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: &quot;CPU&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: &quot;1&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: &quot;MEM&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: &quot;2Gi&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: &quot;jvm&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: &quot;flag;gc&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: replicas&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        value: 3&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: connectstring&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      valueFromConfigMap:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        name: ${resources:test-db.exposes.connectstring}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        expr: ${connectstring}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: db_user_name&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      valueFromSecret:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          ....&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  resources:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        - name: test-db //创建一个新的DB&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        type: apps.mwops.alibaba-inc.com/v1alpha1.database.mysqlha&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        parameterValues:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: cpu&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: 2&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: memory&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: 4G&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: storage&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: 20Gi &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: username&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: myusername&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: password&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: i_am_a_password&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            - name: dbname&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            value: wordPress&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         exposes:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: connectstring&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: username&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          - name: password&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  exposes:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: dns&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: ...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;上方的代码是 wordPress 应用的终态吗？这个文件包含了应用所需要的 DB 的定义和应用的定义，只要一次下发就可以先创建对应的数据库，再把应用拉起。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;案例2：每次变更时，直接修改整个 yaml 的部分内容，修改后直接下发到 K8s，引起不必要的变更。例如：要从 3 个节点扩容到 5 个节点，修改上面 YAML 文件的 replicas 之后，需要下发整个 YAML。整个下发的 YAML 经过二次解析成底层的 StatefulSet 或 Deployment，解析逻辑升级后，可能会产生不符合预期的变化，导致所有 Pod 重建。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h2 data-lake-id=&quot;ouFmT&quot; data-wording=&quot;true&quot;&gt;&lt;strong&gt;&lt;span&gt;反思&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;先回答第一个问题，上方 YAML 文件不是应用的终态，而是一个编排，此编排包含了 DB 的定义和应用的定义。应用的终态只应该包含自己必须的依赖引用，而不包含依赖是如何创建的。因为这个依赖引用可以是新创建的，也可以是一个已有的，也可以是手工填写的，依赖如何创建与应用终态无关。&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;apiVersion: apps.mwops.alibaba-inc.com/v1alpha1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;kind: AppDefinition&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;metadata:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  labels:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    app: &quot;WordPress&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  name: WordPress-1.0 //chart-name+chart-version&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  namespace: kubeone&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;spec:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  appName: WordPress  //chart-name&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  version: 1.0 //chart-version&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  name: WordPress-test&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  type: apps.mwops.alibaba-inc.com/v1alpha1.argo-helm&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  parameterValues:   //注 parameterValues标识业务属性&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - ....&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  resources:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: test-db-secret&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        value: &quot;wordPress1Secret&quot; //引用已有的secret  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  exposes:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - name: dns&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      value: ...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;创建一个应用，就不能先创建 db，再创建应用吗？&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;可以的，多个对象之间依赖是通过编排实现的。编排有单个应用创建的编排，也有一个复杂站点创建的编排。以 Argo 为例：&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;apiVersion: argoproj.io/v1alpha1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;kind: Workflow&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;metadata:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  generateName: wordPress-&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;spec:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  templates:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  - name: wordPress&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    steps:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 创建db&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    - - name: wordpress-db&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      template: wordpress-db&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      arguments:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         parameters: [{name: wordpress-db1}]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  # 创建应用&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     - - name: &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     template: wordpress&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     arguments:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        parameters: [{db-sercet: wordpress-db1}]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;针对第 2 个案例，是否每次交互都需要下发全部完整的 YAML？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;答案： &lt;/span&gt;&lt;/section&gt;&lt;ol lake-indent=&quot;0&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;编排是一次性的配置，编排文件下发一次之后，后续操作都是操作单个对象，例如：变更时，只会单独变更 wordPress，或单独变更 wordPressDB，而不会一次性同时变更 2 个对象。 &lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;单独变更应用时，是否需要下发整个终态 YAML，这个要根据实际情况进行设计，值得大家思考。后面会提出针对整个应用生命周期状态机的设计，里面有详细的解释。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-lake-id=&quot;1hzmU&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3 data-lake-id=&quot;1hzmU&quot; data-wording=&quot;true&quot;&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;h3 data-lake-id=&quot;1hzmU&quot; data-wording=&quot;true&quot;&gt;&lt;strong&gt;&lt;span&gt;适用范围&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;h4 data-lake-id=&quot;jgieg&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4 data-lake-id=&quot;jgieg&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;1、适用场景&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;CRD 或 IAC 定义时，单个对象的终态只应该包含自身及对依赖的引用。与面向对象的设计相同，我们不应该把所有类的定义都放到一个 Class 里面。&lt;/span&gt;&lt;/section&gt;&lt;h4 data-lake-id=&quot;bwUlo&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4 data-lake-id=&quot;bwUlo&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;2、不适用场景&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;多个对象要一次性创建，并且需要按照顺序创建，存在依赖关系，需要通过编排层实现。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h2 data-lake-id=&quot;haLwm&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;误区3：一切皆终态&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;体验了 K8s 的终态化之后，大家在设计时言必称终态，仿佛不能用上终态设计，不下发一个 YAML 声明对象的终态就是落伍，就是上一代的设计。&lt;/span&gt;&lt;/section&gt;&lt;h3 data-lake-id=&quot;5ohXP&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3 data-lake-id=&quot;5ohXP&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;案例&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;案例1：应用编排&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;还是以 WordPress 为例，将 WordPressDB 和 WordPress 放在一起进行部署，先部署 DB，再创建应用。示例 YAML 同上。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;案例2：应用发布&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;应用第一次部署及后续的升级直接下发一个完整的应用 YAML，系统会自动帮你到达终态。但为了能够细粒度控制发布的流程，努力在 Deployment 或 StatefulSet 上下功夫，进行 partition 的控制，试图在终态里增加一点点的交互性。&lt;/span&gt;&lt;/section&gt;&lt;h3 data-lake-id=&quot;zFbTa&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3 data-lake-id=&quot;zFbTa&quot; data-wording=&quot;true&quot;&gt;&lt;strong&gt;&lt;span&gt;反思&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;说到终态，必然要提到命令式、声明式编程，终态其实就是声明式最终的执行结果。我们先回顾一下命令式、终态式编程。&lt;/span&gt;&lt;/section&gt;&lt;h4 data-lake-id=&quot;TehWo&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4 data-lake-id=&quot;TehWo&quot; data-wording=&quot;true&quot;&gt;&lt;strong&gt;&lt;span&gt;1、命令式编程&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;命令式编程的主要思想是关注计算机执行的步骤，即一步一步告诉计算机先做什么再做什么。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;比如：如果你想在一个数字集合 collection(变量名) 中筛选大于 5 的数字，你需要这样告诉计算机：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;代码实现如下：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;php&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;List results = new List();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;foreach(var num in collection)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;if (num &amp;gt; 5)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;results.Add(num);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;很明显，这个样子的代码是很常见的一种，不管你用的是 C、C++ 还是 C#、Java、Javascript、BASIC、Python、Ruby 等，你都可以以这个方式写。&lt;/span&gt;&lt;/section&gt;&lt;h4 data-lake-id=&quot;eihhA&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4 data-lake-id=&quot;eihhA&quot; data-wording=&quot;true&quot;&gt;&lt;strong&gt;&lt;span&gt;2、声明式编程&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;声明式编程是以数据结构的形式来表达程序执行的逻辑。它的主要思想是告诉计算机应该做什么，但不指定具体要怎么做。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;SQL 语句就是最明显的一种声明式编程的例子，例如：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;SELECT * FROM collection WHERE num &amp;gt; 5&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;除了 SQL，网页编程中用到的 HTML 和 CSS 也都属于声明式编程。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;通过观察声明式编程的代码我们可以发现它有一个特点是它不需要创建变量用来存储数据。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;另一个特点是它不包含循环控制的代码如 for， while。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;换言之：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;当接口越是在表达“要什么”，就是越声明式；越是在表达“要怎样”，就是越命令式。SQL就是在表达要什么（数据），而不是表达怎么弄出我要的数据，所以它就很“声明式”。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;简单的说，接口的表述方式越接近人类语言——词汇的串行连接（一个词汇实际上是一个概念）——就越“声明式”；越接近计算机语言——“顺序+分支+循环”的操作流程——就越“命令式”。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;越是声明式，意味着下层要做更多的东西，或者说能力越强，也意味着效率的损失。越是命令式，意味着上层对下层有更多的操作空间，可以按照自己特定的需求要求下层按照某种方式来处理。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;简单的讲，Imperative Programming Language (命令式语言)一般都有 control flow, 并且具有可以和其他设备进行交互的能力。而 Declarative Programming language (声明式语言) 一般做不到这些。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;基于以上的分析，编排或工作流本质是一个流程性控制的过程，一般是一次性的过程，无需强行终态化，而且建站编排执行结束后，不能保持终态，因为后续会根据单个应用进行发布和升级。案例1是一个典型的编排，只是一次性的创建了 2 个对象 DB 和应用的终态。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-backh=&quot;392&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.6774691358024691&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/qdzZBE73hWtNVLU4cmbWeNGlfmkxXcVuOiboWGmTjlZblWBepHDD58TEZWzBTPUSH6aXKf1KCLxSsYlgibyiatOwQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1296&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;应用发布其实是通过一个发布单或工作流，控制 2 个不同版本的应用节点和流量的终态化的过程，不应该是应用终态的一部分，而是一个独立的控制流程。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-backh=&quot;396&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.6856649395509499&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/qdzZBE73hWtNVLU4cmbWeNGlfmkxXcVuszed8LmkPAOWBDT2yMaHiaJKibvfItcvUQYSrnByLialKlm7m25eBXvWQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1158&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h3 data-lake-id=&quot;qbdsx&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;适用范围&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;声明式或终态设计。&lt;/span&gt;&lt;/section&gt;&lt;h4 data-lake-id=&quot;xNVdx&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4 data-lake-id=&quot;xNVdx&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;1、适用场景&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;无过多交互，无需关注底层实现的场景，即把声明提供给系统后，系统会自动化达到声明所要求的状态，而不需要人为干预。&lt;/span&gt;&lt;/section&gt;&lt;h4 data-lake-id=&quot;YhEt2&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4 data-lake-id=&quot;YhEt2&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;2、不适用场景&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;一次性的流程编排，有频繁交互的控制流程。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;命令式和声明式本就是 2 种互补的编程模式，就像有了面向对象之后，有人就鄙视面向过程的编程，现在有了声明式，就开始鄙视命令式编程，那一屋！&lt;/span&gt;&lt;/section&gt;&lt;h2 data-lake-id=&quot;4e5gq&quot; data-wording=&quot;true&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2 data-lake-id=&quot;4e5gq&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h2 data-lake-id=&quot;4e5gq&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;误区4：一切交互皆 cr&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;因为 K8s 的 API 交互只能通过 YAML，导致大家的设计都以 cr 为中心，所有的交互都设计为下发一个 cr，通过 watch cr 触发对应的逻辑。&lt;/span&gt;&lt;/section&gt;&lt;h3 data-lake-id=&quot;wXFmn&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3 data-lake-id=&quot;wXFmn&quot; data-wording=&quot;true&quot;&gt;&lt;strong&gt;&lt;span&gt;案例&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h3 data-lake-id=&quot;IqaqL&quot; data-wording=&quot;true&quot;&gt;&lt;strong&gt;&lt;span&gt;反思&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;h4 data-lake-id=&quot;Ukwjf&quot; data-wording=&quot;true&quot;&gt;&lt;strong&gt;&lt;span&gt;案例1：&lt;/span&gt;是否所有的逻辑都需要下发一个 cr？&lt;/strong&gt;&lt;/h4&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;下发 cr 其实做了比较多的事情，流程很长，效率并不高，流程如下：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-backh=&quot;233&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.4033333333333333&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/qdzZBE73hWtNVLU4cmbWeNGlfmkxXcVug1K1vIzFD6ia2jIic4U0lakZIlqdhks1pKswyFRWxyStFcpA1UPe9IEA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1500&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果需要频繁的调用对应的接口，尽量通过 sdk 直接调用。&lt;/span&gt;&lt;/section&gt;&lt;h4 data-lake-id=&quot;DdFTU&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4 data-lake-id=&quot;DdFTU&quot; data-wording=&quot;true&quot;&gt;&lt;strong&gt;&lt;span&gt;案例2：&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;K8s 对 YAML 操作命令有 create、apply、patch、delete、get 等，但一个应用的生命周期状态机不只是这几个命令可以涵盖，我们比较一下应用状态机（上）和 YAML 状态机（下）：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-backh=&quot;468&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.8091286307053942&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/qdzZBE73hWtNVLU4cmbWeNGlfmkxXcVuXLibuibtMWOnkwvZBF6zQx5D4JamHbIS5YUCaj2QSA9J5Vibeffd5wgFQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;964&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;不同的有状态应用，在收到不同的指令，需要触发不同的逻辑，例如：MQ 在收到 stop 指令时，需要先停写，检查数据是否消费完成。如果只是通过 YAML 状态机是无法涵盖应用状态机相关的 event，所以我们必须打破下发 cr 的模式。对于应用来说，理想的交互方式是通过 event driven 应用状态机的变化，状态发生变换时触发对应的逻辑。&lt;/span&gt;&lt;/section&gt;&lt;h3 data-lake-id=&quot;PPsZp&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3 data-lake-id=&quot;PPsZp&quot; data-wording=&quot;true&quot;&gt;&lt;strong&gt;&lt;span&gt;适用范围&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;h4 data-lake-id=&quot;i9xUF&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;1、适用场景&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;需要持久化，保持终态的数据。&lt;/span&gt;&lt;/section&gt;&lt;h4 data-lake-id=&quot;OG6jL&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4 data-lake-id=&quot;OG6jL&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;2、不适用场景&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;高频的服务调用，无需持久化的数据。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;复杂状态机的驱动。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2 data-lake-id=&quot;sM6Bn&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;K8s 给我们打开了一扇门，带给了我们很多优秀的设计，优秀的理念，但是这些设计和理念也是有自己的适用的场景，并不是放之四海而皆准。我们不应该盲从，试图一切都要 follow K8s 的设计和规则，而抛弃之前的优秀设计理念。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;软件设计经历了 10 多年的发展，形成了一套行之有效的设计方法论，K8s 也是在这些设计方法论的支持下设计出来的。取其精华去其糟粕，是我们程序员应该做的事情。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;参考文章:&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;ol lake-indent=&quot;0&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;揭秘 Kubernetes Operator：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;http://www.dockone.io/article/8769&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;声明式编程和命令式编程有什么区别 :&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;https://www.zhihu.com/question/22285830&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;如何在 Kubernetes 中编写自定义控制器:&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;https://www.sohu.com/a/363619791_198222&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;﹀&lt;/p&gt;&lt;p data-mid=&quot;&quot;&gt;﹀&lt;/p&gt;&lt;p data-mid=&quot;&quot;&gt;﹀&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-recommend-type=&quot;list-normal&quot; data-recommend-tid=&quot;2&quot; data-mpa-template=&quot;t&quot; data-mid=&quot;&quot; data-from=&quot;yb-recommend&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247493454_3&quot; data-recommend-article-time=&quot;1616026800&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/sz_mmbiz_jpg/qdzZBE73hWsrJZ7JR3oRkAoRkNRWcOxgg7WVSfB5CXOibSWcBx9G0FDvmEYVguz2MFCNscSTSf9uyIUtXajY3mg/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;关于企业容器安全问题的思考&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzU4NzU0MDIzOQ==&amp;amp;mid=2247493454&amp;amp;idx=3&amp;amp;sn=56c3295662aff6633a4a428a58275715&amp;amp;chksm=fde8d52eca9f5c3808e3805cc038e5796dd4af3b75e3d0f2b093cc8a86206211fcef39f33680#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4NzU0MDIzOQ==&amp;amp;mid=2247493454&amp;amp;idx=3&amp;amp;sn=56c3295662aff6633a4a428a58275715&amp;amp;chksm=fde8d52eca9f5c3808e3805cc038e5796dd4af3b75e3d0f2b093cc8a86206211fcef39f33680&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;关于企业容器安全问题的思考&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;1.0058754406580495&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/qdzZBE73hWsrJZ7JR3oRkAoRkNRWcOxgg7WVSfB5CXOibSWcBx9G0FDvmEYVguz2MFCNscSTSf9uyIUtXajY3mg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;851&quot;/&gt;&lt;/span&gt; &lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247492820_4&quot; data-recommend-article-time=&quot;1614387600&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/sz_mmbiz_jpg/qdzZBE73hWtBQcakDwCdKAwhchoKYnQXm2RL0LBx5NxsK24TZud8sNr7BPhBiajwaiaqKD9slAFHlzCkXviaJAbXA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;电商直播平台如何借助容器与中间件实现研发效率提升100%？&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzU4NzU0MDIzOQ==&amp;amp;mid=2247492820&amp;amp;idx=4&amp;amp;sn=286061eceff06033a8a81d1318efc57f&amp;amp;chksm=fde8d6b4ca9f5fa224bd97336f652483419e76690df68e54cc11cc0210d795c8403ee3a4da9d#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4NzU0MDIzOQ==&amp;amp;mid=2247492820&amp;amp;idx=4&amp;amp;sn=286061eceff06033a8a81d1318efc57f&amp;amp;chksm=fde8d6b4ca9f5fa224bd97336f652483419e76690df68e54cc11cc0210d795c8403ee3a4da9d&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;电商直播平台如何借助容器与中间件实现研发效率提升100%？&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;1.0023501762632196&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/qdzZBE73hWtBQcakDwCdKAwhchoKYnQXm2RL0LBx5NxsK24TZud8sNr7BPhBiajwaiaqKD9slAFHlzCkXviaJAbXA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;851&quot;/&gt;&lt;/span&gt; &lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247492754_1&quot; data-recommend-article-time=&quot;1614232075&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/sz_mmbiz_jpg/qdzZBE73hWuCEibLUKIZ5GNOeOtBJRIxaEL3IE6J9e5fwuqYy5V2Rw3OJOWu02Vj173IAoUhWKGYZiaVib19CD9DQ/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;应云而生，幽灵的威胁 - 云原生应用交付与运维的思考&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzU4NzU0MDIzOQ==&amp;amp;mid=2247492754&amp;amp;idx=1&amp;amp;sn=b693847ec583baaf27061bdcf7ad760a&amp;amp;chksm=fde8d6f2ca9f5fe44a28ba924d77b241b1a48fec4f8e386e8d60679dc9ea00cf0887c6f289d2#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4NzU0MDIzOQ==&amp;amp;mid=2247492754&amp;amp;idx=1&amp;amp;sn=b693847ec583baaf27061bdcf7ad760a&amp;amp;chksm=fde8d6f2ca9f5fe44a28ba924d77b241b1a48fec4f8e386e8d60679dc9ea00cf0887c6f289d2&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;应云而生，幽灵的威胁 - 云原生应用交付与运维的思考&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.428125&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/qdzZBE73hWuCEibLUKIZ5GNOeOtBJRIxaEL3IE6J9e5fwuqYy5V2Rw3OJOWu02Vj173IAoUhWKGYZiaVib19CD9DQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/span&gt; &lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-id=&quot;92877&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-width=&quot;100%&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-brushtype=&quot;text&quot; mpa-from-tpl=&quot;t&quot;&gt;点个在看，让更多人看见&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7d90dd5cd5e91c67439926cacc83edc2</guid>
<title>写给开发人员的实用密码学：数字证书</title>
<link>https://toutiao.io/k/nvqjbvt</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在数字签名部分，我们讲到数字签名可以起到“防抵赖”的作用。然而，在开放的互联网环境中，通信的双方通常是互不相识，数字签名并不能解决身份认证的问题。比如在数字签名中，私钥签名，公钥验证签名。如果有人冒充淘宝给了你公钥，对方持有假冒公钥对应的私钥，这种情况下签名、验签都没问题，但你是在和一个假的淘宝通信。退一步说，你开始拿到的确实是淘宝发布的公钥，如果有人偷偷替换掉了你的机器上的公钥，这样你实际拥有的是李鬼的公钥，但是还以为这是淘宝的公钥。因此，李鬼就可以冒充淘宝，用自己的私钥做成&quot;数字签名&quot;，写信给你，而你则使用假的公钥进行解密。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在现实生活中，我们通常使用身份证或者护照来证明自己的身份，而在虚拟的网络世界，则需要使用数字证书。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很多人可能听说过 X.509 证书，它实际上就是一种数字证书。数字证书标准有很多，但使用最广泛的就是 X.509 标准，以至于现在一般将数字证书等同于X.509证书。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;X.509标准&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;PKI（Public Key Infrastructure，称为公钥基础设施）是一个集合体，由一系列的软件、硬件、组织、个体、法律、流程组成，主要目的就是向客户端提供服务器身份认证。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了规范化运用PKI技术，出现了很多标准，HTTPS中最常用的标准就是X.509标准。X.509标准来自国际电信联盟电信标准（ITU-T）的X.500标准，1995年国际互联网工程任务组（IETF）的PKIX小组成立，用来建设互联网的PKI公钥基础设施标准，建立的标准就是X.509。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;互联网大部分应用（比如HTTPS协议、S/MIME邮件协议）使用的证书标准就是X.509标准，该标准可以参考RFC 5280文档。其他的组织也会基于X.509标准构建自己的PKI标准，比如IPsec使用自己的PKI标准，该标准定义在RFC 4945文档。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从中可以看出，PKI涉及的领域比较广泛，是一个相对松散的概念，一般来说，我们重点关注X.509的PKI标准即可。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据PKI X.509标准，PKI组成下所示。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5037406483790524&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibQ4mtgHYXv6Yh00bERdZPRzibDnR6w0Pic3pLGYWoVOrLosSwGQOcj6p6UdcE8ZGWxy4F0pkWZPYsGkibaoXZic3Ag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;401&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（1）服务器实体（end entity），就是需要申请证书的实体，比如www.example.com域名的拥有者可以申请一张证书，证书能够证明www.example.com域名所有者的身份。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（2）CA机构，CA是证书签发机构，在审核服务器实体的有效身份后，给其签发证书，证书是用CA机构的密钥对（比如RSA密钥对）对服务器实体证书进行签名。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（3）RA机构，注册机构，主要审核服务器实体的身份，一般情况下，可以认为CA机构包含了RA机构。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（4）证书仓库，CA机构签发的证书全部保存在仓库中，证书也可能过期或者被吊销，CA机构吊销的证书称为证书吊销列表CRL（Certificate Revocation List）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（5）证书校验方（relying party），校验证书真实性的软件，在Web领域，读者最熟悉的证书校验方就是浏览器。在本书中，浏览器、客户端、证书校验方可以认为是同一个概念。为了进行校验，证书校验方必须充分信任第三方CA机构，证书校验方集成了各个CA机构的根证书。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;X.509标准包含的内容非常广泛，内容如下：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（1）证书的作用，第三方认证机构为服务器实体（end entity）签发证书，证书校验方可以使用证书对服务器实体的身份进行认证。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（2）证书文件的结构，证书是一个文件，理解证书的结构、属性、值非常重要。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（3）管理证书，服务器实体（end entity）向CA机构申请证书的流程，CA机构审核服务器实体身份的标准，签发证书的流程。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（4）校验证书，通过严谨的步骤校验证书，或者说校验服务器实体（end entity）身份，涉及两部分内容，一部分是证书签名校验，涉及证书链的概念。另外一部分是校验服务器实体属性，比如证书包含的域名、证书有效期等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（5）证书的撤销问题，包括CRL和OCSP协议等概念。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;证书&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;证书是PKI中最核心的部分，理解了证书等同于理解了PKI的工作原理，证书中包含了很多信息，由签名、服务器实体（end entity）信息、CA机构信息三部分组成。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数字证书可以建立公钥与用户之间的对应关系。数字证书实际上是一种特殊的文件格式，包含用户身份信息、用户公钥和CA私钥的数字签名。数字证书中只包含公钥，并不包括私钥，可以公开。而数字证书中包含CA私钥的签名，所以具有防伪性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;证书是一个文件，用记事本打开，是一堆无意义的数据。理解证书内容必须先明白ASN.1（Abstract Syntax Notation One）的概念。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;ASN.1&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ASN.1是国际电信联盟电信标准（ITU-T）定义的标准，用来结构化描述证书。ASN.1类似于JSON或者XML这样的数据结构。ASN.1定义了复杂的数据结构，通常现有的加密库都包含了ASN.1的编码与解析，网上也可以找到源码，一般没必要完全理解ASN.1内部结构。我们可以将ASN.1看作一种伪代码，是用来描述证书结构的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;X.509是标准，ASN.1也是标准。X.509标准定义了证书应该包含的内容，而借助ASN.1标准来描述X.509标准（或者说证书），可以让机器和人更好地理解和组织X.509标准。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;证书结构&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;证书的主要结构如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt; Certificate ::= SEQUENCE {&lt;br/&gt;     tbsCertificate       TBSCertificate,&lt;br/&gt;     signatureAlgorithm   AlgorithmIdentifier,&lt;br/&gt;     signature            BIT STRING&lt;br/&gt; }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;SEQUENCE是ASN.1中的一个结构体，相当于一个多维数组，数组由多个元素组成，每个元素有一个名称（比如tbsCertificate），名称有对应的属性（比如TBSCertificate），名称的值取决于属性。每个元素还可以嵌套其他的ASN.1结构，比如再嵌套一个SEQUENCE, TBSCertificate结构就是一个SEQUENCE结构。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CA机构对证书进行签名，为了让证书校验方（比如浏览器）进行校验，必须在证书中说明CA机构使用的签名算法。结构中的signatureAlgorithm代表的就是签名算法，signature就是签名值，tbsCertificate就是需要签名的内容，也是证书的核心，包括了服务器实体和CA机构的信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来看TBSCertificate结构，它是证书内容的核心部分。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt; TBSCertificate ::= SEQUENCE {&lt;br/&gt;     version             [0]  Version DEFAULT v1,&lt;br/&gt;     serialNumber             CertificateSerialNumber,&lt;br/&gt;     signature                AlgorithmIdentifier,&lt;br/&gt;     issuer                   Name,&lt;br/&gt;     validity                 Validty,&lt;br/&gt;     subject                  Name,&lt;br/&gt;     subjectPublicKeyInfo     SubjectPublicKeyInfo,&lt;br/&gt;     issuerUniqueID      [1]  IMPLICIT UniqueIdentifier OPTIONAL,&lt;br/&gt;                              -- If present, version MUST be v2 or v3&lt;br/&gt;     subjectUniqueID     [2]  IMPLICIT UniqueIdentifier OPTIONAL,&lt;br/&gt;                              -- If present, version MUST be v2 or v3&lt;br/&gt;     extensions          [3]  Extensions OPTIONAL&lt;br/&gt;                              -- If present, version MUST be v3&lt;br/&gt; }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）version&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;version表示证书的版本号，目前有3个版本（v1, v2, v3），证书校验方（比如浏览器）根据版本进行校验，如果一个证书是v3版本，而证书校验方使用v1版本标准校验必然是错误的。version的类型是Version，结构定义如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt; Version ::= INTEGER { v1(0), V2(1), V3(2) }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Version类型相当于一个枚举整型，有三个整数值可以选择。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）serialNumber&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每个证书都有唯一的编号，对于不同的CA机构来说，编号是无法预测的，CertificateSerialNumber是一个整型类型。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3）signature&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;证书是通过签名算法进行签名的，为了让证书校验方（比如浏览器）验证签名，必须告诉其签名算法，签名算法信息也在TBSCertificate结构体中。签名算法包含两个部分，分别是摘要算法和签名算法。对于ECDSAWithSHA256签名算法来说，ECDSA是签名算法，SHA256是摘要算法。接下来了解在ASN.1中是如何定义的AlgorithmIdentifier类型的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;签名算法标识符AlgorithmIdentifier类型本身也是一个SEQUENCE结构，由两个子元素构成：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt; AlgorithmIdentifier ::= SEQUENCE {&lt;br/&gt;     algorithm    OBJECT IDENTIFIER,&lt;br/&gt;     parameters   ANY DEFINED BY algorithm OPTIONAL&lt;br/&gt; }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;algorithm类型是OBJECT IDENTIFIER(OID)，在X.509中是非常普遍的一种数据结构，简单地理解就是一个字符数组，在《GM/T 0006-2012 密码应用标识规范》中就为国密规范定义了很多OID。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如基于SM2算法和SM3算法的签名的OID为 1.2.156.10197.501&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4）issuer&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代表CA机构的名称，Issuer主要由国家（C）、组织（O）、子组织名（CN）组成&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;5）validity&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CA机构是赢利的组织，证书使用期限越长价格越高，在证书中包括了证书的有效期，证书校验方需要校验证书有效期，如果证书有效期失效，表明证书不能代表服务器实体身份。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;6）subject&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代表服务器实体的名称，该组织向CA机构申请证书，其对应的Name类型和issuer的Name类型是一样的，CN表示服务器实体的域名（比如CN =www.example.com）。对于Web网站来说，每个网站都有一个域名，证书和域名息息相关，早期证书校验方校验证书的时候是将URL中的域名和证书subject值中的CN比较，如果一致，代表证书校验成功。随着时间的推移，一张证书可能包含多个域名，所以不再使用CN来校验证书域名了，而使用SAN证书扩展进行域名校验。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;7）subjectPublicKeyInfo&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务器实体申请证书的时候，包含的一个重要属性就是服务器公钥，该公钥对应的算法就是公开密钥算法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;subjectPublicKeyInfo包含两部分信息，分别是公开密钥算法和公钥值，其对应的类型就是SubjectPublicKeyInfo类型：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt; SubjectPublicKeyInfo ::= SEQUENCE {&lt;br/&gt;     algorithm        AlgorithmIdentifier,&lt;br/&gt;     subjectPublicKey BIT STRING&lt;br/&gt; }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;8）issuerUniqueID和subjectUniqueID&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这两个分别代表CA机构和服务器实体的唯一编号，目前已经被相应的证书扩展替代。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;9）extension&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;扩展是X.509 V3版本引入的，主要是为了扩展证书的含义，在不改变X.509版本的情况下，可以相对方便地增加证书新属性，新添加的扩展是否生效取决于证书校验方。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过证书扩展，CA机构和证书校验方可以在不修改（或者较少修改）代码的前提下使用该扩展，前提是双方都认这个扩展。X.509 V3定义了14个扩展，如果需要额外添加扩展，就需要双方都支持。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;CSR&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CSR是Certificate Signing Request的缩写，服务器实体为了证明自己的身份，需要向CA机构申请证书，在申请证书之前，必须先生成一个CSR文件，然后将CSR文件发送给CA机构。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CSR文件包括两部分内容：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;生成证书必需的信息，比如域名、公钥。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;服务器实体的证明材料，比如企业的纳税编号等信息。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CSR文件采用的标准是PKCS#10，请参考RFC2986。CSR用ASN.1标准描述，整体结构如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;CertificationRequest ::= SEQUENCE {&lt;br/&gt;    certificationRequestInfo   CertificationRequestInfo,&lt;br/&gt;    signatureAlgorithm         AlgorithmIdentifier,&lt;br/&gt;    signature                  BIT STRING&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该结构包含两部分：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;certificationRequestInfo结构表示证书的请求信息。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;签名信息，对certificationRequestInfo的签名。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CertificationRequestInfo的信息需要重点关注，其结构如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;CertificationRequestInfo ::= SEQUENCE {&lt;br/&gt;    version           INTEGER { v1(0) } (v1, ...),&lt;br/&gt;    subject           Name,&lt;br/&gt;    subjectPKInfo     SubjectPublicKeyInfo,&lt;br/&gt;    attributes    [0] Attributes&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;version表示PKCS#10标准的版本号。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;subject表示服务器主体的可分辨名称DN，最重要的是CN属性值，表示证书需要包含的域名，可以包含多个。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;subjectPKInfo表示服务器密钥对的公钥，可以是RSA公钥或国密SM2公钥。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;attributes表示可选信息，比如服务器主体的邮件地址等相关信息。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在证书中，服务器公钥、域名是服务器主体最重要的内容。服务器主体使用该密钥对的私钥对certificationRequestInfo进行数字签名。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;证书生成格式&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ASN.1标准用于描述证书结构，而证书本质上是一个文件，需要一种专门的格式，才能在互联网中传输，证书需要通过一个规则将ASN.1转换为二进制文件。在X.509证书中，使用的编码方式是Distinguished Encoding Rules（DER），ASN.1和DER的关系类似于字符集和编码的关系。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DER是一个二进制文件，为了方便传输，可以将DER转换为PEM（Privacy-enhanced Electronic Mail）格式，PEM是Base64编码方式，以-----BEGINCERTIFICATE-----开头、-----END CERTIFICATE-----结尾。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有一些其它不常用的格式：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;BER。Basic Encoding Rules（BER）是DER的一个子集，&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;CER。Canonical Encoding Rules（CER）是另外一种编码标准，用来编码ASN.1结构。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;PKCS#12格式。微软发布的一种格式，文件后缀一般是．pkcs12、.pfx、.p12。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;PKCS#7格式。证书的另外一种格式，主要用来进行数字签名和数据加密，文件后缀一般是．p7b或者．p7c&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;证书生成过程&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般生成证书的流程为：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;用户生成一对密钥对，比如SM2密钥对。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;生成CSR文件，包含域名、公钥、签名等，发送给CA机构。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;CA机构根据CSR文件生成证书，然后将证书下发给用户。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面制作一张自签名证书为例，说明证书的制作过程。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;生成SM2私钥&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ gmssl ecparam -genkey -name sm2p256v1 -text -out sm2_user.key&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ecparam 表示采用椭圆曲线算法 -name sm2p256v1 指定椭圆曲线名称，这里指定了国密定义的椭圆曲线。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后SM2私钥保存到 sm2_user.key&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ASN1 OID: sm2p256v1&lt;br/&gt;NIST CURVE: SM2&lt;br/&gt;-----BEGIN EC PARAMETERS-----&lt;br/&gt;BggqgRzPVQGCLQ==&lt;br/&gt;-----END EC PARAMETERS-----&lt;br/&gt;-----BEGIN EC PRIVATE KEY-----&lt;br/&gt;MHcCAQEEIONlieRy6aZ0q9o1z7LRii5HScKYIvLVcgaeM0x+FtyXoAoGCCqBHM9V&lt;br/&gt;AYItoUQDQgAECvItoLwmG+Ws1GvLXsJbM+DgRbdY37MRloE6WDn6X/S3l5lKHIAQ&lt;br/&gt;6ZH0QMSqQwg/LdvoI3s80/CMZJHnWqn6pA==&lt;br/&gt;-----END EC PRIVATE KEY-----&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意：SM2私钥本质上是一串随机数，这里还包含了椭圆曲线的一些参数，并进行了PEM编码。&lt;/p&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;创建证书请求：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ gmssl req -new -key sm2_user.key -out sm2_user.req&lt;br/&gt;You are about to be asked to enter information that will be incorporated&lt;br/&gt;into your certificate request.&lt;br/&gt;What you are about to enter is what is called a Distinguished Name or a DN.&lt;br/&gt;There are quite a few fields but you can leave some blank&lt;br/&gt;For some fields there will be a default value,&lt;br/&gt;If you enter &#x27;.&#x27;, the field will be left blank.&lt;br/&gt;-----&lt;br/&gt;Country Name (2 letter code) [CN]:&lt;br/&gt;State or Province Name (full name) [Some-State]:&lt;br/&gt;Locality Name (eg, city) []:&lt;br/&gt;Organization Name (eg, company) [Internet Widgits Pty Ltd]:&lt;br/&gt;Organizational Unit Name (eg, section) []:&lt;br/&gt;Common Name (e.g. server FQDN or YOUR name) []:&lt;br/&gt;Email Address []:&lt;br/&gt;Please enter the following &#x27;extra&#x27; attributes&lt;br/&gt;to be sent with your certificate request&lt;br/&gt;A challenge password []:&lt;br/&gt;An optional company name []:&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里会生成一个CSR，并保存到一个文件中。前面讲过，需要对CertificationRequestInfo进行数字签名，所以命令行需要传入SM2私钥。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到，生成CSR时还要提供一些信息，比如国家、城市、公司名之类的信息，以后查看证书信息时，显示的就是这些信息。这里只是开发测试，所以填写什么内容无关紧要，直接使用默认值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后生成的CSR文件如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;-----BEGIN CERTIFICATE REQUEST-----&lt;br/&gt;MIIBATCBpwIBADBFMQswCQYDVQQGEwJDTjETMBEGA1UECAwKU29tZS1TdGF0ZTEh&lt;br/&gt;MB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMFkwEwYHKoZIzj0CAQYI&lt;br/&gt;KoEcz1UBgi0DQgAECvItoLwmG+Ws1GvLXsJbM+DgRbdY37MRloE6WDn6X/S3l5lK&lt;br/&gt;HIAQ6ZH0QMSqQwg/LdvoI3s80/CMZJHnWqn6pKAAMAoGCCqBHM9VAYN1A0kAMEYC&lt;br/&gt;IQDlPL8JQRMBEM89hOMd2gOSG7bZZjI/bKnub1YO0wrEVAIhAOIR1GsrCG8e1MzU&lt;br/&gt;NQpsv0wKypISh1wdmN86kHzQE/20&lt;br/&gt;-----END CERTIFICATE REQUEST-----&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;生成证书：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ gmssl x509 -req -days 365 -in sm2_user.req -signkey sm2_user.key -out sm2_user_cert.pem&lt;br/&gt;Signature ok&lt;br/&gt;subject=C = CN, ST = Some-State, O = Internet Widgits Pty Ltd&lt;br/&gt;Getting Private key&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;参数中 -days 365 指的是证书的有效期为365天。生成的证书文件如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;-----BEGIN CERTIFICATE-----&lt;br/&gt;MIIBejCCASACCQDzHKj1UYRCVjAKBggqgRzPVQGDdTBFMQswCQYDVQQGEwJDTjET&lt;br/&gt;MBEGA1UECAwKU29tZS1TdGF0ZTEhMB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0cyBQ&lt;br/&gt;dHkgTHRkMB4XDTIxMDMzMTA3Mjk0NloXDTIyMDMzMTA3Mjk0NlowRTELMAkGA1UE&lt;br/&gt;BhMCQ04xEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoMGEludGVybmV0IFdp&lt;br/&gt;ZGdpdHMgUHR5IEx0ZDBZMBMGByqGSM49AgEGCCqBHM9VAYItA0IABAryLaC8Jhvl&lt;br/&gt;rNRry17CWzPg4EW3WN+zEZaBOlg5+l/0t5eZShyAEOmR9EDEqkMIPy3b6CN7PNPw&lt;br/&gt;jGSR51qp+qQwCgYIKoEcz1UBg3UDSAAwRQIhAJRL6l3CeSyoUrWbqFuGqKrIyIjr&lt;br/&gt;5zbtoBM4/26jOPb+AiBohiMRwPnAqIkxG8PS3FFrtsZH11uBZ3vrq3ozhV2G7A==&lt;br/&gt;-----END CERTIFICATE-----&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为进行了PEM编码，看不出里面的内容，我们可以借助工具查看证书内容。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ gmssl x509 -text -in sm2_user_cert.pem -noout&lt;br/&gt;Certificate:&lt;br/&gt;   Data:&lt;br/&gt;       Version: 1 (0x0)&lt;br/&gt;       Serial Number:&lt;br/&gt;           f3:1c:a8:f5:51:84:42:56&lt;br/&gt;   Signature Algorithm: sm2sign-with-sm3&lt;br/&gt;       Issuer: C = CN, ST = Some-State, O = Internet Widgits Pty Ltd&lt;br/&gt;       Validity&lt;br/&gt;           Not Before: Mar 31 07:29:46 2021 GMT&lt;br/&gt;           Not After : Mar 31 07:29:46 2022 GMT&lt;br/&gt;       Subject: C = CN, ST = Some-State, O = Internet Widgits Pty Ltd&lt;br/&gt;       Subject Public Key Info:&lt;br/&gt;           Public Key Algorithm: id-ecPublicKey&lt;br/&gt;               Public-Key: (256 bit)&lt;br/&gt;               pub:&lt;br/&gt;                   04:0a:f2:2d:a0:bc:26:1b:e5:ac:d4:6b:cb:5e:c2:&lt;br/&gt;                   5b:33:e0:e0:45:b7:58:df:b3:11:96:81:3a:58:39:&lt;br/&gt;                   fa:5f:f4:b7:97:99:4a:1c:80:10:e9:91:f4:40:c4:&lt;br/&gt;                   aa:43:08:3f:2d:db:e8:23:7b:3c:d3:f0:8c:64:91:&lt;br/&gt;                   e7:5a:a9:fa:a4&lt;br/&gt;               ASN1 OID: sm2p256v1&lt;br/&gt;               NIST CURVE: SM2&lt;br/&gt;   Signature Algorithm: sm2sign-with-sm3&lt;br/&gt;        30:45:02:21:00:94:4b:ea:5d:c2:79:2c:a8:52:b5:9b:a8:5b:&lt;br/&gt;        86:a8:aa:c8:c8:88:eb:e7:36:ed:a0:13:38:ff:6e:a3:38:f6:&lt;br/&gt;        fe:02:20:68:86:23:11:c0:f9:c0:a8:89:31:1b:c3:d2:dc:51:&lt;br/&gt;        6b:b6:c6:47:d7:5b:81:67:7b:eb:ab:7a:33:85:5d:86:ec&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以对照着前面的证书结构，看看上面的证书内容。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;发一个数字证书这么容易吗？对的，借助工具任何人都可以很容易颁发一个数字证书，至于这个证书别人是不是承认，这个就不是证书本身能解决的了。。。这就如同现实世界中，你也可以给自己颁发一个国际程序员大师，你也可以盖上自己的印，表明此证书确实是你颁发的。剩下的问题就是如何让这个证书有价值了。。。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要让用户信任颁发的数字证书，这里就需要引入 CA 中心了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在下一篇文章中，我将详细阐述 CA 中心，敬请关注。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibQ4mtgHYXv50C2zJtfH5icNbOicm63Mwia4EaZdIJtQDz9rJLxS6LBsVgWJXtbJIFBaAH2nzu7tBEic76fFUEphPjw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>793ee1613d51d734ff37e1b5a15fc349</guid>
<title>使用 awk 查找并修复数据中一对多的不一致问题</title>
<link>https://toutiao.io/k/rx3r4ia</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;post&quot;&gt;
&lt;h1 class=&quot;title&quot;&gt;使用awk查找并修复数据中一对多的不一致问题&lt;/h1&gt;
&lt;p&gt;
从 &lt;a href=&quot;https://www.datafix.com.au/BASHing/2021-03-17.html&quot;&gt;https://www.datafix.com.au/BASHing/2021-03-17.html&lt;/a&gt; 上看到的一个 &lt;code&gt;awk&lt;/code&gt; 小技巧。
&lt;/p&gt;

&lt;p&gt;
所谓“一对多”的不一致问题是指这么一种情况：属性1与属性2本来应该是 &lt;code&gt;1:1&lt;/code&gt; 或者 &lt;code&gt;N:1&lt;/code&gt; 的关系，但是由于数据错误导致同一个属性1有了多个属性2与之对应。
&lt;/p&gt;

&lt;p&gt;
例如下面数据中， 每个 &lt;code&gt;item&lt;/code&gt; 本来应该只有唯一的一个 &lt;code&gt;class&lt;/code&gt;,但是实际上 &lt;code&gt;banana&lt;/code&gt; 和 &lt;code&gt;potato&lt;/code&gt; 有多个 &lt;code&gt;class&lt;/code&gt; 与之对应。
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
saleIDdateitemclasskg
0012021-01-02capsicumvegetable11.9
0022021-01-02bananafruit12.7
0032021-01-02capsicumvegetable3.7
0042021-01-02potatovegetable4.1
0052021-01-02capsicumvegetable6.0
0062021-01-02potatofruit13.0
0072021-01-02bananavegetable9.1
0082021-01-02potatovegetable15.0
0092021-01-02applefruit5.6
0102021-01-02bananafruit7.7
0112021-01-02pumpkinvegetable8.3
0122021-01-02pumpkinvegetable5.6
0132021-01-02applefruit3.5
0142021-01-02pumpkinvegetable5.3
0152021-01-02capsicumvegetable10.3
0162021-01-03applefruit12.2
0172021-01-03pumpkinvegetable12.6
0182021-01-03potatovegetable4.4
0192021-01-03applefruit12.5
0202021-01-03pumpkinvegetable11.6
0212021-01-03bananavegetable14.5
0222021-01-03capsicumvegetable4.1
0232021-01-03banana5.9
0242021-01-03potatovegetable4.8
0252021-01-03applefruit15.6
&lt;/pre&gt;

&lt;p&gt;
为了找出一对多的关系，我们需要使用二维数组来保存 &lt;code&gt;属性1&lt;/code&gt; 和 &lt;code&gt;属性2&lt;/code&gt; 的关系，然后判断 &lt;code&gt;属性1&lt;/code&gt; 这个一维数组中是否包含数组个数大于1的数值就行了（原文的判断方法比这要复杂，我简化了一下）。awk 程序如下
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;awk &lt;span class=&quot;org-string&quot;&gt;&#x27;{b[$3][$4]++}&lt;/span&gt;
&lt;span class=&quot;org-string&quot;&gt;END {for (i in b) {if (length(b[i])&amp;gt;1){&lt;/span&gt;
&lt;span class=&quot;org-string&quot;&gt;            for (j in b[i]){&lt;/span&gt;
&lt;span class=&quot;org-string&quot;&gt;                print b[i][j] &quot;|&quot; i FS j}}}}&#x27;&lt;/span&gt; /tmp/test.txt

&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-org&quot;&gt;4|potato vegetable
1|potato fruit
2|banana vegetable
1|banana 5.9
2|banana fruit
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
这里第一列是每个 &lt;code&gt;属性1 属性2&lt;/code&gt; 对的数量，第二列是重复的 &lt;code&gt;属性1 属性2&lt;/code&gt; 对的值。
&lt;/p&gt;

&lt;p&gt;
为了方便复用，我们可以定义一个 &lt;code&gt;one2many&lt;/code&gt; 的函数：
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot; id=&quot;org9319954&quot;&gt;&lt;span class=&quot;org-function-name&quot;&gt;one2many&lt;/span&gt;() {
    &lt;span class=&quot;org-variable-name&quot;&gt;sep&lt;/span&gt;=&lt;span class=&quot;org-string&quot;&gt;&quot;$1&quot;&lt;/span&gt;                    
    &lt;span class=&quot;org-variable-name&quot;&gt;one&lt;/span&gt;=&lt;span class=&quot;org-string&quot;&gt;&quot;$2&quot;&lt;/span&gt;                    
    &lt;span class=&quot;org-variable-name&quot;&gt;many&lt;/span&gt;=&lt;span class=&quot;org-string&quot;&gt;&quot;$3&quot;&lt;/span&gt;                   
    &lt;span class=&quot;org-variable-name&quot;&gt;file&lt;/span&gt;=&lt;span class=&quot;org-string&quot;&gt;&quot;$4&quot;&lt;/span&gt;                   
    awk -F&lt;span class=&quot;org-string&quot;&gt;&quot;${sep}&quot;&lt;/span&gt; -v &lt;span class=&quot;org-variable-name&quot;&gt;one&lt;/span&gt;=&lt;span class=&quot;org-string&quot;&gt;&quot;${one}&quot;&lt;/span&gt; -v &lt;span class=&quot;org-variable-name&quot;&gt;many&lt;/span&gt;=&lt;span class=&quot;org-string&quot;&gt;&quot;${many}&quot;&lt;/span&gt; &lt;span class=&quot;org-string&quot;&gt;&#x27;$one != &quot;&quot; {b[$one][$many]++}&lt;/span&gt;
&lt;span class=&quot;org-string&quot;&gt;END {for (i in b)&lt;/span&gt;
&lt;span class=&quot;org-string&quot;&gt;         {if (length(b[i]) &amp;gt; 1) {&lt;/span&gt;
&lt;span class=&quot;org-string&quot;&gt;            for (j in b[i])&lt;/span&gt;
&lt;span class=&quot;org-string&quot;&gt;                {print b[i][j] FS i FS j}}}}&#x27;&lt;/span&gt; &lt;span class=&quot;org-string&quot;&gt;&quot;${file}&quot;&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
这个函数与上面命令不同之处在于通过 &lt;code&gt;-F&lt;/code&gt; 指定数据分隔符，通过 &lt;code&gt;-v&lt;/code&gt; 将函数参数传递给 awk 变量，使用 &lt;code&gt;FS&lt;/code&gt; 变量替代 &lt;code&gt;|&lt;/code&gt; 作为数量与重复属性对之间的分隔符。
&lt;/p&gt;

&lt;p&gt;
那么，我们可以直接使用该函数进行数据检测：
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;&amp;lt;&amp;lt;one2many&amp;gt;&amp;gt;
one2many &lt;span class=&quot;org-string&quot;&gt;&quot; &quot;&lt;/span&gt; 3 4 /tmp/test.txt
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-org&quot;&gt;4 potato vegetable
1 potato fruit
2 banana vegetable
1 banana 5.9
2 banana fruit
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
修复相对来说就比较简单了，我们首先创建一个查询表，用来查询 &lt;code&gt;属性1&lt;/code&gt; 对应的 &lt;code&gt;属性2&lt;/code&gt;,这个查询可以从 &lt;code&gt;one2many&lt;/code&gt; 函数的结果中截取：
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;&amp;lt;&amp;lt;one2many&amp;gt;&amp;gt;
one2many &lt;span class=&quot;org-string&quot;&gt;&quot; &quot;&lt;/span&gt; 3 4 /tmp/test.txt |sed -n &lt;span class=&quot;org-string&quot;&gt;&#x27;1p;5p&#x27;&lt;/span&gt; |tee /tmp/lookup
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-org&quot;&gt;4 potato vegetable
2 banana fruit
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
然后在 awk 中查询 &lt;code&gt;属性1&lt;/code&gt; 的值若在查询表中则将 &lt;code&gt;属性2&lt;/code&gt; 的值直接改为查询表中的对应结果：
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;awk &lt;span class=&quot;org-string&quot;&gt;&#x27;FNR==NR {lookup[$1]=$2; next} # 通过FNR==NR判断是否在遍历查询表文件&lt;/span&gt;
&lt;span class=&quot;org-string&quot;&gt;$3 in lookup {$4=lookup[$3]} 1&#x27;&lt;/span&gt; /tmp/lookup /tmp/test.txt 
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-org&quot;&gt;saleID  date    item    class   kg
001     2021-01-02      capsicum        vegetable       11.9
002     2021-01-02      banana  fruit   12.7
003     2021-01-02      capsicum        vegetable       3.7
004     2021-01-02      potato  vegetable       4.1
005     2021-01-02      capsicum        vegetable       6.0
006     2021-01-02      potato  fruit   13.0
007     2021-01-02      banana  vegetable       9.1
008     2021-01-02      potato  vegetable       15.0
009     2021-01-02      apple   fruit   5.6
010     2021-01-02      banana  fruit   7.7
011     2021-01-02      pumpkin vegetable       8.3
012     2021-01-02      pumpkin vegetable       5.6
013     2021-01-02      apple   fruit   3.5
014     2021-01-02      pumpkin vegetable       5.3
015     2021-01-02      capsicum        vegetable       10.3
016     2021-01-03      apple   fruit   12.2
017     2021-01-03      pumpkin vegetable       12.6
018     2021-01-03      potato  vegetable       4.4
019     2021-01-03      apple   fruit   12.5
020     2021-01-03      pumpkin vegetable       11.6
021     2021-01-03      banana  vegetable       14.5
022     2021-01-03      capsicum        vegetable       4.1
023     2021-01-03      banana          5.9
024     2021-01-03      potato  vegetable       4.8
025     2021-01-03      apple   fruit   15.6
&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>0310a8ee5808384346f028d059e210d7</guid>
<title>为自己的团队定制 CSS 框架</title>
<link>https://toutiao.io/k/187g37k</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p data-lake-id=&quot;77d1f8e6579823ae504a743a84ca6b2a&quot; data-wording=&quot;true&quot;&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.66640625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/QRibyjewM1IC6SQuJsykS8RW9ic8w3BAy95N29DPCeGJpyqHAFf6RKCZYraF1jeJBH6BlSvSleu4Jgu4EPhXM1vw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;f3b49455a8b69673718ede3d1376c7ba&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;去年很火的 Tailwind CSS 是何方神圣，到底是 Atomic CSS 余孽的卷土重来还是真的有点东西。Tailwind CSS 如何帮助我们建立界面样式到设计语言的连接，Utility-first 的 CSS 工作流是怎样的，以及，如何基于 Tailwind CSS 为自己的团队定制一套舒服的 CSS 框架。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;d2b9629cdba1550e9e533f7e3aef9a57&quot;&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p data-lake-id=&quot;1875577f523d2f11669d7394fdabfda1&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;我们太有限了,我们只能做我们觉得是对的事情,然后接受它的事与愿违。-- 罗翔&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-lake-id=&quot;2449a03a004bdf264f1fa769e4bbc3d3&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-id=&quot;2988&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;CSS 工程化要解决的问题&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p data-lake-id=&quot;7d5f66bd7708df99cdf18094a8dcb541&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;22cede03301566f355d2c631b567f066&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;至少在中后台研发领域，我觉得团队在 CSS 领域会遇到以下几个问题要解决：&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;2004adc9dd8ab3daf068e38338d2f13e&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;faf973ffb573d98de0a5c13527f39dfe&quot;&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;强制一致性&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-lake-id=&quot;169e0ec8d72212b2040e842a422d070c&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;e145ea41bd295719e4f65fbead779159&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;在解释什么是强制一致性之前，请大家来猜一下，在 yuque.com 上，有多少种不同的字号、文字颜色和背景颜色。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;05edaa787a08cc39a9316d0b6a69adae&quot; data-wording=&quot;true&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;05edaa787a08cc39a9316d0b6a69adae&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;答案可能跟你预期的有些差异。yuque.com 上一共有 34 种不同的字号、77 种不同的文字颜色和 56 种不同的背景颜色。&lt;/span&gt;&lt;span&gt;https://cssstats.com/stats/?url=https://yuque.com/&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;03ca9855c264bdeb71ab9072ef23109a&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;229aa71df58629704bb35c89e264a6c0&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;事实上 yuque.com 已经做得足够好了。因为在 Github.com 上一共有 56 种字号，163 种文字颜色和 147 种背景颜色。在一些企业级的 Web 应用上其实会更可怕，例如 Gitlab 一共有 59 种字号、402 种文字颜色和 239 种背景颜色。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;68b35ae77c2841acff82f4256685d352&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;dfeed8b466f525a0b59b8b11af523e59&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;为什么会出现这种事情？当设计师把设计稿交给我们之后，还原设计稿的最便捷方式之一就是使用设计工具的 &quot;Copy as CSS&quot; 功能导出对应的 CSS，看起来不错。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;dfeed8b466f525a0b59b8b11af523e59&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;dfeed8b466f525a0b59b8b11af523e59&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;img data-ratio=&quot;1.053763440860215&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QRibyjewM1IC6SQuJsykS8RW9ic8w3BAy9sjmAMkribWodgwz3vjylryzPbic26NOsJQn4a8iaollrhkND3vLpmKPgg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;651&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;dfeed8b466f525a0b59b8b11af523e59&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;makefile&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/* Lorem ipsum dolor si */&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;position: absolute;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;width: 232px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;height: 144px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;font-family: Roboto;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;font-style: normal;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;font-weight: normal;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;font-size: 16px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;line-height: 24px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/* or 150% */&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__section&quot;&gt;color: rgba(0, 0, 0, 0.541327);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-lake-id=&quot;e82b287ca5b88b5d72214d0ee02c8e07&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;观察这段 CSS，会发现，在这里，字体、字号和颜色都是一个自由的，没有规约的值。“每一行 CSS 都是一个空白的画布，没有人能阻止你使用任何你想要的值”。这就是为什么同样是视觉设计师想要的语雀品牌绿，在 CSS 中至少有六种写法，并且以下三种我基本看不出有啥区别……&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;41b80947053177c24cb8f15e14405d4c&quot;&gt;&lt;span data-card-type=&quot;inline&quot; data-lake-card=&quot;image&quot; data-card-value=&quot;data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F84204%2F1613898198444-b0e260f4-f41d-4a5f-aec6-c321b3ef77c6.png%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A415%2C%22height%22%3A100%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A6190%2C%22originWidth%22%3A415%2C%22originHeight%22%3A100%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22Aa%20Aa%20Aa%20%2324b863%20%2300bc5a%20%2326b863%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A170.34697%2C%22y%22%3A18.506943%2C%22width%22%3A69.9117%2C%22height%22%3A42.446899%2C%22text%22%3A%22Aa%22%7D%2C%7B%22x%22%3A30.372782%2C%22y%22%3A18.916956%2C%22width%22%3A66.012778%2C%22height%22%3A42.234030000000004%2C%22text%22%3A%22Aa%22%7D%2C%7B%22x%22%3A317.20132%2C%22y%22%3A20.042236%2C%22width%22%3A65.49212999999997%2C%22height%22%3A41.118409%2C%22text%22%3A%22Aa%22%7D%2C%7B%22x%22%3A318.21875%2C%22y%22%3A72.42053%2C%22width%22%3A61.74155000000002%2C%22height%22%3A15.016580000000005%2C%22text%22%3A%22%2324b863%22%7D%2C%7B%22x%22%3A174.06177%2C%22y%22%3A73.088684%2C%22width%22%3A59.288250000000005%2C%22height%22%3A14.483946000000003%2C%22text%22%3A%22%2300bc5a%22%7D%2C%7B%22x%22%3A31.034006%2C%22y%22%3A73.35499%2C%22width%22%3A59.163229%2C%22height%22%3A13.537189999999995%2C%22text%22%3A%22%2326b863%22%7D%5D%2C%22id%22%3A%22VCSe0%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D&quot;&gt;&lt;img data-height=&quot;100px&quot; data-ratio=&quot;0.24096385542168675&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QRibyjewM1IC6SQuJsykS8RW9ic8w3BAy9nSwlZicvYpIqn4MqCt648ZJTGw1fuibBYCCFNhxHGUw8icIvI7rQxrPJw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;415&quot; title=&quot;image.png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;ed8ff312e6fa790dd717928b2d2e7956&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;所以这里所谓的 “强制一致性”指的是开发人员在书写 CSS 的过程中，属性的值应该总是从一个有限的集合中去取。而不是任意取值。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;a37c41442838c71ea732f7a95ea7b258&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Design Token&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-lake-id=&quot;cb53d7ea925f8ca617261651705c7c9f&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;再来。这是一份 Google Materia Design 的设计稿。会发现 Google 的设计师除了标注了这些元素的颜色值之外，还贴心的写了个名字 Gray 900。这就是所谓的 Design Token:&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;93a026c2ca868c4b316c2cdb850942d8&quot;&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p data-lake-id=&quot;bc11bd4c2a65e830620482546651c174&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;Design tokens are all the values needed to construct and maintain a design system — spacing, color, typography, object styles, animation, etc. — represented as data.&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-lake-id=&quot;eab5f156e4ed4a823cd4aa4e76cfdac6&quot;&gt;&lt;span data-card-type=&quot;inline&quot; data-lake-card=&quot;image&quot; data-card-value=&quot;data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F84204%2F1613898355064-3e486766-face-4094-b6fa-204aedf766f8.png%3Fx-oss-process%3Dimage%252Fresize%252Cw_696%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A696%2C%22height%22%3A547%2C%22linkTarget%22%3A%22_blank%22%2C%22originWidth%22%3A696%2C%22originHeight%22%3A547%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22id%22%3A%22bvuFw%22%7D&quot;&gt;&lt;img data-height=&quot;547px&quot; data-ratio=&quot;0.7859195402298851&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QRibyjewM1IC6SQuJsykS8RW9ic8w3BAy9qibP0QgD3uicxUnU1OYdWZAy7l9B7YuxKLr3hnwDW3v4kl7BricN3GZWg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;696&quot; title=&quot;image&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;4f482fab214b65252b3730ef6b713bad&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;一份优秀的设计稿&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;07a7b10c7f512bdc90f8764c6744bc09&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;0d4370c47373ac0ee8d22ac81496bafc&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;在一份设计规范中，设计师首先会决定使用一些值。然后给它们设置一个上下文无关的名字，即 Global Token 。用于让其他的 token 引用。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;51bdb542891e4d1921244e5a4097c091&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;3f6a12221731ae5f818b3354f6c79ad8&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;在此之上，在特定的上下文和抽象中，会基于 Global Token 生成一个具名的 Alias Token，用于传达 Global Token 的设计预期。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;a8eed64bc02b8dce696875718d86dd3e&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;3c9c87c03ee1462bcd7fa386f5618611&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;最后，决定某个组件要使用某个特定 Design Token 时，会创建一个 Component-specific Token，让开发人员能给予 Alias Token 去定义组件的 Token 别名。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;3d79196f6f628cfb9d5b24f50b7af1b4&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;94f370bd8feebc70c1903963d1ed35d4&quot;&gt;&lt;span data-card-type=&quot;inline&quot; data-lake-card=&quot;image&quot; data-card-value=&quot;data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F84204%2F1613903764779-5635773f-9710-4b2b-af36-d9271d8354a1.png%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A344%2C%22height%22%3A360%2C%22linkTarget%22%3A%22_blank%22%2C%22size%22%3A0%2C%22originWidth%22%3A344%2C%22originHeight%22%3A360%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22id%22%3A%22V327e%22%7D&quot;&gt;&lt;img data-height=&quot;360px&quot; data-ratio=&quot;1.0465116279069768&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QRibyjewM1IC6SQuJsykS8RW9ic8w3BAy9WhUZWYViaDr1gOZmicMgMByGZWCuhG3IdicMmlxrpMVxONvStbXE7TqDA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;344&quot; title=&quot;image&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;372981ade5c41a8fb452d0d42f3bc463&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;从色值到组件&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;1314cc6a4eeb834c3474061de7abded6&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;3f0aea8a8170b94c249f9b6916b96bee&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;下面来个例子。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;b6bb0d42196546436c2f08174267f6d0&quot;&gt;&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p data-lake-id=&quot;a20d224c568e48b9d67847a2c66a8c01_p_0&quot;&gt;&lt;span&gt;普通开发&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p data-lake-id=&quot;9ac6140479a1620814af84cb94ecca83&quot;&gt;&lt;span&gt;// css&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;433cbd0582a5770c0e40c1d99e25c441&quot;&gt;&lt;span&gt;button {&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;cda64b9d1e6b2e2fd0f763b400d32e2a&quot;&gt;&lt;span&gt;  background: #2680EB;&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;d5ea38a388e8e013323011387ed2f366&quot;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p data-lake-id=&quot;ca2017af0957aab2da072402539edfc9&quot;&gt;&lt;span&gt;裸写色值。无法做到强制一致性&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p data-lake-id=&quot;a20d224c568e48b9d67847a2c66a8c01_p_0&quot;&gt;&lt;span&gt;文艺开发&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p data-lake-id=&quot;5dd1b7fc678f29cbfcec293848d6fd2d&quot;&gt;&lt;span&gt;// css&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;8a9b989bda972cd4f4eff1910498185d&quot;&gt;&lt;span&gt;:root {&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;c46ec481c8ffb46110a8eab6ab8dfc02&quot;&gt;&lt;span&gt;  --blue400: #2680EB；&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;f3ffdb280c56740fa95e854aa8352eb7&quot;&gt;&lt;span&gt;  --ctaBackgroundColor: var(--blue400);&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;64358410c7ac16e59f3468ff156572a1&quot;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;316f44a7b18d738fb110efa64fb4fe6c&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;2d5b8bb59b640b53623cc52767693f21&quot;&gt;&lt;span&gt;button {&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;5f681dc3dff2cc8e71dbe9288d7e21be&quot;&gt;&lt;span&gt;  background: var(--ctaBackgroundColor);&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;15f9bf31895955699474dd690a6052c5&quot;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p data-lake-id=&quot;a20d224c568e48b9d67847a2c66a8c01_p_0&quot;&gt;&lt;span&gt;通过 css variable 把 Design Token 代码化。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;671ffcc48219918567f5cc699bf280af&quot;&gt;&lt;span&gt;使用的时候引用。不要裸写色值。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;79baac1dad99f0931b1cda954c3d820d&quot;&gt;&lt;span&gt;这里并没有再创建一遍 Component-specific Token&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p data-lake-id=&quot;a20d224c568e48b9d67847a2c66a8c01_p_0&quot;&gt;&lt;span&gt;XX开发&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p data-lake-id=&quot;9a8b3f76082ec048bf9e41b7b7c03759&quot;&gt;&lt;span&gt;// tailwind.config.js&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;5ab99d87dc04e498b6bca383fb2792dd&quot;&gt;&lt;span&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;59a669ba7f7fd35fcd3708584dcfc28a&quot;&gt;&lt;span&gt;  theme: {&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;4d84da3240bc6329ed46bbf4944e5f36&quot;&gt;&lt;span&gt;    extend: {&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;95cbc77114ecbe8c8ff58f2909c6b3f9&quot;&gt;&lt;span&gt;      colors: {&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;d62448a889ad9f51f66592e450fc6ea3&quot;&gt;&lt;span&gt;        blue: {&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;e3a51fe5369aa52aa295d80888014750&quot;&gt;&lt;span&gt;          400: &#x27;#2680EB&#x27;&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;b356715296c00d9b651baf5dab838d06&quot;&gt;&lt;span&gt;        }&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;695c46504bf168563540c97c27cb031c&quot;&gt;&lt;span&gt;      }&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;262bbd251dc12bc108736cf3364b1698&quot;&gt;&lt;span&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;411e5ed1ecf9703b4fb3ec0d8a8c7e0d&quot;&gt;&lt;span&gt;  }&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;8be59622b2f7fafaa5bc399b7810ce20&quot;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;6fca731df220f5b37aba91de4c4b446b&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;789583d524f4e13a19bf2d32ef583a8e&quot;&gt;&lt;span&gt;// css&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;7c374cb9a62b92456f5cb7f177cc5bf8&quot;&gt;&lt;span&gt;@layer components {&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;fd990b6339d32f5d5491f22b13459c56&quot;&gt;&lt;span&gt;    .cta-background-color {&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;55fe02468dd64ff6f900309eac5da138&quot;&gt;&lt;span&gt;       @apply bg-blue-400;&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;4cea42e7dd4f78b25de001fab037bac9&quot;&gt;&lt;span&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;f967454d41efc507d90d60baafc94aa9&quot;&gt;&lt;span&gt;    .button-cta-background-color {&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;bcceb8a8283e08a858b650fec0e4f854&quot;&gt;&lt;span&gt;        @extend .cta-background-color;&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;e9660576deeb78d54dcfe2b70bad8340&quot;&gt;&lt;span&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;13865ec3e6becd4a8097d1e10c11ffe1&quot;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;3e1d1c174c9d562e25c38fa6313089a5&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;3aa6ed93be7cebe30bbeada7d3d433ae&quot;&gt;&lt;span&gt;// html&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;c63340bcd1ba9880636e1a5dfd41b1ff&quot;&gt;&lt;span&gt;&amp;lt;button class=&quot;cta-background-color&quot;&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;f51a6378307f0e70cb05d64cfcbb7def&quot;&gt;&lt;span&gt;  Click Me&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;f602aaf1797e302507e69388254dc72a&quot;&gt;&lt;span&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;23275080815b9a27689e09384cd86c7c&quot;&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p data-lake-id=&quot;5da476aad1342b8e9cd0a63dbb7a88ea&quot;&gt;&lt;span&gt;通过 tailwind.config.js 把 Design Token 与值做关注点分离&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;c226770bf1b0513e541815135e05d714&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;69b650d5fbbe061cfcb2671bfc9977eb&quot;&gt;&lt;span&gt;通过 tailwind 的 layer directive 把 Design Token 与 Alias token 做连接&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;7bc03fa22a952312300a855f1083dc9c&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;ab4c2e007eaaf1568e234c9e55f0eec8&quot;&gt;&lt;span&gt;创建出 Component-specific Token，通过类名暴露给 HTML 组件使用&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;46b6a69b4cf20cbe1b95d4de5be5b0c4&quot;&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;语义化和关注点分离&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-lake-id=&quot;fae3d039fef5fe929dbceef7ce4de584&quot;&gt;&lt;span data-card-type=&quot;inline&quot; data-lake-card=&quot;image&quot; data-card-value=&quot;data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fpng%2F84204%2F1613907050465-2a54f4f1-ab13-460f-b5e1-005506d416dc.png%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A607%2C%22height%22%3A262%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A26276%2C%22originWidth%22%3A607%2C%22originHeight%22%3A262%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22divclass%5C%22fixedinset-oflexitems-endjustify%20-center%3FPx-4Py-6pointere%20%3Cdivclass%5C%22max-w-smw-fuiibg-whiteshado%20shadow-1g%20rounded-igpointer-events-a%20%3Cdivclass-%5C%22rounded-lgshadow-xsoverf1ow-hidden%20%3Cdivclass%5C%22p-4&#x27;&#x27;%3E%20%3Cdivclass&#x27;flexitems-start&#x27;%5C%22%3E%20%3Cdivdlassflex-shrink-0%5C%22%3E%20Svgclass%5C%22h-6w6text-green-4o8%5C%22xmlnss%5C%22http%3A%2F%2F.%20pathstroke-linecaps%5C%22roundstroke-linejoin-%5C%22round%5C%22stroke-i%20%3Csvg%20%3CldiV%3E%20%3Cdivclass%5C%22ml-3W-oflex-1pt-0.5%5C%22%20class-%5C%22text-smfont-mediumtext-gray-990%5C%22%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A20.268764%2C%22y%22%3A20.344584%2C%22width%22%3A370.167366%2C%22height%22%3A16.870856%2C%22text%22%3A%22divclass%5C%22fixedinset-oflexitems-endjustify%22%7D%2C%7B%22x%22%3A391.67154%2C%22y%22%3A24.073622%2C%22width%22%3A216.02916%2C%22height%22%3A12.555768%2C%22text%22%3A%22-center%3FPx-4Py-6pointere%22%7D%2C%7B%22x%22%3A35.235325%2C%22y%22%3A42.96701%2C%22width%22%3A315.17483500000003%2C%22height%22%3A14.446929999999995%2C%22text%22%3A%22%3Cdivclass%5C%22max-w-smw-fuiibg-whiteshado%22%7D%2C%7B%22x%22%3A319.9994%2C%22y%22%3A43.354343%2C%22width%22%3A64.81557000000004%2C%22height%22%3A13.724803999999999%2C%22text%22%3A%22shadow-1g%22%7D%2C%7B%22x%22%3A397.7731%2C%22y%22%3A43.507675%2C%22width%22%3A209.7101%2C%22height%22%3A14.439349999999997%2C%22text%22%3A%22rounded-igpointer-events-a%22%7D%2C%7B%22x%22%3A49.934223%2C%22y%22%3A62.025757%2C%22width%22%3A383.77987699999994%2C%22height%22%3A15.417747000000006%2C%22text%22%3A%22%3Cdivclass-%5C%22rounded-lgshadow-xsoverf1ow-hidden%22%7D%2C%7B%22x%22%3A65.132034%2C%22y%22%3A82.077644%2C%22width%22%3A137.471236%2C%22height%22%3A15.075195999999991%2C%22text%22%3A%22%3Cdivclass%5C%22p-4&#x27;&#x27;%3E%22%7D%2C%7B%22x%22%3A81.47254%2C%22y%22%3A102.473724%2C%22width%22%3A232.98144000000002%2C%22height%22%3A14.665185999999991%2C%22text%22%3A%22%3Cdivclass&#x27;flexitems-start&#x27;%5C%22%3E%22%7D%2C%7B%22x%22%3A96.01891%2C%22y%22%3A122.25065%2C%22width%22%3A211.27969000000002%2C%22height%22%3A13.817719999999994%2C%22text%22%3A%22%3Cdivdlassflex-shrink-0%5C%22%3E%22%7D%2C%7B%22x%22%3A110.47019%2C%22y%22%3A142.35007%2C%22width%22%3A498.05325000000005%2C%22height%22%3A14.964830000000006%2C%22text%22%3A%22Svgclass%5C%22h-6w6text-green-4o8%5C%22xmlnss%5C%22http%3A%2F%2F.%22%7D%2C%7B%22x%22%3A126.28296%2C%22y%22%3A161.20592%2C%22width%22%3A479.72540000000004%2C%22height%22%3A17.67401000000001%2C%22text%22%3A%22pathstroke-linecaps%5C%22roundstroke-linejoin-%5C%22round%5C%22stroke-i%22%7D%2C%7B%22x%22%3A111.38912%2C%22y%22%3A183.44177%2C%22width%22%3A42.807460000000006%2C%22height%22%3A14.343829999999997%2C%22text%22%3A%22%3Csvg%22%7D%2C%7B%22x%22%3A96.25886%2C%22y%22%3A203.99666%2C%22width%22%3A45.84231%2C%22height%22%3A12.17673000000002%2C%22text%22%3A%22%3CldiV%3E%22%7D%2C%7B%22x%22%3A96.09198%2C%22y%22%3A221.96112%2C%22width%22%3A276.24274%2C%22height%22%3A14.40064000000001%2C%22text%22%3A%22%3Cdivclass%5C%22ml-3W-oflex-1pt-0.5%5C%22%22%7D%2C%7B%22x%22%3A127.49537%2C%22y%22%3A242.59369%2C%22width%22%3A331.1498%2C%22height%22%3A13.572750000000013%2C%22text%22%3A%22class-%5C%22text-smfont-mediumtext-gray-990%5C%22%22%7D%5D%2C%22id%22%3A%22GScvF%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D&quot;&gt;&lt;img data-height=&quot;262px&quot; data-ratio=&quot;0.4316309719934102&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QRibyjewM1IC6SQuJsykS8RW9ic8w3BAy9mkaRDSViap0t1xebK6zJoMd62AzmdLxhQlRSMHXoiaK805oc3tZSJvXg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;607&quot; title=&quot;image.png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;bd50fc28b04cdd6404ed82885f4cbe2b&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;590f6fa1299283cf5700e82cf934667c&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;看到这里可能有小伙伴开始懵逼了，是不是有哪里搞错了，不是说好了 Tailwind CSS 就是当初被喷成狗的 Atomic CSS 换了个皮卷土重来么，怎么跟你上面讲的不太一样？甚至官网上的示例都是这样一串 class，是不是你在过度解读 Tailwind CSS，夹带了私货？&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;08cb3f86858440eb4ee236188ac2d191&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;0f6683abdfc8c1d16332911863fbc19b&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;前面已经讨论了如何把样式和设计通过 Design Token 连接起来。但接下来可能要讨论一些比较奇怪的东西。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;b3139d8015f4c924d142b1648e46499c&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.1775956284153006&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QRibyjewM1IC6SQuJsykS8RW9ic8w3BAy94rkZMzs94MMc6obibQoibbqrSVGPdvk18wXVSd4DiaL6x7u4k4nrzdJeQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;732&quot;/&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;6cbc592195d14bb3bfbd8756736d792e&quot;&gt;&lt;span data-card-type=&quot;inline&quot; data-lake-card=&quot;image&quot; data-card-value=&quot;data:%7B%22src%22%3A%22https%3A%2F%2Fintranetproxy.alipay.com%2Fskylark%2Flark%2F0%2F2021%2Fpng%2F1165%2F1614045218217-51f42494-704a-4faa-b51d-3b872ebbcdb0.png%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A366%2C%22height%22%3A431%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A194835%2C%22originWidth%22%3A732%2C%22originHeight%22%3A862%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22id%22%3A%22ziF4a%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D&quot;/&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;2a350aa978bb1766ef12a0ff8ffa1800&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;用雨燕首页的 “最近常访问的应用” 列表为例。按照古典时代“关注点分离”的最佳实践，也就是传说中的 “写 HTML 的时候不用关心样式”，我们会怎么写这样的列表：&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;2a350aa978bb1766ef12a0ff8ffa1800&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&amp;lt;ul &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;application-list&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/yuyan/yuyanAssets&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;https://gw.alipayobjects.com/zos/basement_prod/9a7a9c64-01ee-45ca-a615-6063a24f70a9.svg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;h4&lt;/span&gt;&amp;gt;&lt;/span&gt;yuyanAssets&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;h4&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;雨燕前端应用&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;.application-list&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;list-style&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;none;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;li {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;#fff;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;a {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;display&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;block;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;18px 22px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;img {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;display&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;block;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;38px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;38px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;float&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;left;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;div {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;display&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;inline-block;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;h4 {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;#314659;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__meta&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;600;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;0;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;span {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;#697b8c;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__meta&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;12px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p data-lake-id=&quot;9cf0e834b57a1a0ac9671bc3c9224947&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;现在谁这么写 CSS 绝对可能会被揍。它最大的坏处是 HTML 和 CSS 的层次结构必须完全对应。HTML 怎么嵌套的， CSS 就必须怎么嵌套。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;ce0cd4cd8b94c8311cf7b352214f7557&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;900771ad21cca5901703d3c111c0ee32&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;后来我们开始有了 BEM，写出来的 HTML 会不那么欠揍了：&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;900771ad21cca5901703d3c111c0ee32&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&amp;lt;ul &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;application-list&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;application-list__item&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;application-list__link&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/yuyan/yuyanAssets&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;application-list__img&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;https://gw.alipayobjects.com/zos/basement_prod/9a7a9c64-01ee-45ca-a615-6063a24f70a9.svg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;application-list__content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;h4&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;application-list__title&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;yuyanAssets&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;h4&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;application-list__description&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;雨燕前端应用&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;.application-list&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;list-style&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;none;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;amp;__item&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;#fff;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;amp;__link&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;display&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;block;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;18px 22px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;amp;__img&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;display&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;block;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;38px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;38px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;float&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;left;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;amp;__content&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;display&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;inline-block;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;amp;__title&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;#314659;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;600;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;0;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;amp;__description&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;#697b8c;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;12px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;p data-lake-id=&quot;d2c6246541031b0564b6869c6f43ad95&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;现在看起来舒服多了。但是问题来了。如何复用？&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;5f155915f2f3bef4e53d62bd985e19a6&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;例如现在需要写一个结构非常类似的列表，例如雨燕首页的进行中的迭代的列表，希望最大限度复用上面这个结构。一种不纠结的做法是拷一遍。另一种做法是使用注入 less / sass 的 mixin 或者 extends 功能复用样式。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;48d3ddb1dc952fb02edb786c2663cc4c&quot;&gt;&lt;/p&gt;&lt;h3 data-lake-id=&quot;3eda950868faf1bb881daa274ec0491c&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;复用：使用 mixin 或者 extends&lt;/span&gt;&lt;/h3&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&amp;lt;ul &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;application-list&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;application-list__item&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;application-list__link&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/yuyan/yuyanAssets&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;application-list__img&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;https://gw.alipayobjects.com/zos/basement_prod/9a7a9c64-01ee-45ca-a615-6063a24f70a9.svg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;application-list__content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;h4&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;application-list__title&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;yuyanAssets&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;h4&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;application-list__description&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;雨燕前端应用&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&amp;lt;ul &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;sprint-list&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;sprint-list__item&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;sprint-list__link&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/yuyan/yuyanAssets&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;sprint-list__img&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;https://gw.alipayobjects.com/zos/rmsportal/yeSGzTolyopHKmBeKQHC.svg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;sprint-list__content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;h4&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;sprint-list__title&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;迭代1&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;h4&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;sprint-list__description&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;basement/basementweb&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;.application-list&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;list-style&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;none;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;amp;__item&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;#fff;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;amp;__link&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;display&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;block;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;18px 22px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;amp;__img&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;display&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;block;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;38px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;38px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;float&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;left;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;amp;__content&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;display&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;inline-block;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;amp;__title&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;#314659;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;600;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;0;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;amp;__description&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;#697b8c;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;12px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;.sprint-list&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;.application-list;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;h3 data-lake-id=&quot;726c824ec1eee79c2fffc2dd8acc765b&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;复用：创建内容无关样式&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;fc312d1a3c45db0bc1d79b64f96ebc99&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;另一种方案是创建一个内容无关的 CSS，由 application 和 sprint 两个实体列表共同使用。如果需要只修改 sprint 列表中的样式，又不想影响到其他 entiry-list，就需要语义化的增加一个 class，然后通过这个新的语义化 class 来覆盖样式。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;a2231fcb96aed729fe481aa63f8df273&quot;&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&amp;lt;ul &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;entity-list&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;entity-list__item&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;entity-list__link&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/yuyan/yuyanAssets&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;entity-list__img&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;https://gw.alipayobjects.com/zos/basement_prod/9a7a9c64-01ee-45ca-a615-6063a24f70a9.svg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;entity-list__content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;h4&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;entity-list__title&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;yuyanAssets&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;h4&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;entity-list__description&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;雨燕前端应用&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&amp;lt;ul &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;entity-list sprint&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;entity-list__item&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;entity-list__link&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;/yuyan/yuyanAssets&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;entity-list__img&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;https://gw.alipayobjects.com/zos/rmsportal/yeSGzTolyopHKmBeKQHC.svg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;entity-list__content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;h4&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;entity-list__title&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;迭代1&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;h4&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;entity-list__description&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;basement/basementweb&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;.entity-list&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;list-style&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;none;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;amp;__item&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;#fff;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;amp;__link&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;display&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;block;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;18px 22px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;amp;__img&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;display&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;block;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;38px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;38px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;float&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;left;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;amp;__content&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;display&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;inline-block;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;amp;__title&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;#314659;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;600;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;0;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;amp;__description&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;#697b8c;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;12px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;.entity-list.sprint&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;.entity-list__img&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;margin-right&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;8px;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;h3 data-lake-id=&quot;56c3cab9dc9b5264d0948e2aa37a801f&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;这只是一个选择……&lt;/span&gt;&lt;/h3&gt;&lt;p data-lake-id=&quot;80138eb3d24b70b63c2fae863b3d3305&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;内联样式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (status === &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;FAIL&#x27;&lt;/span&gt;) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;return&lt;/span&gt; &amp;lt;CloseCircleFilled style={{ color: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#F5222D&#x27;&lt;/span&gt;, fontSize: 16, &lt;span class=&quot;code-snippet__built_in&quot;&gt;float&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;right&#x27;&lt;/span&gt; }} /&amp;gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;p data-lake-id=&quot;79c00d5265db0f9ac8b569f907778d74&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;不知道大家怎么看这样的代码。这是一个 Icon，在这个场景下我们需要去给它设置颜色和字号。这样写内联样式总觉得很奇怪，其实也合理。因为如果我们真的为了这个场景去创建个样式出来，就真的太奇怪了。并且会带来额外的起名负担。还会担心重名（于是我们又引入了 css module），所以很可能你会写出来这样一个 class：&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;79c00d5265db0f9ac8b569f907778d74&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (status === &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;FAIL&#x27;&lt;/span&gt;) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &amp;lt;CloseCircleFilled className=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;redCloseIconRight&quot;&lt;/span&gt; /&amp;gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;.redCloseIconAlignRight {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  color: &lt;span class=&quot;code-snippet__meta&quot;&gt;#F5222D;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  fontSize: &lt;span class=&quot;code-snippet__number&quot;&gt;16&lt;/span&gt;px;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;float&lt;/span&gt;: right;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;p data-lake-id=&quot;62ed82a457a564923bc2df85c442de16&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;内联样式会带来两个问题：&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;7153a6d43ef3f5110eca965cb43a558b&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;e6d093bf5f7c9d15368a7f5fb74614de&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;在这两种情况下，为一些常用的样式设定 Utility Classes 其实非常方便。&lt;/span&gt;&lt;code&gt;&lt;span&gt;.clearfix&lt;/span&gt;&lt;/code&gt;&lt;span&gt;  就是特别典型的例子。Tailwind CSS 的另一个爽点就在这里。通过配置，可以创建出链接到 Design Token 的 Utility Classes。不管在 css 里通过 apply 复用，还是直接在 jsx 里用，都非常方便：&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;b43db6313235c9f309c789682b22116a&quot;&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;kotlin&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (status === &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;FAIL&#x27;&lt;/span&gt;) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &amp;lt;CloseCircleFilled className=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;text-red-500 text-base&quot;&lt;/span&gt; /&amp;gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (status === &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;FAIL&#x27;&lt;/span&gt;) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &amp;lt;CloseCircleFilled className=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;text-red-500 text-base shadow-sm&quot;&lt;/span&gt; /&amp;gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-id=&quot;2988&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;正式介绍一下 Tailwind CSS&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p data-lake-id=&quot;a197728222df194ca6313d3e4a95bc41&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;写到这里终于可以正式介绍一下 Tailwind CSS 了。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;cee60f671928c800f06be21e0f561f01&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;b67b61ed30b661e8e318ec563e9f4b39&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;Q: Tailwind CSS 是 Atomic CSS 吗？&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;ba637e14f235c16580acd5b3dabf1858&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;A: 不是。它是一个 Utility First 的 CSS 框架。提供了对提升 CSS 开发效率的一系列 Utility Class 的抽象，以及自定义 Utility Class 的方法。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;ecf719ab49959bce2b0ad6188545a4e8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;3cfa91cc9ddba024dc21113ed83d1ec0&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;Q: 然后呢&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;87aad4a2baf1789be8f17203e47f9e86&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;A: 以 tailwind.config.js 为桥梁，建立起属于自己团队的从 Design System 到 CSS 框架的连接。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;baa773d3e6a9bda32b9625f63aa78118&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;f71138838bb0603de642cca89126dacb&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;Q: 那如何低成本解决原先有个 class 叫 &lt;/span&gt;&lt;code&gt;&lt;span&gt;.black&lt;/span&gt;&lt;/code&gt;&lt;span&gt; ，然后很多组件都用了，但是突然有需求要把他们改成 &lt;/span&gt;&lt;code&gt;&lt;span&gt;蓝色&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 的问题&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;8efe2ba7246456bf0536f621245132c2&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;A: 按照上面 Design Token 的做法，做 &lt;/span&gt;&lt;code&gt;&lt;span&gt;component-layer&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 封装即可。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;9a9ef9e4b2791c51abea8f9ebcea64fc&quot; data-wording=&quot;true&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;如何做？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-lake-id=&quot;9a9ef9e4b2791c51abea8f9ebcea64fc&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;以 yuyanAssets 为例子：&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;3e6290ab43abd1aedf2d623c71ea9bb3&quot;&gt;&lt;/p&gt;&lt;h3 data-lake-id=&quot;7d01fc118c527e0cbc5b9510beb77c48&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;1. 在 tailwind.config.js 中定义 Design Token&lt;/span&gt;&lt;/h3&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;module.exports&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;darkMode&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;false, // or &#x27;media&#x27; or &#x27;class&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;purge&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;&#x27;./src/**/*.{js,jsx,ts,tsx}&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;],&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;theme&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;extend&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;fontFamily&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;mono&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;[ &#x27;Menlo&#x27;, &#x27;Consolas&#x27;, &#x27;monaco&#x27;, &#x27;monospace&#x27; ],&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;fontSize&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;xs&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;12px&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;sm&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;14px&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;base&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;16px&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;lg&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;20px&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;xl&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;24px&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;fontWeight&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;light&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;300,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;normal&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;400,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;medium&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;500,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;colors&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;primary&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#1890ff&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;info&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#2c92f6&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;warn&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#ffbf00&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;success&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#00a854&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;fail&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#f04134&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;doing&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#697b8c&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;pause&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#a3b1bf&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;enable&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#52c41a&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;disable&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#f5222d&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;danger&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#f04135&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;icon&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;0&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#f04134&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#00a854&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;2&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#108ee9&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#f5317f&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;4&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#f56a00&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;5&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#7265e6&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;6&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#ffbf00&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;7&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#00a2ae&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;boxShadow&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;DEFAULT&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;0px 4px 4px rgba(0, 55, 107, 0.04)&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;variants&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;extend&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;{},&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;plugins&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;[],&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;h3 data-lake-id=&quot;0df40db2e8467fa299345dcc28186b16&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;2. 把原先 less 中散落的各种 Design Token 使用 apply 描述。&lt;/span&gt;&lt;/h3&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;typescript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; .panel-body {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    flex: &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    background: &lt;span class=&quot;code-snippet__meta&quot;&gt;@background&lt;/span&gt;-color-content;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    border-radius: &lt;span class=&quot;code-snippet__meta&quot;&gt;@border&lt;/span&gt;-radius-&lt;span class=&quot;code-snippet__keyword&quot;&gt;default&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    box-shadow: &lt;span class=&quot;code-snippet__meta&quot;&gt;@shadow&lt;/span&gt;-&lt;span class=&quot;code-snippet__keyword&quot;&gt;default&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    overflow: hidden;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;改成&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;span class=&quot;code-snippet__meta&quot;&gt;@layer&lt;/span&gt; components {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    .panel-background {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       &lt;span class=&quot;code-snippet__meta&quot;&gt;@apply&lt;/span&gt; gb-white;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; .panel-body {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    .panel-background;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@apply&lt;/span&gt; flex&lt;span class=&quot;code-snippet__number&quot;&gt;-1&lt;/span&gt; rounded shadow;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    overflow: hidden;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h3 data-lake-id=&quot;11cfd4c125cdc5e353d364b1a88ce6c4&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3 data-lake-id=&quot;11cfd4c125cdc5e353d364b1a88ce6c4&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;3. 去除无用抽象。把内联样式改写成 Utility Class&lt;/span&gt;&lt;/h3&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;xml&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;width:&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;120&lt;/span&gt;, &lt;span class=&quot;code-snippet__attr&quot;&gt;marginLeft:&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;code-snippet__attr&quot;&gt;marginRight:&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;12&lt;/span&gt; }}&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;Progress&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;percent&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;{progress}&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;format&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;{percent&lt;/span&gt; =&amp;gt;&lt;/span&gt; `${percent}%`} /&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;Avatar&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;`&lt;span class=&quot;code-snippet__attr&quot;&gt;icon-product&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;icon-color-&lt;/span&gt;${&lt;span class=&quot;code-snippet__attr&quot;&gt;colorIndex&lt;/span&gt;}`}&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  {iconLetter}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;Avatar&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;// 改成&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;w-28 ml-4 mr-3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;Progress&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;percent&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;{progress}&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;format&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;{percent&lt;/span&gt; =&amp;gt;&lt;/span&gt; `${percent}%`} /&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;Avatar&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;{&lt;/span&gt;`&lt;span class=&quot;code-snippet__attr&quot;&gt;icon-product&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;bg-color-&lt;/span&gt;${&lt;span class=&quot;code-snippet__attr&quot;&gt;colorIndex&lt;/span&gt;}`}&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  {iconLetter}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;Avatar&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;br/&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-id=&quot;2988&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;多余的话&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p data-lake-id=&quot;ee4cb48eafed91e4ae6e7fc6a31f158c&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;在 2021 年的当下，一个前端工程师在工作中，花在 JavaScript、CSS 和 Html 的上的时间占比大概跟前面的排序一样。JavaScript &amp;gt; CSS &amp;gt;&amp;gt;&amp;gt; Html。早年间前端工程师可能还会通过模板关注到 Html 的结构，而现在，随着 React 接管了 DOM，前端工程师的关注点已经慢慢从 HTML 移动到了 JSX 上。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;6bb6ea905605fbed10867238e0b7536a&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;bcbd29aa47ec54ab3782162a9c41ca5d&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;甚至在整个生产过程也跟古典的“写语义化的 HTML -&amp;gt; 给他们取个 Class -&amp;gt; 写选择器 -&amp;gt; 写 CSS ” 不同了。工程师总是尝试优先使用已经写好的组件（如果没有就写一个），然后组合搭建出整个界面。甚至在布局的时候都很少关注 HTML：比如 antd 已经提供了 Layout 布局组件，又比如 Material Design 整个布局都是基于 Responsive Layout 的，基本上没有考虑有关 HTML 文档流的什么事情。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;59c76cbe2059e21caaca022a26c5c6e1&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;3ab032e88ef2ce4639a69a5579072156&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;在 React 刚出来的时候，有很大一部分前端工程师表示 JSX 这种把逻辑和模板混在一起写的方式就是倒退。但随着 Flutter 和 Swift UI 的流行，大家惊奇的发现整个业界都在“倒退”。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;e3f54c7fefd48b417f3999931e45a32a&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;28937696f93b29cb2e810b0c95f6bda8&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;所以也许我们可以换个想法，把 HTML 和 CSS 当成 UI 框架输出的结果。在书写代码的过程中，它们是什么样子的，可能并没有那么重要。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;28937696f93b29cb2e810b0c95f6bda8&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;swift&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;ContentView&lt;/span&gt;: &lt;span class=&quot;code-snippet__title&quot;&gt;View&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; body: some &lt;span class=&quot;code-snippet__type&quot;&gt;View&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__type&quot;&gt;VStack&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__type&quot;&gt;Text&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Turtle Rock&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                .font(.title)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__type&quot;&gt;Text&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Joshua Tree National Park&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                .font(.subheadline)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;@override&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;Widget&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;build(BuildContext context) {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;GestureDetector(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;onTap&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;() {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__attr&quot;&gt;controller&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__attr&quot;&gt;..reset()&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__attr&quot;&gt;..forward();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;child&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;RotationTransition(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__attr&quot;&gt;turns&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;animation,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__attr&quot;&gt;child&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;Stack(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__attr&quot;&gt;children&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    &lt;span class=&quot;code-snippet__attr&quot;&gt;Positioned.fill(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                        &lt;span class=&quot;code-snippet__attr&quot;&gt;child&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;FlutterLogo(),&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    &lt;span class=&quot;code-snippet__attr&quot;&gt;),&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    &lt;span class=&quot;code-snippet__attr&quot;&gt;Center(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                        &lt;span class=&quot;code-snippet__attr&quot;&gt;child&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;Text(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                            &lt;span class=&quot;code-snippet__meta&quot;&gt;&#x27;Click&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;me!&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                            &lt;span class=&quot;code-snippet__attr&quot;&gt;style&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;TextStyle(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                &lt;span class=&quot;code-snippet__attr&quot;&gt;fontSize&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;60.0,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                &lt;span class=&quot;code-snippet__attr&quot;&gt;fontWeight&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;FontWeight.bold,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                            &lt;span class=&quot;code-snippet__attr&quot;&gt;),&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                        &lt;span class=&quot;code-snippet__attr&quot;&gt;),&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    &lt;span class=&quot;code-snippet__attr&quot;&gt;),&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__attr&quot;&gt;],&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__attr&quot;&gt;),&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;),&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h1 data-lake-id=&quot;ee6105c98febd776254e2ce5fd685cb5&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;引用&lt;/span&gt;&lt;br/&gt;&lt;/h1&gt;&lt;p data-lake-id=&quot;a69d7ae9b8c9f0955c7a36fb3cde2f99&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;https://spectrum.adobe.com/page/design-tokens/&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;5f3d338696859d01d024db153d08e07c&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;https://adamwathan.me/css-utility-classes-and-separation-of-concerns/&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;3e7a1a0c19b4593b1c8e1e510d3989c2&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;https://css-tricks.com/bem-101/&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;0a520bc2583022ba68af1ec981b3555c&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/QRibyjewM1IDyNjH7utBYKcx4rU8TibvibUllx1z6XWibibibcZK1wPnoEQydCrlPhCl1IRpJrAGRxWEyUcIMToV4Afg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;344&quot;/&gt;       &lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.01&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/QRibyjewM1IDSqFg3R8M2jd1UZLoGxQASDUt80ATXQI1XfUnLjRXyvhy9AuLtHKdrJMr6R2CkSpKyHhVlesPzTw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;关注&lt;/span&gt;&lt;span&gt;「Alibaba F2E」&lt;/span&gt;&lt;span&gt;微信公众号（左）微信视频号（右）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;把握阿里巴巴前端新动向&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>73de2f9bbd9874b678f5b57db99d754c</guid>
<title>不理解 Java Steam？一步步梳理其工作方式</title>
<link>https://toutiao.io/k/oroh2lf</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Java Stream 已经出现很长时间了，但很多Java程序员还是不理解它的工作方式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不会 Stream 不要紧，我们开发的时候可以不用 Stream，但理解 Stream 是咋回事还是非常必要的，至少得能看懂别人代码中的 Steam 是吧。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面就通过一段代码，逐条说明每行代码的含义，然后再对照一下不使用 Stream 的用法，之后就可以轻松理解 Stream 的用法了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1. Stream 示例代码解析&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.38461538461538464&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl90lPOibvweyLxhPRPgw3wkE1CHqhZHtbiaBQjibQZqEkXYT31AoN3ichj26ibH3BrEMlmbibsSRkia2NnruA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;858&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这段 Stream 代码共有 5 行，下面看每一行都是什么意思。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;第1行&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3851508120649652&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl90lPOibvweyLxhPRPgw3wkE1PMEH5JeOCAtAZqlMuEvciaFiaHculVnmeYQTGBgAPhiabuv3Sfr6j6icXg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;862&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一行我们分成2部分来看，一是内部的 Lambda 表达式：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;num -&amp;gt; num + &lt;span&gt;4&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这就是一个非常简单的方法，等价于：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;int&lt;/span&gt; &lt;span&gt;xxx&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; num)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; num + &lt;span&gt;4&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;传入参数 num，然后返回 +4 后的结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第2部分是 Stream.iterate() 方法，此方法会创建一个无限的流，第一个参数 “4” 就是流的起点，第二个参数 Lambda 表达式用来生产后续的流元素。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么第一行联合起来的意思就是，从4开始，之后的每个流元素都是持续 “+4” 计算出来，产生的流就是这个样子：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;4, 8, 12, 16, 20, 24, 28, …&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;第2行&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3912037037037037&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl90lPOibvweyLxhPRPgw3wkE1mL4yQGgKNjFbH3tYRY9AfTHJOZqpfwRx3eFqIZgRPBcUMX4vE3hrNw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;864&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;limit() 的作用和 SQL 的 limit 一样，都是用来限制数量的，Stream.iterate() 创建了无限流，通过 limit 将其变为了有限的流，限制了流中元素的个数。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如参数 total 值为 5，那么流的样子就是：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;4, 8, 12, 16, 20&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;第3行&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.39952718676122934&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl90lPOibvweyLxhPRPgw3wkE1130w7JEaibo0F0ph1XoiaOSiafajlhcpS0aywH4hJS4LsJKwkEEQnADeQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;846&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第三行是 map 方法，其中还是一个 Lambda 表达式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;map 的作用是 ”变换“，把流中每个元素都用其中的 Lambda 表达式进行计算，得到一个新的元素，放入新的流中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个 Lambda 表达式的意思是计算平方值，那么流就变为：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;4*4, 8*8, 12*12, 16*16, 20*20&lt;br/&gt;=&amp;gt; 16, 64, 144, 256, 400&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;第4行&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3855140186915888&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl90lPOibvweyLxhPRPgw3wkE1oMicicjdSaviaq7Dic8RM8zNo5CYO9RDe5XEV39kEBautuoV9m9xjczPcg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;856&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第四行 filter 的作用是对流元素进行过滤，其中 Lambda 表达式返回的是一个 Boolean 值，返回 True 的放入流中，否则丢弃。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里是判断元素是否可以被 10 整除，流中只有 400 符合条件，那么流就变为：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;400&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;第5行&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3971631205673759&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl90lPOibvweyLxhPRPgw3wkE1H2TW8nJsr3MCj3KKM0qjPWIictytTl1Ed42AWN8GNiaHBovV8ZgoicnibQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;846&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第五行 reduce() 方法是最后的归纳总结，它有2个参数。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一个参数可以理解为基础值，第二个参数是一个操作指令。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的意思就是：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;从0开始，计算流中所有元素的总和，返回最终的累加值。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，这段 Stream 返回的结果就是 &lt;strong&gt;400&lt;/strong&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2. 代码对照理解&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了更加便于理解，我们把这段 Stream 代码转换为普通写法：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5311004784688995&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl90lPOibvweyLxhPRPgw3wkE1FViaHAhSva7icqVP9bEXDCdh3DcakRyl9bic6RNW2YWW4PNxtodiaIHdAA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;836&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面把2段代码对照一下。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.926605504587156&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl90lPOibvweyLxhPRPgw3wkE1AotEfSdBOS3ibh0glalTiahCDnqZibO70O5FZ9Ttvq2Lp1dtFo3RL97Rw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;872&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Steam.iterate() 第一个参数起始值对应 for 中的起始值，Steam.iterate() 第二个参数 Lambda 表达式，对应 for 中的每次循环操作。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9466357308584686&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl90lPOibvweyLxhPRPgw3wkE1PVzDSiaeTlTAp9BtTicU7SHkNW3GsY63qER6wxf42OrAdE7qyVwlUlIQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;862&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;limit() 限制流中元素数量，对应 for 循环中的结束条件，因为 for 里面需要限制的是最大数，所以要用元素个数✖️4来计算一下。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9302325581395349&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl90lPOibvweyLxhPRPgw3wkE1KXsc1p9Ds2VQn6HOuVbv9bYIEJkFEvVZ87TEot509C8zdpDVkgWorA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;860&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;map() 对应 for 内部的平方计算。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9524940617577197&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl90lPOibvweyLxhPRPgw3wkE1kPKD8D6gYJW6kQxGX6QEHY1hic1g4tPvURP23xfjHFCRYGZb2w3D3CQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;842&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;filter() 过滤方法对应 for 内部的 if 判断。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8696581196581197&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl90lPOibvweyLxhPRPgw3wkE1B7HicicU7fJZAeZmkibtuPRW2cRkLb8MWc3ttSEEgciaWbhKUOlP6rOicqw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;936&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;reduce() 汇总方法对应了3行代码：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过前面的逐条解析，以及代码对照是不是就很好理解 Steam 啦，希望对你有所帮助。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>