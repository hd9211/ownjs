<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>6fc393bfae71ac3c56c3a66be89dc614</guid>
<title>测试开发知识图谱</title>
<link>https://toutiao.io/k/vz05cdo</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;记录从单纯的测试或者技术小白如何一步步进阶成为一名合格的测试开发工程师&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;Tips&lt;/span&gt;&lt;br/&gt;&lt;span&gt;文中如果有不当的地方欢迎大家指正&lt;/span&gt;&lt;br/&gt;有同学对某些点感兴趣的或者有想了解某些领域相关知识的欢迎留言和投稿&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以下为大家介绍在每一个阶段需要掌握的基础知识以及对应的实践文档&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1 测试方法与理论&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;相关知识点&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1.1 软件开发生命周期&lt;/td&gt;&lt;td&gt;SCRUM/XP、持续集成/持续交付/DevOps&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1.2 测试流程体系&lt;/td&gt;&lt;td&gt;传统测试流程、测试左移、测试右移&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1.3 测试技术体系&lt;/td&gt;&lt;td&gt;分层测试体系、单元测试、UI 测试、接口测试、白盒测试&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1.4 测试经典书籍&lt;/td&gt;&lt;td&gt;全程软件测试、探索式测试、持续交付、Google 测试之道、不测的秘密&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2 Shell脚本相关&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;相关知识点&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;2.1 Bash&lt;/td&gt;&lt;td&gt;pipe&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2.2 Linux三剑客&lt;/td&gt;&lt;td&gt;grep、awk、sed&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2.3 Linux基本命令&lt;/td&gt;&lt;td&gt;find、netstat、ps&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2.4 Android基本命令&lt;/td&gt;&lt;td&gt;adb、dumpsys、am、UIAutomator、instruments&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2.5 iOS基本命令&lt;/td&gt;&lt;td&gt;libimobiledevice&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3 数据库相关&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;相关知识点&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;3.1 关系型数据库&lt;/td&gt;&lt;td&gt;mysql&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3.2 非关系型数据库&lt;/td&gt;&lt;td&gt;redis、mongodb、neo4j&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4 git 代码管理&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;相关知识点&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;4.1 常用命令&lt;/td&gt;&lt;td&gt;commit、merge、rebase、push&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4.2 分支管理&lt;/td&gt;&lt;td&gt;gitflow流程简介&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;5 Python 编程语言与测试框架&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;相关知识点&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;5.1 Python环境搭建、多版本安装&lt;/td&gt;&lt;td&gt;Mac/Windows环境搭建、IDE日常使用&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5.2 基本数据类型与操作&lt;/td&gt;&lt;td&gt;python 的数字、字符串、列表的使用&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5.3 控制流语法&lt;/td&gt;&lt;td&gt;条件、循环等表达式与流程控制&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5.4 常用数据结构&lt;/td&gt;&lt;td&gt;列表、元组、集合、词典与常用便捷表达式&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5.5 模块&lt;/td&gt;&lt;td&gt;项目目录结构、模块定义、文件引用&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5.6 输入与输出&lt;/td&gt;&lt;td&gt;字面量打印与格式化、文件读取、json 格式转换&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5.7 错误与异常&lt;/td&gt;&lt;td&gt;语法错误与定位、异常捕获、异常处理、自定义异常&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5.8 面向对象编程&lt;/td&gt;&lt;td&gt;类定义、方法定义、类变量、实例引用、实例变量&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5.9 标准库&lt;/td&gt;&lt;td&gt;os 与文件处理、科学计算、网络访问、日期与时间等处理&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5.10 多线程处理&lt;/td&gt;&lt;td&gt;进程与多线程处理，log 处理&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5.11 第三方库&lt;/td&gt;&lt;td&gt;pytest、requests&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5.12 pip 依赖管理与虚拟环境&lt;/td&gt;&lt;td&gt;第三方的依赖管理与项目管理&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5.13 unittest&lt;/td&gt;&lt;td&gt;python 自带单元测试框架&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5.14 pytest&lt;/td&gt;&lt;td&gt;python 最流行的全能型测试框架&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;6 Web 自动化测试&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;相关知识点&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;6.1 selenium&lt;/td&gt;&lt;td&gt;selenium简介及实战&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;6.2 page object&lt;/td&gt;&lt;td&gt;page object 设计模式详解及实战&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;7 移动端 app 自动化测试&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;相关知识点&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;7.1 appium&lt;/td&gt;&lt;td&gt;appium 基础知识及实战&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;7.2 appium使用技巧&lt;/td&gt;&lt;td&gt;元素定位、弹窗识别、webview测试等&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;8 常用开源测试平台&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;相关知识点&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;8.1 monkey&lt;/td&gt;&lt;td&gt;android 健壮性与压力测试工具 monkey 的进阶使用&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;8.2 maxim&lt;/td&gt;&lt;td&gt;android 遍历工具&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;8.3 appcrawler&lt;/td&gt;&lt;td&gt;多平台自动遍历测试工具&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;8.4 STF&lt;/td&gt;&lt;td&gt;多设备管理平台 STF打造自己的智能设备实验室管理上百台设备&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;8.5 Selenium Grid&lt;/td&gt;&lt;td&gt;跨平台设备管理方案 Selenium Grid构建支持 android、ios、web 的多架构自动化测试平台&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;9 客户端专项测试&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;相关知识点&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;9.1 启动性能分析&lt;/td&gt;&lt;td&gt;冷启动、热启动、暖启动、首屏启动指标分析&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;9.2 接口性能分析&lt;/td&gt;&lt;td&gt;dns、http/https 的接口性能分析&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;9.3 Webview性能分析&lt;/td&gt;&lt;td&gt;hybrid app 的性能分析&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;9.4 H5性能分析&lt;/td&gt;&lt;td&gt;手机浏览器的性能数据获取与分析&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;9.5 卡顿分析&lt;/td&gt;&lt;td&gt;过度绘制、冰冻帧、卡顿数据&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;9.6 系统资源分析&lt;/td&gt;&lt;td&gt;cpu 统计、mem 统计、网络流量分析&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;9.7 耗电量测试&lt;/td&gt;&lt;td&gt;使用 batterystats 与 battery historian 完成耗电量的基准分析&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;9.8 弱网测试&lt;/td&gt;&lt;td&gt;模拟弱网、丢包、延迟、不可访问等多种条件下的应用体验&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;9.9 健壮性测试&lt;/td&gt;&lt;td&gt;使用 monkey maxim 完成 app 的健壮性测试&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;9.10 兼容性测试&lt;/td&gt;&lt;td&gt;使用 appcrawler 完成遍历与兼容性分析&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;9.11 代码覆盖率&lt;/td&gt;&lt;td&gt;jacoco 代码覆盖率&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;10 服务端接口测试&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;相关知识点&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;10.1 常见接口协议&lt;/td&gt;&lt;td&gt;tcp/udp/http/restful/dubbo&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;10.2 抓包分析 tcp 协议&lt;/td&gt;&lt;td&gt;使用 tcpdump 与 wireshark 分析三次握手与四次挥手流程&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;10.3 postman/curl&lt;/td&gt;&lt;td&gt;postman及curl简介及使用&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;10.4 常用代理工具&lt;/td&gt;&lt;td&gt;charles、burpsuite、mitmproxy、anyproxy&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;10.5 http/https 抓包分析&lt;/td&gt;&lt;td&gt;ssl 证书设置与 https 抓包&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;10.6 http 协议讲解&lt;/td&gt;&lt;td&gt;状态码、header、请求与响应的格式分析&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;10.7 get、post&lt;/td&gt;&lt;td&gt;get 与 post 的本质区别与具体抓包解读&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;10.8 session、cookie、token&lt;/td&gt;&lt;td&gt;了解 session、cookie、token&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;11 服务端接口自动化测试&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;相关知识点&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;11.1 接口测试框架&lt;/td&gt;&lt;td&gt;requests&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;11.2 接口请求构造&lt;/td&gt;&lt;td&gt;get/post/put/head 等 http 请求构造&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;11.3 接口测试断言&lt;/td&gt;&lt;td&gt;状态码、返回内容等断言&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;11.4 json/xml 请求&lt;/td&gt;&lt;td&gt;优雅的发送 json、xml 请求&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;11.5 json/xml 响应断言&lt;/td&gt;&lt;td&gt;json path、xpath 进行断言&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;11.6 schema 断言&lt;/td&gt;&lt;td&gt;大量响应数据字段的格式断言&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;11.7 header cookie&lt;/td&gt;&lt;td&gt;header 自定义与 cookie 复用&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;11.8 认证体系&lt;/td&gt;&lt;td&gt;http basic、oauth2 等认证体系的测试&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;12 服务端性能测试&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;相关知识点&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;12.1 JMeter&lt;/td&gt;&lt;td&gt;JMeter 实战&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;12.2 性能监控系统&lt;/td&gt;&lt;td&gt;influxdb、grafana、prometheus 实战&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;13 接口安全测试&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;相关知识点&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;13.1 服务端安全测试体系&lt;/td&gt;&lt;td&gt;详解 OWASP 的 top10 安全漏洞与安全防护体系&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;13.2 安全测试演练环境&lt;/td&gt;&lt;td&gt;搭建安全测试演练环境实操常见安全漏洞&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;13.3 常见接口安全测试工具&lt;/td&gt;&lt;td&gt;zap、burpsuite、sqlmap 等知名安全测试工具介绍&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;13.4 BurpSuite&lt;/td&gt;&lt;td&gt;黑客与白帽子最常用的安全测试工具详解&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;13.5 命令注入漏洞&lt;/td&gt;&lt;td&gt;命令注入漏洞原理与实操&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;13.6 sql 注入漏洞&lt;/td&gt;&lt;td&gt;sql 注入、sql 盲注等漏洞的原理介绍与实操&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;13.7 xss 漏洞&lt;/td&gt;&lt;td&gt;xss 多种漏洞的原理介绍与实操&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;13.8 csrf 漏洞&lt;/td&gt;&lt;td&gt;csrf 漏洞原理介绍与实操&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;14  docker 容器技术&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;相关知识点&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;14.1 docker基础&lt;/td&gt;&lt;td&gt;技术讲解与常用命令实战&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;14.2 构建可发布的镜像&lt;/td&gt;&lt;td&gt;使用 docker 搭建测试用例管理平台testlink&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;14.3 搭建持续集成平台&lt;/td&gt;&lt;td&gt;使用 docker 搭建持续集成管理平台Jenkins&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;14.4 搭建 Web 服务器&lt;/td&gt;&lt;td&gt;搭建基于 nginx 的网站&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;15 持续集成&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;相关知识点&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;15.1 持续集成体系介绍&lt;/td&gt;&lt;td&gt;持续集成的核心概念&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;15.2 UI 自动化测试集成实战&lt;/td&gt;&lt;td&gt;将 selenium、appium 的用例放入持续集成&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;15.3 接口测试集成实战&lt;/td&gt;&lt;td&gt;将接口测试用例放入持续集成管理&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;15.4 持续集成体系构建&lt;/td&gt;&lt;td&gt;代码变更后的全自动测试流程体系构建&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;16 持续交付/DevOps&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;相关知识点&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;16.1 基础内容&lt;/td&gt;&lt;td&gt;基于 docker 与 blue ocean 构建企业的持续交付体系&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;16.2 进阶&lt;/td&gt;&lt;td&gt;基于 jenkins api 实现运维与测试的协同自动化&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;17  测试左移&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;相关知识点&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;17.1 Android&lt;/td&gt;&lt;td&gt;Jacoco、FindBugs、PMD、CheckStyle、infer、lint&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;17.2 Java&lt;/td&gt;&lt;td&gt;Sonar、ASM&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;17.3 iOS&lt;/td&gt;&lt;td&gt;oclint、 infer&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;18  测试右移&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;相关知识点&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;18.1 测试右移介绍&lt;/td&gt;&lt;td&gt;测试右移的价值与实践体系&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;18.2 logstash&lt;/td&gt;&lt;td&gt;数据采集与传输&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;18.3 elastic search&lt;/td&gt;&lt;td&gt;elastic search 的索引、文档、查询语法基本概念讲解&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;18.4 kibana&lt;/td&gt;&lt;td&gt;kibana 经典的分析方法与图表使用&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5555555555555556&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/ibrHfPdM8YzZ00mC4hg82bhfuUqRicqlRhQ8HoPcjPmT3eXxtVQsLSzD8UE86UvOFtERTo3cXYNGD15qbpbk2Nlw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;900&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>50c7ea16ab38a1f5737e4b854a5c9ac6</guid>
<title>秒杀系统你必须知道的 9 个细节</title>
<link>https://toutiao.io/k/ghq07ln</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUxODkzNTQ3Nw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/uL371281oDHlDcdbjNJic1yCwAu2dmJ9AunIQh9DXdm5JE7v9libnPgJQicoaGs9Eiaee2kPeFGWJxsPkZ9zCQbrIw/0?wx_fmt=png&quot; data-nickname=&quot;苏三说技术&quot; data-alias=&quot;susanSayJava&quot; data-signature=&quot;作者就职于知名互联网公司，掘金月度优秀作者，从事开发、架构和部分管理工作。实战经验丰富，对jdk、spring、springboot、springcloud、mybatis等开源框架源码有一定研究，欢迎关注，和我一起交流。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;大家好，我是苏三，又跟大家见面了。&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;高并发下如何设计秒杀系统？这是一个高频面试题。这个问题看似简单，但是里面的水很深，它考查的是高并发场景下，从前端到后端多方面的知识。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;秒杀一般出现在商城的&lt;code&gt;促销活动&lt;/code&gt;中，指定了一定数量（比如：10个）的商品（比如：手机），以极低的价格（比如：0.1元），让大量用户参与活动，但只有极少数用户能够购买成功。这类活动商家绝大部分是不赚钱的，说白了是找个噱头宣传自己。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽说秒杀只是一个促销活动，但对技术要求不低。下面给大家总结一下设计秒杀系统需要注意的9个细节。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.0172786177105833&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6W44iaAODv6YdicY0SiaWwE54xAt5uSfzGI2UiagoNMTq0PpHFBsyTBWfNIA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;926&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1 瞬时高并发&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般在&lt;code&gt;秒杀时间点&lt;/code&gt;（比如：12点）前几分钟，用户并发量才真正突增，达到秒杀时间点时，并发量会达到顶峰。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但由于这类活动是大量用户抢少量商品的场景，必定会出现&lt;code&gt;狼多肉少&lt;/code&gt;的情况，所以其实绝大部分用户秒杀会失败，只有极少部分用户能够成功。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;正常情况下，大部分用户会收到商品已经抢完的提醒，收到该提醒后，他们大概率不会在那个活动页面停留了，如此一来，用户并发量又会急剧下降。所以这个峰值持续的时间其实是非常短的，这样就会出现瞬时高并发的情况，下面用一张图直观的感受一下流量的变化：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5184135977337111&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WvM5icz5HYcywB22S06q26eT0h5uJBfUDo68w6szgY1V3GnuVKaWuG4Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;706&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;像这种瞬时高并发的场景，传统的系统很难应对，我们需要设计一套全新的系统。可以从以下几个方面入手：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;页面静态化&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;CDN加速&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;缓存&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;mq异步处理&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;限流&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;分布式锁&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2. 页面静态化&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;活动页面是用户流量的第一入口，所以是并发量最大的地方。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果这些流量都能直接访问服务端，恐怕服务端会因为承受不住这么大的压力，而直接挂掉。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.33084112149532713&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WeHicuic06BzTpnc6hQCUq3392YWuwVtqlUrk0HoDKqVFNRzKhibtR7OSA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1070&quot;/&gt;活动页面绝大多数内容是固定的，比如：商品名称、商品描述、图片等。为了减少不必要的服务端请求，通常情况下，会对活动页面做&lt;code&gt;静态化&lt;/code&gt;处理。用户浏览商品等常规操作，并不会请求到服务端。只有到了秒杀时间点，并且用户主动点了秒杀按钮才允许访问服务端。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.29895104895104896&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WvCicHyBMykldevEeGDoTeDfYqibysn6W0jk4FUPXPkdb17gaqHLu40mA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1144&quot;/&gt;这样能过滤大部分无效请求。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但只做页面静态化还不够，因为用户分布在全国各地，有些人在北京，有些人在成都，有些人在深圳，地域相差很远，网速各不相同。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何才能让用户最快访问到活动页面呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这就需要使用CDN，它的全称是Content Delivery Network，即内容分发网络。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.44141252006420545&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6W4rxLqSmHJPL779m0H8WIb5MTQKicmTTNiaXYPKemhN10CxoD9PTgWWicQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1246&quot;/&gt;使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3 秒杀按钮&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大部分用户怕错过&lt;code&gt;秒杀时间点&lt;/code&gt;，一般会提前进入活动页面。此时看到的&lt;code&gt;秒杀按钮&lt;/code&gt;是置灰，不可点击的。只有到了秒杀时间点那一时刻，秒杀按钮才会自动点亮，变成可点击的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但此时很多用户已经迫不及待了，通过不停刷新页面，争取在第一时间看到秒杀按钮的点亮。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从前面得知，该活动页面是静态的。那么我们在静态页面中如何控制秒杀按钮，只在秒杀时间点时才点亮呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;没错，使用js文件控制。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了性能考虑，一般会将css、js和图片等静态资源文件提前缓存到CDN上，让用户能够就近访问秒杀页面。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看到这里，有些聪明的小伙伴，可能会问：CDN上的js文件是如何更新的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;秒杀开始之前，js标志为false，还有另外一个随机参数。&lt;img data-ratio=&quot;0.34281650071123754&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WaDziaw54qTJic7mPB5pvqS80BRNibdSyPIzyPH4da5tqoB1Gs4u8pTk9g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1406&quot;/&gt;当秒杀开始的时候系统会生成一个新的js文件，此时标志为true，并且随机参数生成一个新值，然后同步给CDN。由于有了这个随机参数，CDN不会缓存数据，每次都能从CDN中获取最新的js代码。&lt;img data-ratio=&quot;0.34156976744186046&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WHBGhI4Lv4Bjod5SAFMNIzZrr92y3J3uOp7QIfNQ9Ge0ttnGEFF45Hg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1376&quot;/&gt;此外，前端还可以加一个定时器，控制比如：10秒之内，只允许发起一次请求。如果用户点击了一次秒杀按钮，则在10秒之内置灰，不允许再次点击，等到过了时间限制，又允许重新点击该按钮。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4 读多写少&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在秒杀的过程中，系统一般会先查一下库存是否足够，如果足够才允许下单，写数据库。如果不够，则直接返回该商品已经抢完。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于大量用户抢少量商品，只有极少部分用户能够抢成功，所以绝大部分用户在秒杀时，库存其实是不足的，系统会直接返回该商品已经抢完。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是非常典型的：&lt;code&gt;读多写少&lt;/code&gt; 的场景。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.4368600682593857&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6W9pIBiccX7euuQAk2Jbias3P8Uic2VN4yCGznY0D8p1s4qlpCmia6pvHjVA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;586&quot;/&gt;如果有数十万的请求过来，同时通过数据库查缓存是否足够，此时数据库可能会挂掉。因为数据库的连接资源非常有限，比如：mysql，无法同时支持这么多的连接。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而应该改用缓存，比如：redis。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即便用了redis，也需要部署多个节点。&lt;img data-ratio=&quot;1.150259067357513&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6W3t99mVozsEQnBosSt4QpKdwPFqKXuuK4j84drCub4QhTE0ibKqnicaQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;772&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;5 缓存问题&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通常情况下，我们需要在redis中保存商品信息，里面包含：商品id、商品名称、规格属性、库存等信息，同时数据库中也要有相关信息，毕竟缓存并不完全可靠。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用户在点击秒杀按钮，请求秒杀接口的过程中，需要传入的商品id参数，然后服务端需要校验该商品是否合法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大致流程如下图所示：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6677740863787376&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WyZicpXQF34WUt4qL29E1xtib2VrXMVtsiaxHIeDTmChsaHmtfXV98MZnw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1204&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据商品id，先从缓存中查询商品，如果商品存在，则参与秒杀。如果不存在，则需要从数据库中查询商品，如果存在，则将商品信息放入缓存，然后参与秒杀。如果商品不存在，则直接提示失败。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个过程表面上看起来是OK的，但是如果深入分析一下会发现一些问题。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;5.1 缓存击穿&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如商品A第一次秒杀时，缓存中是没有数据的，但数据库中有。虽说上面有如果从数据库中查到数据，则放入缓存的逻辑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然而，在高并发下，同一时刻会有大量的请求，都在秒杀同一件商品，这些请求同时去查缓存中没有数据，然后又同时访问数据库。结果悲剧了，数据库可能扛不住压力，直接挂掉。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何解决这个问题呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这就需要加锁，最好使用分布式锁。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5598349381017882&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WgCh3ngX6CeNv7RUcUICjicNXScKl2ugAE0xUfTchAiaJ4NLPOSibUiasrQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1454&quot;/&gt;当然，针对这种情况，最好在项目启动之前，先把缓存进行&lt;code&gt;预热&lt;/code&gt;。即事先把所有的商品，同步到缓存中，这样商品基本都能直接从缓存中获取到，就不会出现缓存击穿的问题了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;是不是上面加锁这一步可以不需要了？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;表面上看起来，确实可以不需要。但如果缓存中设置的过期时间不对，缓存提前过期了，或者缓存被不小心删除了，如果不加速同样可能出现缓存击穿。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实这里加锁，相当于买了一份保险。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;5.2 缓存穿透&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果有大量的请求传入的商品id，在缓存中和数据库中都不存在，这些请求不就每次都会穿透过缓存，而直接访问数据库了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于前面已经加了锁，所以即使这里的并发量很大，也不会导致数据库直接挂掉。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但很显然这些请求的处理性能并不好，有没有更好的解决方案？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这时可以想到&lt;code&gt;布隆过滤器&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.077922077922078&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WHgwIx69gaV3oaWXpQNEmlnZ4kzI7ibhjcyicuz3drdpZe3pnHUYckaZw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;616&quot;/&gt;系统根据商品id，先从布隆过滤器中查询该id是否存在，如果存在则允许从缓存中查询数据，如果不存在，则直接返回失败。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽说该方案可以解决缓存穿透问题，但是又会引出另外一个问题：布隆过滤器中的数据如何更缓存中的数据保持一致？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这就要求，如果缓存中数据有更新，则要及时同步到布隆过滤器中。如果数据同步失败了，还需要增加重试机制，而且跨数据源，能保证数据的实时一致性吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;显然是不行的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以布隆过滤器绝大部分使用在缓存数据更新很少的场景中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果缓存数据更新非常频繁，又该如何处理呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这时，就需要把不存在的商品id也缓存起来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.0576923076923077&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WEqasN35hwF3lNWNKibQXHrESlafSFXIWlvORzXYvMAmmBq0hyiaVwB1w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;624&quot;/&gt;下次，再有该商品id的请求过来，则也能从缓存中查到数据，只不过该数据比较特殊，表示商品不存在。需要特别注意的是，这种特殊缓存设置的超时时间应该尽量短一点。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;6 库存问题&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于库存问题看似简单，实则里面还是有些东西。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;真正的秒杀商品的场景，不是说扣完库存，就完事了，如果用户在一段时间内，还没完成支付，扣减的库存是要加回去的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，在这里引出了一个&lt;code&gt;预扣库存&lt;/code&gt;的概念，预扣库存的主要流程如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.267741935483871&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6W6cl6lPTfibwyXFqEPBBpPaPp3XYPq7cGiauQNRibD76nofgeRiathq0mFw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;620&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;扣减库存中除了上面说到的&lt;code&gt;预扣库存&lt;/code&gt;和&lt;code&gt;回退库存&lt;/code&gt;之外，还需要特别注意的是库存不足和库存超卖问题。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;6.1 数据库扣减库存&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用数据库扣减库存，是最简单的实现方案了，假设扣减库存的sql如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;update product set stock=stock-&lt;span&gt;1&lt;/span&gt; where id=&lt;span&gt;123&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种写法对于扣减库存是没有问题的，但如何控制库存不足的情况下，不让用户操作呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这就需要在update之前，先查一下库存是否足够了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;伪代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;int&lt;/span&gt; stock = mapper.getStockById(&lt;span&gt;123&lt;/span&gt;);&lt;br/&gt;&lt;span&gt;if&lt;/span&gt;(stock &amp;gt; &lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; count = mapper.updateStock(&lt;span&gt;123&lt;/span&gt;);&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt;(count &amp;gt; &lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;    addOrder(&lt;span&gt;123&lt;/span&gt;);&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家有没有发现这段代码的问题？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;没错，查询操作和更新操作不是原子性的，会导致在并发的场景下，出现库存超卖的情况。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有人可能会说，这样好办，加把锁，不就搞定了，比如使用synchronized关键字。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;确实，可以，但是性能不够好。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有更优雅的处理方案，即基于数据库的乐观锁，这样会少一次数据库查询，而且能够天然的保证数据操作的原子性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;只需将上面的sql稍微调整一下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;update product set stock=stock-&lt;span&gt;1&lt;/span&gt; where id=product and stock &amp;gt; &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在sql最后加上：&lt;code&gt;stock &amp;gt; 0&lt;/code&gt;，就能保证不会出现超卖的情况。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但需要频繁访问数据库，我们都知道数据库连接是非常昂贵的资源。在高并发的场景下，可能会造成系统雪崩。而且，容易出现多个请求，同时竞争行锁的情况，造成相互等待，从而出现死锁的问题。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;6.2 redis扣减库存&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis的&lt;code&gt;incr&lt;/code&gt;方法是原子性的，可以用该方法扣减库存。伪代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt; boolean&lt;/span&gt; exist = redisClient.query(productId,userId);&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt;(exist) {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; -&lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; stock = redisClient.queryStock(productId);&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt;(stock &amp;lt;=&lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;  }&lt;br/&gt;  redisClient.incrby(productId, -&lt;span&gt;1&lt;/span&gt;);&lt;br/&gt;  redisClient.add(productId,userId);&lt;br/&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代码流程如下：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;先判断该用户有没有秒杀过该商品，如果已经秒杀过，则直接返回-1。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;查询库存，如果库存小于等于0，则直接返回0，表示库存不足。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果库存充足，则扣减库存，然后将本次秒杀记录保存起来。然后返回1，表示成功。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;估计很多小伙伴，一开始都会按这样的思路写代码。但如果仔细想想会发现，这段代码有问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有什么问题呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果在高并发下，有多个请求同时查询库存，当时都大于0。由于查询库存和更新库存非原则操作，则会出现库存为负数的情况，即&lt;code&gt;库存超卖&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然有人可能会说，加个&lt;code&gt;synchronized&lt;/code&gt;不就解决问题？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;调整后代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;   &lt;span&gt;boolean&lt;/span&gt; exist = redisClient.query(productId,userId);&lt;br/&gt;   &lt;span&gt;if&lt;/span&gt;(exist) {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; -&lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;   }&lt;br/&gt;   &lt;span&gt;synchronized&lt;/span&gt;(&lt;span&gt;this&lt;/span&gt;) {&lt;br/&gt;       &lt;span&gt;int&lt;/span&gt; stock = redisClient.queryStock(productId);&lt;br/&gt;       &lt;span&gt;if&lt;/span&gt;(stock &amp;lt;=&lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;       }&lt;br/&gt;       redisClient.incrby(productId, -&lt;span&gt;1&lt;/span&gt;);&lt;br/&gt;       redisClient.add(productId,userId);&lt;br/&gt;   }&lt;br/&gt;&lt;br/&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;加&lt;code&gt;synchronized&lt;/code&gt;确实能解决库存为负数问题，但是这样会导致接口性能急剧下降，每次查询都需要竞争同一把锁，显然不太合理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了解决上面的问题，代码优化如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;boolean&lt;/span&gt; exist = redisClient.query(productId,userId);&lt;br/&gt;&lt;span&gt;if&lt;/span&gt;(exist) {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; -&lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;if&lt;/span&gt;(redisClient.incrby(productId, -&lt;span&gt;1&lt;/span&gt;)&amp;lt;&lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;redisClient.add(productId,userId);&lt;br/&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该代码主要流程如下：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;先判断该用户有没有秒杀过该商品，如果已经秒杀过，则直接返回-1。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;扣减库存，判断返回值是否小于0，如果小于0，则直接返回0，表示库存不足。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果扣减库存后，返回值大于或等于0，则将本次秒杀记录保存起来。然后返回1，表示成功。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该方案咋一看，好像没问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但如果在高并发场景中，有多个请求同时扣减库存，大多数请求的incrby操作之后，结果都会小于0。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽说，库存出现负数，不会出现&lt;code&gt;超卖的问题&lt;/code&gt;。但由于这里是预减库存，如果负数值负的太多的话，后面万一要回退库存时，就会导致库存不准。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么，有没有更好的方案呢？&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;6.3 lua脚本扣减库存&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们都知道lua脚本，是能够保证原子性的，它跟redis一起配合使用，能够完美解决上面的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;lua脚本有段非常经典的代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;  StringBuilder lua = &lt;span&gt;new&lt;/span&gt; StringBuilder();&lt;br/&gt;  lua.append(&lt;span&gt;&quot;if (redis.call(&#x27;exists&#x27;, KEYS[1]) == 1) then&quot;&lt;/span&gt;);&lt;br/&gt;  lua.append(&lt;span&gt;&quot;    local stock = tonumber(redis.call(&#x27;get&#x27;, KEYS[1]));&quot;&lt;/span&gt;);&lt;br/&gt;  lua.append(&lt;span&gt;&quot;    if (stock == -1) then&quot;&lt;/span&gt;);&lt;br/&gt;  lua.append(&lt;span&gt;&quot;        return 1;&quot;&lt;/span&gt;);&lt;br/&gt;  lua.append(&lt;span&gt;&quot;    end;&quot;&lt;/span&gt;);&lt;br/&gt;  lua.append(&lt;span&gt;&quot;    if (stock &amp;gt; 0) then&quot;&lt;/span&gt;);&lt;br/&gt;  lua.append(&lt;span&gt;&quot;        redis.call(&#x27;incrby&#x27;, KEYS[1], -1);&quot;&lt;/span&gt;);&lt;br/&gt;  lua.append(&lt;span&gt;&quot;        return stock;&quot;&lt;/span&gt;);&lt;br/&gt;  lua.append(&lt;span&gt;&quot;    end;&quot;&lt;/span&gt;);&lt;br/&gt;  lua.append(&lt;span&gt;&quot;    return 0;&quot;&lt;/span&gt;);&lt;br/&gt;  lua.append(&lt;span&gt;&quot;end;&quot;&lt;/span&gt;);&lt;br/&gt;  lua.append(&lt;span&gt;&quot;return -1;&quot;&lt;/span&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该代码的主要流程如下：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;先判断商品id是否存在，如果不存在则直接返回。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;获取该商品id的库存，判断库存如果是-1，则直接返回，表示不限制库存。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果库存大于0，则扣减库存。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果库存等于0，是直接返回，表示库存不足。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;7 分布式锁&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;之前我提到过，在秒杀的时候，需要先从缓存中查商品是否存在，如果不存在，则会从数据库中查商品。如果数据库中，则将该商品放入缓存中，然后返回。如果数据库中没有，则直接返回失败。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;大家试想一下，如果在高并发下，有大量的请求都去查一个缓存中不存在的商品，这些请求都会直接打到数据库。数据库由于承受不住压力，而直接挂掉。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;那么如何解决这个问题呢？&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这就需要用redis分布式锁了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;7.1 setNx加锁&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用redis的分布式锁，首先想到的是&lt;code&gt;setNx&lt;/code&gt;命令。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;if&lt;/span&gt; (jedis.setnx(lockKey, val) == &lt;span&gt;1&lt;/span&gt;) {&lt;br/&gt;   jedis.expire(lockKey, timeout);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用该命令其实可以加锁，但和后面的设置超时时间是分开的，并非原子操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假如加锁成功了，但是设置超时时间失败了，该lockKey就变成永不失效的了。在高并发场景中，该问题会导致非常严重的后果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么，有没有保证原子性的加锁命令呢？&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;7.2 set加锁&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用redis的set命令，它可以指定多个参数。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;String result = jedis.set(lockKey, requestId, &lt;span&gt;&quot;NX&quot;&lt;/span&gt;, &lt;span&gt;&quot;PX&quot;&lt;/span&gt;, expireTime);&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;&quot;OK&quot;&lt;/span&gt;.equals(result)) {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;lockKey：锁的标识&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;requestId：请求id&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;NX：只在键不存在时，才对键进行设置操作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;PX：设置键的过期时间为 millisecond 毫秒。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;expireTime：过期时间&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;由于该命令只有一步，所以它是原子操作。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;7.3 释放锁&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来，有些朋友可能会问：在加锁时，既然已经有了lockKey锁标识，为什么要需要记录requestId呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答：requestId是在释放锁的时候用的。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;if&lt;/span&gt; (jedis.get(lockKey).equals(requestId)) {&lt;br/&gt;    jedis.del(lockKey);&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在释放锁的时候，只能释放自己加的锁，不允许释放别人加的锁。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里为什么要用requestId，用userId不行吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答：如果用userId的话，假设本次请求流程走完了，准备删除锁。此时，巧合锁到了过期时间失效了。而另外一个请求，巧合使用的相同userId加锁，会成功。而本次请求删除锁的时候，删除的其实是别人的锁了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然使用lua脚本也能避免该问题：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;if&lt;/span&gt; redis.call(&lt;span&gt;&#x27;get&#x27;&lt;/span&gt;, KEYS[&lt;span&gt;1&lt;/span&gt;]) == ARGV[&lt;span&gt;1&lt;/span&gt;] then &lt;br/&gt; &lt;span&gt;return&lt;/span&gt; redis.call(&lt;span&gt;&#x27;del&#x27;&lt;/span&gt;, KEYS[&lt;span&gt;1&lt;/span&gt;]) &lt;br/&gt;&lt;span&gt;else&lt;/span&gt; &lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt; &lt;br/&gt;end&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它能保证查询锁是否存在和删除锁是原子操作。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;7.4 自旋锁&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的加锁方法看起来好像没有问题，但如果你仔细想想，如果有1万的请求同时去竞争那把锁，可能只有一个请求是成功的，其余的9999个请求都会失败。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在秒杀场景下，会有什么问题？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答：每1万个请求，有1个成功。再1万个请求，有1个成功。如此下去，直到库存不足。这就变成均匀分布的秒杀了，跟我们想象中的不一样。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何解决这个问题呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答：使用自旋锁。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;  Long start = System.currentTimeMillis();&lt;br/&gt;  &lt;span&gt;while&lt;/span&gt;(&lt;span&gt;true&lt;/span&gt;) {&lt;br/&gt;      String result = jedis.set(lockKey, requestId, &lt;span&gt;&quot;NX&quot;&lt;/span&gt;, &lt;span&gt;&quot;PX&quot;&lt;/span&gt;, expireTime);&lt;br/&gt;     &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;&quot;OK&quot;&lt;/span&gt;.equals(result)) {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;     }&lt;br/&gt;     &lt;br/&gt;     &lt;span&gt;long&lt;/span&gt; time = System.currentTimeMillis() - start;&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (time&amp;gt;=timeout) {&lt;br/&gt;          &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;      }&lt;br/&gt;      &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;          Thread.sleep(&lt;span&gt;50&lt;/span&gt;);&lt;br/&gt;      } &lt;span&gt;catch&lt;/span&gt; (InterruptedException e) {&lt;br/&gt;          e.printStackTrace();&lt;br/&gt;      }&lt;br/&gt;  }&lt;br/&gt; &lt;br/&gt;} &lt;span&gt;finally&lt;/span&gt;{&lt;br/&gt;    unlock(lockKey,requestId);&lt;br/&gt;}  &lt;br/&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在规定的时间，比如500毫秒内，自旋不断尝试加锁，如果成功则直接返回。如果失败，则休眠50毫秒，再发起新一轮的尝试。如果到了超时时间，还未加锁成功，则直接返回失败。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;7.5 redisson&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了上面的问题之外，使用redis分布式锁，还有锁竞争问题、续期问题、锁重入问题、多个redis实例加锁问题等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这些问题使用redisson可以解决，由于篇幅的原因，在这里先保留一点悬念，有疑问的私聊给我。后面会出一个专题介绍分布式锁，敬请期待。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;8 mq异步处理&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们都知道在真实的秒杀场景中，有三个核心流程：&lt;img data-ratio=&quot;0.1813953488372093&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WOMk1072ViblQbCrekBL5LHcAjrh2BOl0CbsicGpJLZ9blYlaothFibFKQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;860&quot;/&gt;而这三个核心流程中，真正并发量大的是秒杀功能，下单和支付功能实际并发量很小。所以，我们在设计秒杀系统时，有必要把下单和支付功能从秒杀的主流程中拆分出来，特别是下单功能要做成mq异步处理的。而支付功能，比如支付宝支付，是业务场景本身保证的异步。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于是，秒杀后下单的流程变成如下：&lt;img data-ratio=&quot;0.4477211796246649&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6W6TT1YmZj6HavibIUd4Bia2qlbRj6DGVsu86ha6ibHCT7cia1Hb0XwOPDlg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;746&quot;/&gt;如果使用mq，需要关注以下几个问题：&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;8.1 消息丢失问题&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;秒杀成功了，往mq发送下单消息的时候，有可能会失败。原因有很多，比如：网络问题、broker挂了、mq服务端磁盘问题等。这些情况，都可能会造成消息丢失。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么，如何防止消息丢失呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答：加一张消息发送表。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5745721271393643&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WRowepPX6gu406355uk0kOdIEsLqVFAdX6pemOqHJTRU1q0dribaAUVQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;818&quot;/&gt;在生产者发送mq消息之前，先把该条消息写入消息发送表，初始状态是待处理，然后再发送mq消息。消费者消费消息时，处理完业务逻辑之后，再回调生产者的一个接口，修改消息状态为已处理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果生产者把消息写入消息发送表之后，再发送mq消息到mq服务端的过程中失败了，造成了消息丢失。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这时候，要如何处理呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答：使用job，增加重试机制。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3169164882226981&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6W1tS8dkSicvRHG3L4SgaWnw3zv62UoYwcqwvX6ia2RrBl9L8J67KqDcqw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;934&quot;/&gt;用job每隔一段时间去查询消息发送表中状态为待处理的数据，然后重新发送mq消息。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;8.2 重复消费问题&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本来消费者消费消息时，在ack应答的时候，如果网络超时，本身就可能会消费重复的消息。但由于消息发送者增加了重试机制，会导致消费者重复消息的概率增大。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么，如何解决重复消息问题呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答：加一张消息处理表。&lt;img data-ratio=&quot;0.8648648648648649&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WyLiamMS9BcOLmqR29NNicT3QOicA7kM8q5Mgeic6pI09a4rOrMcUOiacFng/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;814&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消费者读到消息之后，先判断一下消息处理表，是否存在该消息，如果存在，表示是重复消费，则直接返回。如果不存在，则进行下单操作，接着将该消息写入消息处理表中，再返回。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有个比较关键的点是：下单和写消息处理表，要放在同一个事务中，保证原子操作。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;8.3 垃圾消息问题&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这套方案表面上看起来没有问题，但如果出现了消息消费失败的情况。比如：由于某些原因，消息消费者下单一直失败，一直不能回调状态变更接口，这样job会不停的重试发消息。最后，会产生大量的垃圾消息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么，如何解决这个问题呢？&lt;img data-ratio=&quot;0.36714285714285716&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WcBk6ryGFMzdGQ0icIrQ44MeLqVlzZmEuVdONgLcDq7t5hlUbmibuXAow/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1400&quot;/&gt;每次在job重试时，需要先判断一下消息发送表中该消息的发送次数是否达到最大限制，如果达到了，则直接返回。如果没有达到，则将次数加1，然后发送消息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样如果出现异常，只会产生少量的垃圾消息，不会影响到正常的业务。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;8.4 延迟消费问题&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通常情况下，如果用户秒杀成功了，下单之后，在15分钟之内还未完成支付的话，该订单会被自动取消，回退库存。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么，在15分钟内未完成支付，订单被自动取消的功能，要如何实现呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们首先想到的可能是job，因为它比较简单。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但job有个问题，需要每隔一段时间处理一次，实时性不太好。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有更好的方案？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答：使用延迟队列。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们都知道rocketmq，自带了延迟队列的功能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.596989966555184&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WsTJ6VrbXywUXRibXOs2M7KPK04k28ITLaiaKkVLicSNcPVmxTCajXYkxw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1196&quot;/&gt;下单时消息生产者会先生成订单，此时状态为待支付，然后会向延迟队列中发一条消息。达到了延迟时间，消息消费者读取消息之后，会查询该订单的状态是否为待支付。如果是待支付状态，则会更新订单状态为取消状态。如果不是待支付状态，说明该订单已经支付过了，则直接返回。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有个关键点，用户完成支付之后，会修改订单状态为已支付。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7036082474226805&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WfFr3uWlS9SLBmp1X4smbZOo43o4qTxibFCiad7duRBErgMmeEkepUR0A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;776&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;9 如何限流？&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过秒杀活动，如果我们运气爆棚，可能会用非常低的价格买到不错的商品（这种概率堪比买福利彩票中大奖）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但有些高手，并不会像我们一样老老实实，通过秒杀页面点击秒杀按钮，抢购商品。他们可能在自己的服务器上，模拟正常用户登录系统，跳过秒杀页面，直接调用秒杀接口。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果是我们手动操作，一般情况下，一秒钟只能点击一次秒杀按钮。&lt;img data-ratio=&quot;0.34615384615384615&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WFD0E0JABicb2V2fsnahsPqibKYL28BPNDPSyB3lQIibNHibtUMpqaPBrYQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;936&quot;/&gt;但是如果是服务器，一秒钟可以请求成上千接口。&lt;img data-ratio=&quot;0.3194444444444444&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WCV3OFOZpGduAgUybkIHxXo6ibjiamjlfsuEpic1CutqyEEH9ubWodGC7Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;864&quot;/&gt;这种差距实在太明显了，如果不做任何限制，绝大部分商品可能是被机器抢到，而非正常的用户，有点不太公平。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，我们有必要识别这些非法请求，做一些限制。那么，我们该如何现在这些非法请求呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前有两种常用的限流方式：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;基于nginx限流&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;基于redis限流&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;9.1 对同一用户限流&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了防止某个用户，请求接口次数过于频繁，可以只针对该用户做限制。&lt;img data-ratio=&quot;1.0737463126843658&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WWrclDcxJnOHVVo67sTtEUKzjn71BDdHfIXFO1G1sNgnuPuVMic6YpeQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;678&quot;/&gt;限制同一个用户id，比如每分钟只能请求5次接口。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;9.2 对同一ip限流&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有时候只对某个用户限流是不够的，有些高手可以模拟多个用户请求，这种nginx就没法识别了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这时需要加同一ip限流功能。&lt;img data-ratio=&quot;1.087087087087087&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WSouBTgpPsmuSSw7ibNaRAsfInBicq5iaeRWK2hc6uQ51THYRmNygvKNZA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;666&quot;/&gt;限制同一个ip，比如每分钟只能请求5次接口。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但这种限流方式可能会有误杀的情况，比如同一个公司或网吧的出口ip是相同的，如果里面有多个正常用户同时发起请求，有些用户可能会被限制住。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;9.3 对接口限流&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;别以为限制了用户和ip就万事大吉，有些高手甚至可以使用代理，每次都请求都换一个ip。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这时可以限制请求的接口总次数。&lt;img data-ratio=&quot;1.0840840840840842&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WrXcDZsboWeDEv2ppN57wwG8GiahwThbibyFxTodv54egRjZokToFp75Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;666&quot;/&gt;在高并发场景下，这种限制对于系统的稳定性是非常有必要的。但可能由于有些非法请求次数太多，达到了该接口的请求上限，而影响其他的正常用户访问该接口。看起来有点得不偿失。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;9.4 加验证码&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;相对于上面三种方式，加验证码的方式可能更精准一些，同样能限制用户的访问频次，但好处是不会存在误杀的情况。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.2680722891566265&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDF1pkYdc953Rh1YkibbNWs6WvUNYJJGrXEz2YqfSvZ8fvicdgRrrAx6ibESFSvYedKdZzOuqWJ3QMtWQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;664&quot;/&gt;通常情况下，用户在请求之前，需要先输入验证码。用户发起请求之后，服务端会去校验该验证码是否正确。只有正确才允许进行下一步操作，否则直接返回，并且提示验证码错误。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此外，验证码一般是一次性的，同一个验证码只允许使用一次，不允许重复使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;普通验证码，由于生成的数字或者图案比较简单，可能会被破解。优点是生成速度比较快，缺点是有安全隐患。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有一个验证码叫做：&lt;code&gt;移动滑块&lt;/code&gt;，它生成速度比较慢，但比较安全，是目前各大互联网公司的首选。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;9.5 提高业务门槛&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面说的加验证码虽然可以限制非法用户请求，但是有些影响用户体验。用户点击秒杀按钮前，还要先输入验证码，流程显得有点繁琐，秒杀功能的流程不是应该越简单越好吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实，有时候达到某个目的，不一定非要通过技术手段，通过业务手段也一样。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;12306刚开始的时候，全国人民都在同一时刻抢火车票，由于并发量太大，系统经常挂。后来，重构优化之后，将购买周期放长了，可以提前20天购买火车票，并且可以在9点、10、11点、12点等整点购买火车票。调整业务之后（当然技术也有很多调整），将之前集中的请求，分散开了，一下子降低了用户并发量。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;回到这里，我们通过提高业务门槛，比如只有会员才能参与秒杀活动，普通注册用户没有权限。或者，只有等级到达3级以上的普通用户，才有资格参加该活动。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样简单的提高一点门槛，即使是黄牛党也束手无策，他们总不可能为了参加一次秒杀活动，还另外花钱充值会员吧？&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f1673e404b499fa0bb7bbf1e31855e8c</guid>
<title>看了读者阿里面经，总结了这几个面试关键点</title>
<link>https://toutiao.io/k/ndwzphu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你好，我是yes。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上周末写文提到有一位读者朋友拿到了有赞阿里 offer 来感谢的事儿，他说主要是看我、艾总、安琪拉的文章，哈哈夹在两阿里P7之中的我瑟瑟发抖。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天他在艾总的公众号上分享了他近两个月的面经，再结合这两个月有挺多人来找我说面试老被挂的情况，来谈谈面试的几个关键点。这几点要是掌握了之后，基本上运气不要太差，面试都是 ok 的。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;你负责的项目&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看了下他百世、光云、来未来、大搜车、婚礼纪、银泰、有赞、阿里的关于项目的面试题，我总结一下大致包含以下几个方面：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;介绍下你最复杂的项目&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;画下项目的业务架构图&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;画下项目数据流的流向&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;多少个节点？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;项目 qps、数据量&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上几个点需要重点把握，身为项目开发你理应了解项目整体架构与数据流向，还有项目的峰值qps、平均qps、tps等，如果你不了解，侧面反映你在现公司是边缘人物，或者没有自己主动去争取、去了解、去为了项目优化而做努力，没有总览全局，谈何优化。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还会问：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;为什么项目是这个架构&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;说下你项目中比较优秀的点、最有成就感的点&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;说下你项目线上遇到的问题、如何解决、其中最大挑战是啥、有什么思考？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上几个点主要考察你是否有自我思考，是否深入研究或者质疑过当前的设计(而不是逆来顺受)。负责的项目是否太过简单，平平无奇？是否有排查线上问题的经验，排的思路是否清晰，事后是否有总结复盘等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还会问：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;如果流量激增100倍，你认为你们这个系统哪里最先出现瓶颈？如何解决？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;或者问你负责的某个模块流量激增100倍，你该如何设计？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上还是考察你是否有仔细思考过项目的架构，或者你自己的设计，看你是否能 hold 住更大的挑战，也算随机应变的能力。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还会问：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;项目中MQ应用场景&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;项目中设计模式的使用&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;项目中的开放封闭原则和自定义bean实现&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;项目中秒单模块的优化&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上这几点是你&lt;span&gt;诱惑&lt;/span&gt;面试官问你的。虽说没看过这位读者的简历，但是从多家公司都问的情况不难推测，简历里面肯定写的利用MQ干啥了，利用设计模式优化了什么模块、秒单模块等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以&lt;span&gt;刻意准备&lt;/span&gt;几个点，写在简历上，诱导面试官问，就像秒杀，你简历写了负责一次秒杀活动，你觉得面试官会不会问？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即使这个&lt;span&gt;秒杀&lt;/span&gt;活动不是你负责的，但是你为了在简历上写这点，去充分准备了，去请教负责的同事、查阅各种资料，搞清其中的复杂点，能 hold 住面试官的连环问，那这个活动不就是你自己做的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好好准备准备，你真实做没做过不重要，你把所有原理和细节够能说出来就能证明你自己了，&lt;span&gt;所以简历得准备几个点，比较容易体现你比较牛皮的点，给面试官挖坑，让他跳&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关于项目，上面说到的都准备了，就很稳，如果上面的题目你还答不出来，趁面试前好好理一理，理完之后找几个公司，练练手，然后再去你心仪的公司面试，&lt;span&gt;因为有时候你自己说，和面试官问你的时候，回答出来的答案是不一样的&lt;/span&gt;，所以需要实战一下。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;数据库&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要是 MySQL，这个和项目一样，必问。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一大类：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;MySQL索引实现原理，为什么这么快&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;索引数据结构，为什么不用B树、红黑树之类的&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据库事务ACID是如何实现的&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;MySQL的架构图&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;MySQL是如何排序的，排序算法&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;between  and 和 in 的区别&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何预防死锁，OS如何做的？MySQL如何做的&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;同样一条查询语句，有时候快有时候慢，什么原因导致的？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这类属于原理类问题，这个系列我在更新中-&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzkxNTE3NjQ3MA==&amp;amp;mid=2247489812&amp;amp;idx=1&amp;amp;sn=0bdab567b676d46fb68987075e53a263&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;四本书、一个专栏，揉成这篇MySQL&lt;/a&gt;，现在还属于&lt;span&gt;总览阶段&lt;/span&gt;，也就是粗略的把关键知识点先过一遍，然后之后详细深入。出发点是想先连成面，再各个击破。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第二类：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;线上SQL调优经验，调优的惯用思路&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;线上MySQL CPU报警了，如何快速锁定问题并且解决？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是实战问题了，如果你没调优过 SQL，没有处理过线上的 SQL 问题，可以去网上找些例子，这个是一定要准备的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你也可以自己根据当前项目的表结构，&lt;span&gt;自己给自己提一个复杂的查询需求&lt;/span&gt;，自己写写 SQL ，然后一步步优化，这不就是线上调优吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般的调优就是为了用上索引，有一些排序需要的内存过大，得用到磁盘，有些关联的表太多，有些buffer配置过小等等，都是调优的方面，还有业务调优的，就是把这个需求砍了，不是产品要啥就做啥，需要评估实现难度的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第三类：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;设计一个商品类目的数据库存储，查询的时间复杂度说一下。如何做优化？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种属于数据库设计类问题了，如果你没有设计过数据库，可以自己写一个开源项目，或者跟着写一个开源项目来练练手。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;或者还是自己根据当前项目的表结构，假设来了一个新需求，需要加新的功能模块，需要加表，你自己思考下看如何设计？&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;消息队列&lt;/span&gt;&lt;/h1&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;MQ选型，为什么用这个MQ&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;业务上如何保证消息不丢失？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;业务上如何保证消息不重复？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;业务上如何处理消息堆积？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;业务上如何保持消息有序性？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;消息写入失败这么办？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;RocketMQ 为什么那么快？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;事务消息&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;让你设计一个MQ你如何设计？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;读者遇到的就是这几个题，MQ不外乎也就这几个题，那这几个题呢，很巧我都写了，看我写的这几篇，够了。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Redis&lt;/span&gt;&lt;/h1&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Redis 挂了怎么解决？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;分布式锁，为什么使用Redisson？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;redis 持久化&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Redis 为什么那么快？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何保证 本地缓存 和 redis 还有mysql 的数据一致性&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;redis 的缓存穿透如何解决？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;布隆过滤器 如何实现的？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;项目中redis用来做什么了？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;热 key 的问题处理。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关于缓存基本上不外乎问的都是以上几点，注重点放在分布式锁的实现和问题，缓存一致性，本地缓存兜底等操作，其他类似 redis 的一些实现机制，单线程的执行情况，想详细了解的话，建议看书之后再看下源码。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我之前分享过黄老师的基于 Redis 3.0的&lt;span&gt;有中文注释的源码&lt;/span&gt;，公众号后台回复 redis 即可获得。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.2730434782608695&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nFBRbjdEQpk5BtWkGTVAjaic2HnvOAkIcpiaWhEiaDd8csn4EM6hHrOnW7shyJJKQHpCA5QqzLosEicHQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;575&quot;/&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Java基础&lt;/span&gt;&lt;/h1&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;线程池问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;线程OOM排查&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;GC&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;HashMap、ConcurrentHashMap&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;锁&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;差不多就是以上几点，关于线程池的，看我这篇就差不多了：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;锁的话，看这几篇：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;GC，看这几篇：&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;笔试&lt;/span&gt;&lt;/h1&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;实现一个多叉树，遍历打印&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;手写单例&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;实现一个双向链表的insert，find，delete的方法&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看了下，好像就两家公司要求笔试，不过这方面还是得准备的，基本题目的还是得刷，比如剑指offer的。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;其他问题&lt;/span&gt;&lt;/h1&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;spring、springboot&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;dubbo + zk&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从上面面经来看，spring 和 dubbo 问的不是很多，就个别几个问题，不过平时还是得认真准备，主要看你简历突出哪些点，你突出 spring 肯定问你 spring。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还是很多零散的问题，我就不贴了，这种贴不完的。抓住上面的主线，关键点：&lt;span&gt;项目、数据库、消息队列、缓存、框架&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;社招基本上关注这些点，还有一些设计类题，像之前有读者问我如何设计虚拟券、短链系统，等等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主线如果抓住了、掌握了，&lt;span&gt;面试就是玩儿&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对了，这位读者三年经验。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;最后&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看了面经有感，粗略地写了这篇，希望对那些面试经常被挂的同学有所帮助，找到主线去学就完事儿啦！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;捋下来，好多面试问题我的文章都写到了，之后再把没写到的填充上去，嘿嘿。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我还有个面试交流群，交流面经，有兴趣的可以加我微信，备注&lt;span&gt;面试&lt;/span&gt;，我拉你进群。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9323725055432373&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nFKOUjZxbnrDTM4NOKfEbbYhOgZB2WDeCBEOIibXrf9Ab9QEEiafZfJLHUwiaick6OASX3R1FlOibF6MsA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;902&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我的&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzkxNTE3NjQ3MA==&amp;amp;mid=2247489472&amp;amp;idx=2&amp;amp;sn=20da41118ddb4208d57e16eceea677c3&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;一对一解答服务&lt;/a&gt;持续开放，不走知识星球直接私聊我。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;详细面经可以看&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzkzNTEwOTAxMA==&amp;amp;mid=2247492792&amp;amp;idx=1&amp;amp;sn=bbcff6d4a64a987b471fdd50e9837ac1&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;艾总的这篇&lt;/a&gt;&lt;span/&gt;&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我是yes，如果觉得文章不错，欢迎关注~&lt;span&gt;点赞、在看、留言&lt;/span&gt;走一波。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从一点点到亿点点，我们下篇见。&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzkxNTE3NjQ3MA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nEf5LN3Y4UErfNUkiaMseJPkdXA4xPD6Uicl8EqAJAEKVIKalU19xS41TO3aPmHK5bqbzGTwu3z92Kg/0?wx_fmt=png&quot; data-nickname=&quot;yes的练级攻略&quot; data-alias=&quot;yes_java&quot; data-signature=&quot;用接地气的话来分享一些后端技术或写一些想写的。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>922b30e72f13aff38197016598841d72</guid>
<title>一起来逆向分析吃鸡外挂</title>
<link>https://toutiao.io/k/8h03iv9</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p mpa-paragraph-type=&quot;body&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;   &lt;strong/&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUxODkyODE0Mg==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7asExq0Evsib5pHoD24M70jEAcyibfbqhMc6X4ZXy9ezVsmbY7Fictyz3GM6C3V7mu0KrenKlv0wwmw/0?wx_fmt=png&quot; data-nickname=&quot;小道安全&quot; data-alias=&quot;kdsafety&quot; data-signature=&quot;以安全开发、逆向破解、黑客技术、病毒技术、灰黑产攻防为基础，兼论程序研发相关的技术点滴分享。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640?wx_fmt=png&quot; data-w=&quot;16&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;背景&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2222222222222223&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640?wx_fmt=png&quot; data-w=&quot;18&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640?wx_fmt=png&quot; data-w=&quot;16&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640?wx_fmt=png&quot; data-w=&quot;14&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;最近在浏览某网络论坛，看到一款&lt;span&gt;&lt;strong&gt;刺激战场的吃鸡外挂&lt;/strong&gt;&lt;/span&gt;软件下载量很高，出于对游戏外挂样本的敏感及逆向的专注，就从论坛上下载一个样本，并进行对该游戏外挂样本，深度功能分析及还原破解的逆向实践，&lt;span&gt;&lt;strong&gt;主要从外挂样本的功能表现，样本的基础属性、样本的实现功能、样本的验证功能破解进行实践&lt;/strong&gt;&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640?wx_fmt=png&quot; data-w=&quot;16&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;基本属性&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640?wx_fmt=png&quot; data-ratio=&quot;1.2222222222222223&quot; data-w=&quot;18&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640?wx_fmt=png&quot; data-w=&quot;16&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640?wx_fmt=png&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;(分析这些未知的软件切记得在虚拟机环境下进行)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;启动游戏辅助样本后，从表面上来看功能确实很强大，透视、距离、显血、自瞄这些都是玩家想用游戏辅助的一个痛点。但这游戏辅助功能都有实现吗？有这么强大了吗？&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.4513715710723192&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7pD4nuXBOEbicAcBvTnMOXMElT5eyicsFowqXLjhep3cX4ScTLupkyFlpJBxuAQ8RnficIpw6T0reJw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;401&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;结合&lt;span&gt;&lt;strong&gt;Exeinfo PE和pchunter工具&lt;/strong&gt;&lt;/span&gt;可以得出样本基本属性的结果。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;该样本是通过易语言&lt;span&gt;&lt;strong&gt;(WTWindow类名是易语言特有&lt;/strong&gt;&lt;/span&gt;)进行开发的，从&lt;span&gt;&lt;strong&gt;查壳和区段信息&lt;/strong&gt;&lt;/span&gt;来看，该样本是没有做任何保护的普通样本。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.4990476190476191&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7pD4nuXBOEbicAcBvTnMOXMiaQ1oCQtAVVQvjQVicHTys0A2ziaB2re1pDmJ71n5AnoFDE7K8cNjGJDA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;525&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.19734904270986744&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7pD4nuXBOEbicAcBvTnMOXMd0DPM7UjV30xWZ2gC2AWuT3O9QADiaOjeoXJAjZTeeT0tLdmO4I6Eiag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;679&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.2737226277372263&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7pD4nuXBOEbicAcBvTnMOXMUylJ0noID0V0vtw7aRCicFeyEKxualCcBOria9AhX1AFCY3FghT8DjUQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;548&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640?wx_fmt=png&quot; data-ratio=&quot;1.375&quot; data-w=&quot;16&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;注册码破解&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2222222222222223&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;18&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640?wx_fmt=png&quot; data-ratio=&quot;1&quot; data-w=&quot;16&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640?wx_fmt=png&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;样本点击开启辅助功能的时候，提示需要先进行获取注册码，进行对样本功能激活，才能正常使用样本的功能。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.5111989459815547&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7pD4nuXBOEbicAcBvTnMOXMWBiafZb0iadBc95Nv8EKubCMDoIEUFicFMfwiaDE7jbcRQXrUL0e5MooQA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;759&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;点击获取注册码按钮，会弹出扫描支付的对话框，但是对话框 是空白的。通过逆向分析得出的结论是，奈何该样本开发作者的服务器，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;已经过期而且是没有进行备案登记的&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，所以样本通过&lt;span&gt;&lt;strong&gt;http通讯方式&lt;/strong&gt;&lt;/span&gt;，进行向服务器请求支付的二维码图片就请求失败，所以弹出的支付对话框就是空白的界面。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;img data-ratio=&quot;0.12666666666666668&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7pD4nuXBOEbicAcBvTnMOXMUu7AvWaEmcR36YLKbmFaQ9xicLY4SFhYYibRGCEgo6azheGWAtZy09hQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.9026915113871635&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7pD4nuXBOEbicAcBvTnMOXMp1BLdftwI6EL92CctqExibphsXSkpm2HBr5INhrcVzs2icLwEHUBX5Kg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;483&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;对于要逆向破解程序某功能点时，主要需要通过强大的ollydbg工具进行做动态调试，其他工具如IDA、procmon、pchunter等主要是作为逆向分析破解的辅助点和参考点。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;分析易语言样本可采用的通用突破点&lt;/span&gt;&lt;/p&gt;&lt;section mpa-paragraph-type=&quot;body&quot;&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;通过下对话框函数断点MessageBoxA&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;从字符串进行入手下断点&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;通过搜索易语言按钮事件特征码(FF 55 FC 5F 5E 89 5D F4 )进行下断点。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;注册码的破解流程步骤&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;在ollydbg工具中，通过&lt;span&gt;&lt;strong&gt;下系统API函数&lt;/strong&gt;&lt;/span&gt;也就是弹出对话的MessageBoxA函数下int3断点(F2断点)，接着去点击获取的按钮，以触发调用函数，这个时候ollydbg工具中也会触发int3断点，在通过在断点中的&lt;span&gt;&lt;strong&gt;堆栈信息上进行回溯&lt;/strong&gt;&lt;/span&gt;分析。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.6157407407407407&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7pD4nuXBOEbicAcBvTnMOXMLrmich16jqcYHSZVayD1S1Cic1kxK7HwT98ltslurqkTaic2x16p8d0TQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.6148796498905909&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7pD4nuXBOEbicAcBvTnMOXM4eO2ERFwLia81vhp4hK0ZW4ncgSEGzyH7VehpvgTLHsWfu383m6vPuQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;457&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;基于以上的方法进行分析，就可以不用通过扫描二维码支付，就可以获取到正确的转账单号，从而获取到正确的激活码。正确的转账单号直接写在代码中进行做判断，并且代码中校验是否正确的方式，通过账单号两位数为单位进行校验的。校验正确后，这个时候就会弹出正确激活码字符串信息了。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.7268623024830699&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7pD4nuXBOEbicAcBvTnMOXMTo7O12KsTuybNVtb6nSrZpdB9wOjyuYllatzlvAFyKsNEvjqamKZPQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;443&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;通过输入前面获取到激活码字符串信息，就可以进行激活辅助软件了。这个时候在进行点击开启辅助功能，就发现可以有正确的对话框提示了。(通过测试和验证分析并没有所谓的修改游戏客户端数据进行作弊的功能)&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.7604938271604939&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7pD4nuXBOEbicAcBvTnMOXMhibGGYjIvsh8vNuFVmG3X5q9tWKONibtNuxGur5dHrexSvxx54GF45Tw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;405&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640?wx_fmt=png&quot; data-ratio=&quot;1.375&quot; data-w=&quot;16&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;钩子技术分析&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640?wx_fmt=png&quot; data-ratio=&quot;1.2222222222222223&quot; data-w=&quot;18&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640?wx_fmt=png&quot; data-ratio=&quot;1&quot; data-w=&quot;16&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640?wx_fmt=png&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;（外挂样本中应用到钩子技术）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;1.实现钩子技术需要的三个系统函数&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;img data-ratio=&quot;0.31864406779661014&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7pD4nuXBOEbicAcBvTnMOXMelaT8VpgRASMiaUWXeKjuictFL2SnrJBU9jd2QPXfRxAciaEJBTiayuY6w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;590&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;img data-ratio=&quot;0.2327150084317032&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7pD4nuXBOEbicAcBvTnMOXM74LNmKdfqVXtNjR5VQutgb9FmFoj3XiaoeIicxIZ9tBhe136wdumCgAQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;593&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;img data-ratio=&quot;0.2576601671309192&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7pD4nuXBOEbicAcBvTnMOXMwOXzcRnd8ZfcxVpUhzInSh8M5x0qbSbiafskWoRTzDq9gib8tNGcn80g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;718&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;2.全局钩子注入方式的实现步骤&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;1.调用SetWindowsHookEXA设置安装钩子(可以按需进行设置不同类型钩子)&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;2.实现钩子的回调函数，再回调函数里面调用CallNextHookEx。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;3.调用UnhookWindowsHookExA卸载钩子&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;section mpa-paragraph-type=&quot;body&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;该辅助样本实现的功能&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;该吃鸡样本实现安装了两个钩子，主要用于监控对话框的输入事件，监控CBT程序的。&lt;span&gt;&lt;strong&gt;并没有通过钩子技术，实现对游戏客户端进程注入模块&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;监控对话框输入事件实现&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;对当前线程进行安装WH_MSGFILTER 钩子&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.47549019607843135&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7pD4nuXBOEbicAcBvTnMOXMOedxkiblAe7eedzVvw36Xt0iccgJ1ZwsBAJkzwOiblGuHz4gMGFuXECsg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;816&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;钩子的回调函数:主要是进行对话框输入事件进行监控。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.3047722342733189&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7pD4nuXBOEbicAcBvTnMOXM1ORaKIPPzicKYZicLv5537ibkd3PbhjcniaDViaZiaED8M0QziciboejQjthuA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;922&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;对CBT应用程序监控&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;对当前线程进行安装 WH_CBT钩子&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.6720430107526881&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7pD4nuXBOEbicAcBvTnMOXMJYIiaX6YmTibHKV2BPS8bs982Vf4Og7UX8e36ItoIL7KMxPuluPzaz4g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;558&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;CBT钩子的回调函数实现&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;1.0164917541229386&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7pD4nuXBOEbicAcBvTnMOXMbLicEBTwOLJQc6CKjUmcLesT4Ytolrs28cjWy7v3B0ibGVz5DcZwic75w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;667&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640?wx_fmt=png&quot; data-ratio=&quot;1.375&quot; data-w=&quot;16&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;总结&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640?wx_fmt=png&quot; data-ratio=&quot;1.2222222222222223&quot; data-w=&quot;18&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640?wx_fmt=png&quot; data-w=&quot;16&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640?wx_fmt=png&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;基于以上的分析，可以很清晰的得出结果，该辅助作者开发弹出对话框功能很多，实际实现有效功能是微乎其微的，它只是一个框架流程进行对话框展示。其实该样本就是个没有实际功能的辅助，只是为了忽悠小白的。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;作为一个常规的游戏辅助软件，一般都需具备网络验证、注入功能、内存读写功能。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;游戏中购买使用游戏辅助软件，这个是相对不明智的选择，毕竟这个双向的危险系数非常高的。其一使用游戏辅助那么就必定会面临被封号的风险。其二购买游戏辅助又容易被忽悠、被骗的情况出现。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.21428571428571427&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/84QSpkgaj14GBzMnf1ibXkydLwCmhrWBooDwrdnlqYlsyB5PetG1T1oXxJ63G8TK58dqkDo7uzR7bKic50DxbTQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;336&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;                           ▲往期相关文章▼&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;br/&gt;                            &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxODkyODE0Mg==&amp;amp;mid=2247484845&amp;amp;idx=1&amp;amp;sn=709d96466590af309ded6d2402c0df23&amp;amp;chksm=f98027cccef7aeda9f2d198851bde3bce9498b538c31a28a33e84d9ea505187456e66881756a&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;这个鸡腿是你能惦记的&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxODkyODE0Mg==&amp;amp;mid=2247483856&amp;amp;idx=1&amp;amp;sn=c2729337e539b68de39d8fd761c32dcf&amp;amp;chksm=f98023b1cef7aaa7dcdb435470ff347fe0acb6096c89b11d824797fe080df9c712b159fc3f95&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;                            我是这样对灰产 外挂 下手的&lt;/a&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;      &lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.028037383177570093&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_svg/XYrRG5UShDeGibNoQZgXicJOW4Ss1q8yN1xRqONKKlPnGh7dvAdcvuT8tYuGSeDJibicszI0CZPShu9UtRnEvA9shbglGps4fucP/640?wx_fmt=svg&quot; data-type=&quot;svg&quot; data-w=&quot;107&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.17647058823529413&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_svg/9UjCmequjUickLicqdUmtavXkUejKTHRF28k1CiayichS5TGzHLfAOF0UjWRmTaolibeFRpZQ5XOG0zEvfZZOGeJTVgRYZ3VvDDNZ/640?wx_fmt=svg&quot; data-type=&quot;svg&quot; data-w=&quot;17&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;点个 赞、&lt;span data-mid=&quot;&quot;&gt;在看&lt;/span&gt;你最好看&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.0434782608695652&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_svg/ylRhrSjQb8jeDpnF88X2eeSg1lzyKxW6EO1zSCZC3wCLAdPNomrSgTBWpHcGxxGNQTXbTC82mySYiaKThz99VBqX7t3uSBcrU/640?wx_fmt=svg&quot; data-type=&quot;svg&quot; data-w=&quot;23&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>61196bb5008c851e2279d2c465923c0d</guid>
<title>webpack 从 0 到 1 构建 vue</title>
<link>https://toutiao.io/k/ihkq5q8</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText&quot; usegifprops=&quot;[object Object]&quot;&gt;&lt;p&gt;前端领域框架百花齐放，各种优秀框架出现（react，Vue，ag）等等框架。为了方便开发者快速开发， 开发对应的 cli 脚手架，来提高产出。然而初中级的前端工程师对项目里的 webpack 封装和配置了解的不清楚，就容易导致出问题不知如何解决，甚至不会通过 webpack 去扩展新功能，对 webpack + vue 项目究竟是怎样搭建起来的感到一脸困惑，下面我们就来解决这个问题，揭开 webpack 构建 vue 的面纱。&lt;/p&gt;&lt;h2&gt;什么是 webpack ?&lt;/h2&gt;&lt;p&gt;酷炫动画的页面，高度复杂的页面功能，页面内容支持预加载(图片、骨架屏) ，这些高要求导致了项目的增加更多的代码。代码的增多，使得由来代码需要被组织的需求，由此产生了模块化。&lt;/p&gt;&lt;p&gt;&lt;b&gt;模块化的发展历程&lt;/b&gt;&lt;/p&gt;&lt;p&gt;传统的 &amp;lt;script&amp;gt; 标签，一个标签加载一个 js 文件。缺点就是全局变量太多，容易出现冲突，另外依赖顺序很重要，太多 js 不好管理 。后面出现了 node.js，有了 CommonJS 规范（同步的 require 请求），即一个模块是一个文件，想用谁直接 require 谁，想被谁用，就 module.exports 导出去。&lt;/p&gt;&lt;p&gt;虽然服务端使用起来方便，但是浏览器通过网络请求获取文件是异步的，所以出现了矛盾。为了解决 CommonJS 规范的缺陷，AMD 规范（异步的 require 请求）出现了，满足异步的网络请求，可以并行加载多个文件 ES6 modules，ES6 中自带对应的模块语法 input/exports，静态分析容易。但浏览器支持度不够，模块较少。为此  webpack 出现解决上述遇到的问题。&lt;/p&gt;&lt;h2&gt;模块化的解决方案 - webpack&lt;/h2&gt;&lt;p&gt;Webpack 是一个现代 JavaScript 应用程序的静态模块打包器(module bundler)。在 webpack 中所有的文件都将被当做模块使用，当 webpack 处理应用程序时，它会递归地构建一个依赖关系图（dependency graph），其中包含应用程序需要的每个模块，然后将所有这些模块打包成一个或多个bundle 。举例：把你的项目当做一个整体，通过一个给定的主文件（如：mian.js）, webpack 将这个文件开始找到你项目的所以依赖文件，使用 loaders 或者是 plugins 去处理它们，最后打包成一个（或者多个）浏览器可以识别的 JavaScript 文件。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-4ea94131c03ab4d1638916308ce0928d_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;518&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-4ea94131c03ab4d1638916308ce0928d_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;518&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-4ea94131c03ab4d1638916308ce0928d_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-4ea94131c03ab4d1638916308ce0928d_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h2&gt;&lt;br/&gt;webpack 的优缺点&lt;/h2&gt;&lt;p&gt;先来看看 webpack 的 3 个优点：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;模块化打包：&lt;/b&gt;将 css，js，ts，sass 等统一转换为浏览器可以识别的模式，并按需（压缩或不压缩）打包。&lt;/li&gt;&lt;li&gt;&lt;b&gt;webpack-plugin：&lt;/b&gt;webpack-plugin 是用来扩展 webpack 功能的插件，用来扩展 webpack 功能，并在整个构建过程中生效，执行相关任务。&lt;/li&gt;&lt;li&gt;&lt;b&gt;按需加载：&lt;/b&gt;代码中不需要的模块不被打进包里，或者按需加载。这是传统的流程构建工具，如 Gulp、Grunt 等所没办法实现的。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;也不能忽视它的下列缺点：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;传统技术开发的复杂项目不适用：&lt;/b&gt;一些比如 jquery，requirejs，seajs 等脚本模块化开发的复杂项目项目，由于打包需求不稳定，webpack 维护成本极高。&lt;/li&gt;&lt;li&gt;&lt;b&gt;侵入性较强：&lt;/b&gt;使用 webpack 的项目，某些高级语法特性需要依赖独特语法实现，在一定程度上属于面向 webpack 开发，需要一定的学习成本。&lt;/li&gt;&lt;li&gt;&lt;b&gt;兼容性问题：&lt;/b&gt;webpack 一向是面对最新标准，自身的很多特性需要 polyfill 才能向下兼容，甚至有些特性最新浏览器还没有原生兼容， 在做开发时候需要注意。&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;webpack 的构建流程&lt;/h2&gt;&lt;p&gt;Webpack 的构建流程是一种事件流机制。整个构建流程可以看成是一个流水线，每个环节负责单一的任务，处理完将进入下一个环节。&lt;/p&gt;&lt;p&gt;Webpack 会在每个环节上发布事件，供内置的和自定义的插件有机会干预 Webpack 的构建过程，控制 Webpack 的构建结果&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-a12f9968be3cc26702232696844df379_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;134&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-a12f9968be3cc26702232696844df379_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;134&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-a12f9968be3cc26702232696844df379_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-a12f9968be3cc26702232696844df379_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;初始化参数：&lt;/b&gt;从配置文件和 Shell 语句中读取与合并参数，得出最终的参数。&lt;/p&gt;&lt;p&gt;&lt;b&gt;开始编译：&lt;/b&gt;用上一步得到的参数初始化 Compiler 对象，加载所有配置的插件,执行对象的 run 方法开始执行编译。 确定入口：根据配置中的 entry 找出所有的入口文件。&lt;/p&gt;&lt;p&gt;&lt;b&gt;编译模块：&lt;/b&gt;从入口文件出发，调用所有配置的 Loader 对模块进行翻译，再找出该模块依赖的模块，再递归本步骤直到所有入口依赖的文件都经过了本步骤的处理。&lt;/p&gt;&lt;p&gt;&lt;b&gt;完成模块编译：&lt;/b&gt;在经过第 4 步使用 Loader 翻译完所有模块后，得到了每个模块被翻译后的最终内容以及它们之间的依赖关系。&lt;/p&gt;&lt;p&gt;&lt;b&gt;输出资源：&lt;/b&gt;根据入口和模块之间的依赖关系,组装成一个个包含多个模块的 Chunk，再把每个 Chunk 转换成一个单独的文件加入到输出列表，这步是可以修改输出内容的最后机会。&lt;/p&gt;&lt;p&gt;&lt;b&gt;输出完成：&lt;/b&gt;在确定好输出内容后，根据配置确定输出的路径和文件名，把文件内容写入到文件系统。&lt;/p&gt;&lt;p&gt;熟悉了 webpack 基本的构建流程那下面我们就进行实践操作构建 vue 项目&lt;/p&gt;&lt;h2&gt;webpack 构建vue项目&lt;/h2&gt;&lt;p&gt;&lt;b&gt;安装 webpack&lt;/b&gt;&lt;/p&gt;&lt;p&gt;使用版本：webpack5.x&lt;/p&gt;&lt;p&gt;新建 webpack-vue 项目，进入项目根目录，创建默认的 package.json&lt;/p&gt;&lt;p&gt;安装 webpack 和 webpack-cli：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;webpack - 模块打包库&lt;/li&gt;&lt;li&gt;webpack-cli - 命令行工具&lt;/li&gt;&lt;/ul&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-21775d830d7a54bf8a6a6bce17346002_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;150&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-21775d830d7a54bf8a6a6bce17346002_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;150&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-21775d830d7a54bf8a6a6bce17346002_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-21775d830d7a54bf8a6a6bce17346002_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;新建 src/main.js，里面随便写点 console.log(&#x27;hello,webpack-vue&#x27;)&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-c20f75d83e6ddbb5072ef00c900e584f_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;159&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-c20f75d83e6ddbb5072ef00c900e584f_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;159&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-c20f75d83e6ddbb5072ef00c900e584f_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-c20f75d83e6ddbb5072ef00c900e584f_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;result：&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-79cff4a0834f38ea366b652a0793b3f9_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;275&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-79cff4a0834f38ea366b652a0793b3f9_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;275&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-79cff4a0834f38ea366b652a0793b3f9_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-79cff4a0834f38ea366b652a0793b3f9_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;基础配置&lt;/b&gt;&lt;/p&gt;&lt;p&gt;新建一个 build 文件夹，新建一个 vue.config.js&lt;/p&gt;&lt;p&gt;&lt;b&gt;Entry&lt;/b&gt;&lt;/p&gt;&lt;p&gt;入口文件，webpack会首先从这里开始编译&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-db7490b356909c65081800ed122749cd_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;328&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-db7490b356909c65081800ed122749cd_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;328&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-db7490b356909c65081800ed122749cd_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-db7490b356909c65081800ed122749cd_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;Output&lt;/b&gt;&lt;/p&gt;&lt;p&gt;定义了打包后输出的位置，以及对应的文件名。[name]是一个占位符&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-f347c4d67befdf656d14793d4143ec3a_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;374&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-f347c4d67befdf656d14793d4143ec3a_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;374&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-f347c4d67befdf656d14793d4143ec3a_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-f347c4d67befdf656d14793d4143ec3a_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;result：&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-d1a7549f2f2cd02b82a5d082f4d155f9_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;239&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-d1a7549f2f2cd02b82a5d082f4d155f9_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;239&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-d1a7549f2f2cd02b82a5d082f4d155f9_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-d1a7549f2f2cd02b82a5d082f4d155f9_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;plugins&lt;/b&gt;&lt;/p&gt;&lt;p&gt;当我们构建项目时生成了 main.js 之后，需要一个 HTML 页面去展示，然后再 HTML 引入 JavaScript，当我们配置打包输出的 bundle 文件都配置了随机 hash 值，每次手动插入和下一次更新就特麻烦，最好方法是每次构建完成后自动将新的bundle 打包到 HTML 中并删除上一次旧的 bunble，所以我们需要 html-webpack-plugin 、clean-webpack-plugin 插件来帮我们自动引入和删除历史  bundle 文件&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-6e71dd6c000b7db3b5a472a825cd38c4_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;71&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-6e71dd6c000b7db3b5a472a825cd38c4_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;71&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-6e71dd6c000b7db3b5a472a825cd38c4_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-6e71dd6c000b7db3b5a472a825cd38c4_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;根目录新建一个 public/index.html 默认模板&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-6e1fa06e2ba8ffc1c0f16c00b6c1e926_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;370&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-6e1fa06e2ba8ffc1c0f16c00b6c1e926_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;370&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-6e1fa06e2ba8ffc1c0f16c00b6c1e926_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-6e1fa06e2ba8ffc1c0f16c00b6c1e926_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;配置 vue.config.js&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-0692c2355658554d00b1a00423d802ac_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;548&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-0692c2355658554d00b1a00423d802ac_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;548&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-0692c2355658554d00b1a00423d802ac_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-0692c2355658554d00b1a00423d802ac_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;result：&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-728b246b593552d06245e2441b648829_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;240&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-728b246b593552d06245e2441b648829_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;240&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-728b246b593552d06245e2441b648829_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-728b246b593552d06245e2441b648829_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;loaders&lt;/b&gt;&lt;/p&gt;&lt;p&gt;webpack 识别 css、sass 安装 loader，并将解析后的 css 插入到 index.html 里面的 style&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-5838d1b8be8870afa42fab976dc59cba_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;58&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-5838d1b8be8870afa42fab976dc59cba_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;58&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-5838d1b8be8870afa42fab976dc59cba_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-5838d1b8be8870afa42fab976dc59cba_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-9ba92b290cafd551bd4eed22f47db13a_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;520&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-9ba92b290cafd551bd4eed22f47db13a_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;520&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-9ba92b290cafd551bd4eed22f47db13a_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-9ba92b290cafd551bd4eed22f47db13a_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;result：&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-51356a99506352ded92b5cc6d29e68fb_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;338&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-51356a99506352ded92b5cc6d29e68fb_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;338&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-51356a99506352ded92b5cc6d29e68fb_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-51356a99506352ded92b5cc6d29e68fb_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;识别压缩图片、字体&lt;/b&gt;&lt;/p&gt;&lt;p&gt;webpack 识别图片、视频、字体、减少图片字体等打包的大小。我们可以使用 url-loader 将少于指定大小的文件转换为 base64，使用 file-loader 将大于指定大小的文件移动到指定的位置&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-591f81fa865365ca206795784e547f84_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;57&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-591f81fa865365ca206795784e547f84_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;57&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-591f81fa865365ca206795784e547f84_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-591f81fa865365ca206795784e547f84_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-2923ef5913b9d177ec4e114f4c7b863c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;666&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-2923ef5913b9d177ec4e114f4c7b863c_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;666&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-2923ef5913b9d177ec4e114f4c7b863c_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-2923ef5913b9d177ec4e114f4c7b863c_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;Babel&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Babel 是一个 JavaScript 编译器，能将 ES6 + 代码转为 ES5 代码，让你使用最新的语言特性而不用担心兼容性问题，&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-883b8a93ecb1cabc12ca389ffdc953df_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;44&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-883b8a93ecb1cabc12ca389ffdc953df_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;44&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-883b8a93ecb1cabc12ca389ffdc953df_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-883b8a93ecb1cabc12ca389ffdc953df_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-24f51692448ae62c2dbb2c1cd4d78976_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;351&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-24f51692448ae62c2dbb2c1cd4d78976_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;351&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-24f51692448ae62c2dbb2c1cd4d78976_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-24f51692448ae62c2dbb2c1cd4d78976_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;在 Babel 执行编译的过程中，会从项目根目录下的配置文件读取配置。在根目录下创建Babel的配置文件 .babelrc&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-c7b32f3b69cf1c1d4bae994363d31fb2_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;218&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-c7b32f3b69cf1c1d4bae994363d31fb2_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;218&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-c7b32f3b69cf1c1d4bae994363d31fb2_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-c7b32f3b69cf1c1d4bae994363d31fb2_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;兼容 vue&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;vue-loader&lt;/li&gt;&lt;li&gt;vue-template-compiler&lt;/li&gt;&lt;li&gt;vue-style-loader&lt;/li&gt;&lt;/ul&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-d514b26c8eb34bdd7f32961c306ac271_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;134&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-d514b26c8eb34bdd7f32961c306ac271_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;134&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-d514b26c8eb34bdd7f32961c306ac271_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-d514b26c8eb34bdd7f32961c306ac271_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-950bb4cb97f0b563c072bead90f17d44_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;482&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-950bb4cb97f0b563c072bead90f17d44_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;482&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-950bb4cb97f0b563c072bead90f17d44_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-950bb4cb97f0b563c072bead90f17d44_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-180852b25b9ee664b924d4acb83ac2a1_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;440&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-180852b25b9ee664b924d4acb83ac2a1_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;440&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-180852b25b9ee664b924d4acb83ac2a1_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-180852b25b9ee664b924d4acb83ac2a1_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;src文件夹内新建一个APP.vue，内容自定义&lt;/p&gt;&lt;p&gt;&lt;b&gt;热更新 HMR&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-1cc36e292711bb9a61ef4068f00342f5_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;50&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-1cc36e292711bb9a61ef4068f00342f5_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;50&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-1cc36e292711bb9a61ef4068f00342f5_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-1cc36e292711bb9a61ef4068f00342f5_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-264725f8ef303ee53a97590771737c98_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;678&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-264725f8ef303ee53a97590771737c98_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;678&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-264725f8ef303ee53a97590771737c98_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-264725f8ef303ee53a97590771737c98_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;配置 package.json&lt;/p&gt;&lt;p&gt;package.json：&quot;dev&quot;:&quot;webpack serve --config build/vue.config.js&quot;&lt;/p&gt;&lt;p&gt;&lt;b&gt;result：&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-a91898ea92489df0ec1df083deb8ad87_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;590&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-a91898ea92489df0ec1df083deb8ad87_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;590&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-a91898ea92489df0ec1df083deb8ad87_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-a91898ea92489df0ec1df083deb8ad87_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;推荐阅读：&lt;/b&gt;&lt;/p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://link.zhihu.com/?target=https%3A//www.upyun.com/tech/article/652/MySQL%2520%25E4%25B8%25AD%25E5%25AD%2598%25E5%2582%25A8%25E6%2597%25B6%25E9%2597%25B4%25E7%259A%2584%25E6%259C%2580%25E4%25BD%25B3%25E5%25AE%259E%25E8%25B7%25B5.html&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic1.zhimg.com/v2-c930bdf5e4303330e0c3d9b7dfb313b8_180x120.jpg&quot; data-image-width=&quot;685&quot; data-image-height=&quot;350&quot; class=&quot;LinkCard old LinkCard--hasImage&quot;&gt;&lt;span class=&quot;LinkCard-backdrop&quot;/&gt;&lt;span class=&quot;LinkCard-content&quot;&gt;&lt;span class=&quot;LinkCard-text&quot;&gt;&lt;span class=&quot;LinkCard-title&quot; data-text=&quot;true&quot;&gt;MySQL 中存储时间的最佳实践&lt;/span&gt;&lt;span class=&quot;LinkCard-meta&quot;&gt;&lt;span&gt;​&lt;svg class=&quot;Zi Zi--InsertLink&quot; fill=&quot;currentColor&quot; viewbox=&quot;0 0 24 24&quot;&gt;&lt;path d=&quot;M13.414 4.222a4.5 4.5 0 1 1 6.364 6.364l-3.005 3.005a.5.5 0 0 1-.707 0l-.707-.707a.5.5 0 0 1 0-.707l3.005-3.005a2.5 2.5 0 1 0-3.536-3.536l-3.005 3.005a.5.5 0 0 1-.707 0l-.707-.707a.5.5 0 0 1 0-.707l3.005-3.005zm-6.187 6.187a.5.5 0 0 1 .638-.058l.07.058.706.707a.5.5 0 0 1 .058.638l-.058.07-3.005 3.004a2.5 2.5 0 0 0 3.405 3.658l.13-.122 3.006-3.005a.5.5 0 0 1 .638-.058l.069.058.707.707a.5.5 0 0 1 .058.638l-.058.069-3.005 3.005a4.5 4.5 0 0 1-6.524-6.196l.16-.168 3.005-3.005zm8.132-3.182a.25.25 0 0 1 .353 0l1.061 1.06a.25.25 0 0 1 0 .354l-8.132 8.132a.25.25 0 0 1-.353 0l-1.061-1.06a.25.25 0 0 1 0-.354l8.132-8.132z&quot;/&gt;&lt;/svg&gt;&lt;/span&gt;www.upyun.com&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;LinkCard-imageCell&quot;&gt;&lt;img class=&quot;LinkCard-image LinkCard-image--horizontal&quot; alt=&quot;图标&quot; src=&quot;https://pic1.zhimg.com/v2-c930bdf5e4303330e0c3d9b7dfb313b8_180x120.jpg&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://link.zhihu.com/?target=https%3A//www.upyun.com/tech/article/638/Redis%2520%25E5%25AD%2598%25E5%2582%25A8%25E5%25AF%25B9%25E8%25B1%25A1%25E4%25BF%25A1%25E6%2581%25AF%25E6%2598%25AF%25E7%2594%25A8%2520Hash%2520%25E8%25BF%2598%25E6%2598%25AF%2520String.html&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic2.zhimg.com/v2-b26e344929e280d613d02cc849c0ed7d_180x120.jpg&quot; data-image-width=&quot;1240&quot; data-image-height=&quot;671&quot; class=&quot;LinkCard old LinkCard--hasImage&quot;&gt;&lt;span class=&quot;LinkCard-backdrop&quot;/&gt;&lt;span class=&quot;LinkCard-content&quot;&gt;&lt;span class=&quot;LinkCard-text&quot;&gt;&lt;span class=&quot;LinkCard-title&quot; data-text=&quot;true&quot;&gt;Redis 存储对象信息是用 Hash 还是 String&lt;/span&gt;&lt;span class=&quot;LinkCard-meta&quot;&gt;&lt;span&gt;​&lt;svg class=&quot;Zi Zi--InsertLink&quot; fill=&quot;currentColor&quot; viewbox=&quot;0 0 24 24&quot;&gt;&lt;path d=&quot;M13.414 4.222a4.5 4.5 0 1 1 6.364 6.364l-3.005 3.005a.5.5 0 0 1-.707 0l-.707-.707a.5.5 0 0 1 0-.707l3.005-3.005a2.5 2.5 0 1 0-3.536-3.536l-3.005 3.005a.5.5 0 0 1-.707 0l-.707-.707a.5.5 0 0 1 0-.707l3.005-3.005zm-6.187 6.187a.5.5 0 0 1 .638-.058l.07.058.706.707a.5.5 0 0 1 .058.638l-.058.07-3.005 3.004a2.5 2.5 0 0 0 3.405 3.658l.13-.122 3.006-3.005a.5.5 0 0 1 .638-.058l.069.058.707.707a.5.5 0 0 1 .058.638l-.058.069-3.005 3.005a4.5 4.5 0 0 1-6.524-6.196l.16-.168 3.005-3.005zm8.132-3.182a.25.25 0 0 1 .353 0l1.061 1.06a.25.25 0 0 1 0 .354l-8.132 8.132a.25.25 0 0 1-.353 0l-1.061-1.06a.25.25 0 0 1 0-.354l8.132-8.132z&quot;/&gt;&lt;/svg&gt;&lt;/span&gt;www.upyun.com&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;LinkCard-imageCell&quot;&gt;&lt;img class=&quot;LinkCard-image LinkCard-image--horizontal&quot; alt=&quot;图标&quot; src=&quot;https://pic2.zhimg.com/v2-b26e344929e280d613d02cc849c0ed7d_180x120.jpg&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;p/&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>