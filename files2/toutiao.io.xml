<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>1e22e4414b07b7f0d29b33c0799106a1</guid>
<title>2022 年别再焦虑啦！加入我们！</title>
<link>https://toutiao.io/k/obimloc</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                              &lt;strong class=&quot;profile_nickname&quot;&gt;开发者头条&lt;/strong&gt;
                              &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;kaifazhetoutiao&lt;/span&gt;
                              &lt;/p&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;程序员分享平台 | 官方应用下载地址：http://toutiao.io/download&lt;/span&gt;
                              &lt;/p&gt;
                              
                          &lt;/div&gt;
                          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>927b3d4b16177feb9f18abdd4a37ed0e</guid>
<title>阿里巴巴为什么要开源Spring Cloud Alibaba</title>
<link>https://toutiao.io/k/m8qquhu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section class=&quot;js_darkmode__bg__4 js_darkmode__85&quot; data-darkmode-bgimage=&quot;1&quot; data-mpa-category=&quot;背景&quot; data-style=&quot;background-image: url(&amp;quot;https://cdn.yiban.io/subscription_icon/2018-10-16+15%3a46%3a09.695832.jpg&amp;quot;);&quot; original-style=&quot;background-image: url(&amp;quot;https://cdn.yiban.io/subscription_icon/2018-10-16+15%3a46%3a09.695832.jpg&amp;quot;);&quot;&gt;&lt;p data-darkmode-bgimage=&quot;1&quot;&gt;  &lt;span&gt; &lt;span&gt;Spring Cloud Alibaba&lt;span/&gt;是阿里巴巴开源组织开源的一款，用于服务于微服务架构的基础中间件框架。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-darkmode-bgimage=&quot;1&quot;&gt;&lt;span&gt;     从框架演变的角度去分析，开发人员大致经历了Spring Framework、Spring Boot和Spring Cloud。&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;transform: translate(10px, -7px); width: 15px; height: 15px; background: rgb(255, 155, 167);&quot; class=&quot;js_darkmode__86&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;h1 data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;span&gt;01&lt;/span&gt;&lt;/h1&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;p data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;span&gt;服务注册与服务订阅&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;width: 100%; height: 2px; background: rgb(255, 155, 167);&quot; class=&quot;js_darkmode__87&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;width: 7px; height: 7px; background: rgb(255, 155, 167);&quot; class=&quot;js_darkmode__88&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-darkmode-bgimage=&quot;1&quot;&gt;&lt;br data-darkmode-bgimage=&quot;1&quot;/&gt;&lt;/p&gt;&lt;p data-darkmode-bgimage=&quot;1&quot;&gt;   &lt;span&gt; 作为微服务框架，最基础的功能就是服务注册与服务订阅。Spring Cloud Alibaba是一款基础中间件，那么他又是如何实现服务注册与服务发现的。&lt;/span&gt;&lt;/p&gt;&lt;p data-darkmode-bgimage=&quot;1&quot;&gt;&lt;span&gt;    具体模块实现如下：&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;transform: translate(10px, -7px); width: 15px; height: 15px; background: rgb(255, 155, 167);&quot; class=&quot;js_darkmode__89&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;h1 data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;span&gt;02&lt;/span&gt;&lt;/h1&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;p data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;span&gt;基本功能原理&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;width: 100%; height: 2px; background: rgb(255, 155, 167);&quot; class=&quot;js_darkmode__90&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;width: 7px; height: 7px; background: rgb(255, 155, 167);&quot; class=&quot;js_darkmode__91&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-darkmode-bgimage=&quot;1&quot;&gt;    &lt;span&gt;熟悉Nacos框架原理的开发者都知道，Nacos只是一个注册中心和配置中心，他通过SDK和OpenAPI暴露服务注册与服务订阅的功能。通常开发人员如果要直接使用Nacos，需要依赖他的Nacos Client，并初始化NameService。如果有几百个应用都需要使用Nacos，那么上述代码就要重复几百次。这个时候就需要有人站出来，为开发人员提效。&lt;/span&gt;&lt;/p&gt;&lt;p data-darkmode-bgimage=&quot;1&quot;&gt;&lt;span&gt;   &lt;span&gt; Spring Cloud Alibaba的上述两个子项目就应运而生。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-darkmode-bgimage=&quot;1&quot;&gt;&lt;span&gt;    本质上，spring-cloud-starter-alibaba-nacos-discovery是封装Nacos，spring-cloud-starter-dubbo定制化Dubbo。&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;h1 data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;03&lt;/h1&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;p data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;span&gt;部分功能源码分析&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;width: 100%; height: 2px; background: rgb(255, 155, 167);&quot; class=&quot;js_darkmode__92&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;width: 7px; height: 7px; background: rgb(255, 155, 167);&quot; class=&quot;js_darkmode__93&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-darkmode-bgimage=&quot;1&quot;&gt;&lt;br data-darkmode-bgimage=&quot;1&quot;/&gt;&lt;/p&gt;&lt;p data-darkmode-bgimage=&quot;1&quot;&gt;    &lt;span&gt;服务注册与服务发现话题太大，后面会针对他们做更加细化的分析。&lt;br data-darkmode-bgimage=&quot;1&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;    Spring Cloud Alibaba通过注解@EnableDiscoveryClient来启动服务注册与发现，笔者分析源码最喜欢从入口开始。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;     &lt;span&gt;@EnableDiscoveryClient是Spring Cloud框架的注解，看到这里读者就应该会有这样的印象，Spring Cloud Alibaba和Spring Cloud在这里就建立了联系。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;    具体代码如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;@Target(ElementType.TYPE)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@Retention(RetentionPolicy.RUNTIME)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@Documented&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@Inherited&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;@Import(EnableDiscoveryClientImportSelector.class)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;public @interface EnableDiscoveryClient {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;boolean autoRegister() default true;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;    通过&lt;span&gt;@Import注解，自动注入类&lt;span&gt;EnableDiscoveryClientImportSelector&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;熟悉Spring Boot框架原理的开发者都知道，&lt;span&gt;@Import是他的基础注解。在这里读者又会发现，Spring Boot和Spring Cloud Alibaba又建立了联系。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;    &lt;span&gt;类&lt;/span&gt;&lt;span&gt;EnableDiscoveryClientImportSelector具体代码如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;@Order(Ordered.LOWEST_PRECEDENCE - 100)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;public class EnableDiscoveryClientImportSelector&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;extends SpringFactoryImportSelector&amp;lt;EnableDiscoveryClient&amp;gt; {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;@Override&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;public String[] selectImports(AnnotationMetadata metadata) {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;String[] imports = super.selectImports(metadata);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;AnnotationAttributes attributes = AnnotationAttributes.fromMap(&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;metadata.getAnnotationAttributes(getAnnotationClass().getName(), true));&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;boolean autoRegister = attributes.getBoolean(&quot;autoRegister&quot;);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;if (autoRegister) {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;List&amp;lt;String&amp;gt; importsList = new ArrayList&amp;lt;&amp;gt;(Arrays.asList(imports));&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;importsList.add(&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;&quot;org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration&quot;);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;imports = importsList.toArray(new String[0]);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;else {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;Environment env = getEnvironment();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;if (ConfigurableEnvironment.class.isInstance(env)) {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;ConfigurableEnvironment configEnv = (ConfigurableEnvironment) env;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;LinkedHashMap&amp;lt;String, Object&amp;gt; map = new LinkedHashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;map.put(&quot;spring.cloud.service-registry.auto-registration.enabled&quot;, false);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;MapPropertySource propertySource = new MapPropertySource(&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;&quot;springCloudDiscoveryClient&quot;, map);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;configEnv.getPropertySources().addLast(propertySource);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;return imports;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;transform: translate(10px, -7px); width: 15px; height: 15px; background: rgb(255, 155, 167);&quot; class=&quot;js_darkmode__94&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;h1 data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;04&lt;/h1&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;p data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;span&gt;功能总结&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;width: 100%; height: 2px; background: rgb(255, 155, 167);&quot; class=&quot;js_darkmode__95&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;width: 7px; height: 7px; background: rgb(255, 155, 167);&quot; class=&quot;js_darkmode__96&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-darkmode-bgimage=&quot;1&quot;&gt;&lt;br data-darkmode-bgimage=&quot;1&quot;/&gt;&lt;/p&gt;&lt;p data-darkmode-bgimage=&quot;1&quot;&gt;    &lt;span&gt; &lt;/span&gt;&lt;span&gt;Spring Cloud Alibaba是Spring Cloud的超集，他底层依赖Spring Boot。&lt;/span&gt;&lt;/p&gt;&lt;p data-darkmode-bgimage=&quot;1&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; data-mpa-category=&quot;分隔&quot; data-mpa-template-id=&quot;8716&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; data-mpa-category=&quot;热门&quot; data-mpa-template-id=&quot;13246&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;&lt;span&gt;学习是一名IT从业者永恒的话题，2020年开始，笔者已经在着手打造自己的技术品牌。&lt;/span&gt;&lt;/p&gt;&lt;p data-mid=&quot;&quot;&gt;&lt;span&gt;目前规划中的技术品牌包括：技术专栏、出版社合作的技术类书籍、知识星球、开源贡献以及行业内技术、架构、管理以及业务领域的深度交流。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DrzVcxmbZ8xBdNFPzk0qlLaaXvia0FdcjAWdOY4nKGAwF8paP7r8FhkS4iaKtuYTV0UNX0g6t7MnNcPtItmweWLA/640&quot; data-ratio=&quot;1.1724137931034482&quot; data-w=&quot;58&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vLe8G817RcXMWaoPdnoCGs8pVFnRibNjG34eibnFlrEkcJdweSQgeyy3PqV4FoZEvA1zjicPrib0RLp2zQXu7n0yKw/640&quot; data-ratio=&quot;0.39285714285714285&quot; data-w=&quot;112&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-darkmode-bgimage=&quot;1&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; data-mpa-category=&quot;分隔&quot; data-mpa-template-id=&quot;13102&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/ILzAibw61MLZtYTViagK77wNkSic47ypLSP7Ym8RSLfZDoSTzgSepkLmMlnyO6ibkD3oAm1Thxlt2A5YrTy55TLWbg/640&quot; data-ratio=&quot;0.058823529411764705&quot; data-w=&quot;&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section class=&quot;js_darkmode__97&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: inline-block; width: 95%; vertical-align: top; background-color: rgb(254, 255, 255); border-width: 0px; border-radius: 5px; border-style: solid; border-color: rgb(69, 140, 130); box-shadow: rgb(153, 166, 171) 0px 0px 3px; padding: 10px; max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-style=&quot;height: 31px; display: inline-block; vertical-align: top; border-right: 0.4em solid rgb(147, 54, 29); border-bottom: 0.4em solid rgb(147, 54, 29); overflow-wrap: break-word; box-sizing: border-box; max-width: 5% !important; border-top: 0.4em solid transparent !important; border-left: 0.4em solid transparent !important;&quot; class=&quot;js_darkmode__98&quot;&gt;&lt;br/&gt; &lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;游侠精选&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-style=&quot;height: 31px; display: inline-block; vertical-align: top; border-bottom: 0.4em solid rgb(147, 54, 29); border-left: 0.4em solid rgb(147, 54, 29); overflow-wrap: break-word; box-sizing: border-box; max-width: 5% !important; border-right: 0.4em solid transparent !important; border-top: 0.4em solid transparent !important;&quot; class=&quot;js_darkmode__99&quot;&gt;&lt;br/&gt; &lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;br/&gt; &lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section class=&quot;js_darkmode__100&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: table-cell; vertical-align: middle; width: 18%; border-width: 1px; border-radius: 0px; border-style: none; border-color: rgb(62, 62, 62); padding: 0px 3px 0px 0px; max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section class=&quot;js_darkmode__101&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: inline-block; border-radius: 5px; padding: 0px 0.75em; border-width: 1px; border-style: solid; border-color: rgb(225, 116, 159); background-color: rgb(255, 255, 255); color: rgb(225, 116, 159); line-height: 1.4; font-size: 9px; max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;p&gt;围观&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;js_darkmode__102&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: table-cell; vertical-align: middle; width: 67.86%; border-style: none; border-width: 1px; border-radius: 0px; border-color: rgb(62, 62, 62); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.9444444&quot; data-w=&quot;18&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/b96CibCt70iabfcCSjSAsSfWy1vTRkQAibAtnFuKtn0ib1EbdjE9bLchd6WJxicxRzmEBjZ5sQpDFYWHQUfWkIQtN7Q/640&quot;/&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1NzY1ODAyNQ==&amp;amp;mid=2247484024&amp;amp;idx=1&amp;amp;sn=2cb9bfe5657e0940d3dc95fb844c91d6&amp;amp;chksm=fc3338becb44b1a8a19c3e4e61d84dff933e427bb246af5166435aef81cba0596d324d073ce2&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;分布式链路追踪：Skywalking 的链路模型设计&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;js_darkmode__103&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: table-cell; vertical-align: middle; width: 14.14%; border-width: 1px; border-radius: 0px; border-style: none; border-color: rgb(62, 62, 62); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section class=&quot;js_darkmode__104&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: table-cell; vertical-align: middle; width: 18%; border-width: 1px; border-radius: 0px; border-style: none; border-color: rgb(62, 62, 62); padding: 0px 3px 0px 0px; max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section class=&quot;js_darkmode__105&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: inline-block; border-radius: 5px; padding: 0px 0.75em; border-width: 1px; border-style: solid; border-color: rgb(225, 116, 159); background-color: rgb(255, 255, 255); color: rgb(225, 116, 159); line-height: 1.4; font-size: 9px; max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;p&gt;热文&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;js_darkmode__106&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: table-cell; vertical-align: middle; width: 67.86%; border-style: none; border-width: 1px; border-radius: 0px; border-color: rgb(62, 62, 62); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section class=&quot;js_darkmode__107&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;text-align: left; font-size: 12px; color: rgb(62, 62, 62); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1NzY1ODAyNQ==&amp;amp;mid=2247484029&amp;amp;idx=1&amp;amp;sn=569732e6c5254fe6183c02ad9685a16f&amp;amp;chksm=fc3338bbcb44b1ad050102526997141d939af70f8b76905b2180db375fef275668aceace50e0&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;SkyWalking 分布式链路追踪：最新 Kafka 通信模型设计&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;js_darkmode__108&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: table-cell; vertical-align: middle; width: 14.14%; border-width: 1px; border-radius: 0px; border-style: none; border-color: rgb(62, 62, 62); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section class=&quot;js_darkmode__109&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: table-cell; vertical-align: middle; width: 18%; border-width: 1px; border-radius: 0px; border-style: none; border-color: rgb(62, 62, 62); padding: 0px 3px 0px 0px; max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section class=&quot;js_darkmode__110&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: inline-block; border-radius: 5px; padding: 0px 0.75em; border-width: 1px; border-style: solid; border-color: rgb(225, 116, 159); background-color: rgb(255, 255, 255); color: rgb(225, 116, 159); line-height: 1.4; font-size: 9px; max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;p&gt;热文&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;js_darkmode__111&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: table-cell; vertical-align: middle; width: 67.86%; border-style: none; border-width: 1px; border-radius: 0px; border-color: rgb(62, 62, 62); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section class=&quot;js_darkmode__112&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;text-align: left; font-size: 12px; color: rgb(62, 62, 62); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1NzY1ODAyNQ==&amp;amp;mid=2247484006&amp;amp;idx=1&amp;amp;sn=0fa4d82b37a5328c1b5766ed9b154801&amp;amp;chksm=fc3338a0cb44b1b68841069bd66761c29ffe819e7a0a9cce1a709f822372d97facd2fcea3a39&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;分布式链路追踪 Skywalking：插件化和模块化架构设计&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;js_darkmode__113&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: table-cell; vertical-align: middle; width: 14.14%; border-width: 1px; border-radius: 0px; border-style: none; border-color: rgb(62, 62, 62); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section class=&quot;js_darkmode__114&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: table-cell; vertical-align: middle; width: 18%; border-width: 1px; border-radius: 0px; border-style: none; border-color: rgb(62, 62, 62); padding: 0px 3px 0px 0px; max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section class=&quot;js_darkmode__115&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: inline-block; border-radius: 5px; padding: 0px 0.75em; border-width: 1px; border-style: solid; border-color: rgb(225, 116, 159); background-color: rgb(255, 255, 255); color: rgb(225, 116, 159); line-height: 1.4; font-size: 9px; max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;p&gt;热文&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;js_darkmode__116&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: table-cell; vertical-align: middle; width: 67.86%; border-style: none; border-width: 1px; border-radius: 0px; border-color: rgb(62, 62, 62); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section class=&quot;js_darkmode__117&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;text-align: left; font-size: 12px; color: rgb(62, 62, 62); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1NzY1ODAyNQ==&amp;amp;mid=2247483735&amp;amp;idx=1&amp;amp;sn=a68724d3c6feab9b8e61ccd1f579c4ba&amp;amp;chksm=fc333b91cb44b2873028e442a3ab1408b9c2d015f511d5f8f132d524fb8b5544456b09508993&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;架构师如何技术选型-全链路监控&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;js_darkmode__118&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: table-cell; vertical-align: middle; width: 14.14%; border-width: 1px; border-radius: 0px; border-style: none; border-color: rgb(62, 62, 62); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section class=&quot;js_darkmode__119&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: table-cell; vertical-align: middle; width: 18%; border-width: 1px; border-radius: 0px; border-style: none; border-color: rgb(62, 62, 62); padding: 0px 3px 0px 0px; max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section class=&quot;js_darkmode__120&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: inline-block; border-radius: 5px; padding: 0px 0.75em; border-width: 1px; border-style: solid; border-color: rgb(225, 116, 159); background-color: rgb(255, 255, 255); color: rgb(225, 116, 159); line-height: 1.4; font-size: 9px; max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;p&gt;热文&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;js_darkmode__121&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: table-cell; vertical-align: middle; width: 67.86%; border-style: none; border-width: 1px; border-radius: 0px; border-color: rgb(62, 62, 62); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section class=&quot;js_darkmode__122&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;text-align: left; font-size: 12px; color: rgb(62, 62, 62); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1NzY1ODAyNQ==&amp;amp;mid=2247484012&amp;amp;idx=1&amp;amp;sn=e52e8b913b536ed57968875bf1c24c3f&amp;amp;chksm=fc3338aacb44b1bcf529dbd81b7903d68c97134038fe3e2106ed6cfc704a487a4704ec0c09c1&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;分布式链路追踪 Skywalking：告警和度量架构设计&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;js_darkmode__123&quot; mpa-from-tpl=&quot;t&quot; data-style=&quot;display: table-cell; vertical-align: middle; width: 14.14%; border-width: 1px; border-radius: 0px; border-style: none; border-color: rgb(62, 62, 62); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-mpa-category=&quot;分隔&quot; data-mpa-template-id=&quot;13101&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;br data-darkmode-bgimage=&quot;1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-mpa-category=&quot;分隔&quot; data-mpa-template-id=&quot;13102&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/ILzAibw61MLZtYTViagK77wNkSic47ypLSP7Ym8RSLfZDoSTzgSepkLmMlnyO6ibkD3oAm1Thxlt2A5YrTy55TLWbg/640&quot; data-ratio=&quot;0.058823529411764705&quot; data-w=&quot;&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-darkmode-bgimage=&quot;1&quot;&gt;&lt;br data-darkmode-bgimage=&quot;1&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; data-mpa-category=&quot;引导&quot; data-mpa-template-id=&quot;13278&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;width: 17px; height: 3px; display: flex; justify-content: center; align-items: center; padding: 0px 3px; background: rgb(255, 255, 255); z-index: 1; align-self: flex-start; max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot; class=&quot;js_darkmode__124&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/znIKPufqnmwKIYVXVvib7hDtYBWNcPDRzJ35MvtsJplvbyUpp76QibxTLfGwbXtTna4ewRUejeho8ZmoQt5d03UA/640&quot; data-ratio=&quot;0.23076923076923078&quot; data-w=&quot;26&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;width: 100%; align-self: center; background: rgb(0, 0, 0); border: 1px solid rgb(5, 5, 5); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot; class=&quot;js_darkmode__125&quot;&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;width: 100%; background: rgb(255, 255, 255); border: 1px solid rgb(22, 22, 22); transform: translate(-3.1px, -3.1px); display: grid; grid-template-columns: 47% 50%; column-gap: 3%; padding: 16px 0px; max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot; class=&quot;js_darkmode__126&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hmERs4iamxTEqh5vBYBZ00tBmRbkiaibD60Tkrqj1AH6goNbxS6n3Rfs7hBqkNqH2wibuAb7dg55ZanU20GqDj8IUA/640&quot; data-ratio=&quot;1&quot; data-w=&quot;44&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;width: 97px; height: 97px; display: flex; justify-content: center; align-items: center; border: 2px solid rgb(0, 0, 0); z-index: 1; margin-left: 15px; max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot; class=&quot;js_darkmode__127&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/nuXs4mvp08DfiaenicibfcnbHqUblNIqG9HppsK91nnFiazvkPicOLDywBuAlmhQIzSuwGb3TicF6ajWjbMnGa4FWPkg/640&quot; data-ratio=&quot;1&quot; data-w=&quot;258&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;text-align: left; align-self: flex-start; background: rgb(207, 255, 171); margin-top: 3px; padding: 1px 3px 0px 2px; border: 1px solid rgb(0, 0, 0); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot; class=&quot;js_darkmode__128&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;扫描二维码获取&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;text-align: left; align-self: flex-start; background: rgb(207, 255, 171); margin-top: 3px; padding: 1px 3px 0px 2px; border: 1px solid rgb(0, 0, 0); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot; class=&quot;js_darkmode__129&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;更多精彩&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ejhnkILYypBOzFnb5SlfCHVZwiaaicyN0PCMPMMaBV8ewNZI6UriblDacicofxBhfec0iaRXxm23IOeEdW4Qw3ib92GQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;26&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QLoqHfibB1DictzF37IFxiaFFf8kUxPJr46N90cc3RchPQic586C9iblYVjhvulma7WNbcFGHmUeibUep4icqRl0cD4pg/640&quot; data-ratio=&quot;1&quot; data-w=&quot;26&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;text-align: left; padding: 5px 13px 4px; border: 1px solid rgb(51, 51, 51); border-radius: 8px; max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot; class=&quot;js_darkmode__130&quot;&gt;&lt;p data-mid=&quot;&quot; data-style=&quot;font-size: 14px; font-family: PingFangSC-Medium, &amp;quot;PingFang SC&amp;quot;; font-weight: bold; color: rgb(1, 1, 1); line-height: 20px; letter-spacing: 1px; max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot; class=&quot;js_darkmode__131&quot;&gt;架构治理之道&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/cdDMjS9L7GN6JFlgCUmZBBszr8V3NmCEFEqCC59Hl9MSs9GiaI24dtJMZQwhq73icHCJAGZAeC7xRCm2GXQNVRiaA/640&quot; data-ratio=&quot;1&quot; data-w=&quot;26&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QhMyRUyDHibXaxiaf5iaHYnFYDLQTVuFxibZjcnZhiaVG9KuXn5jbxeP1edKcLS73gK0KPxUvn7VhAXDgQDtEHjSoZg/640&quot; data-ratio=&quot;1&quot; data-w=&quot;26&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-mpa-category=&quot;分隔&quot; data-mpa-template-id=&quot;5181&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mpa-category=&quot;分割&quot; data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section class=&quot;js_darkmode__bg__5 js_darkmode__132&quot; data-darkmode-bgimage=&quot;1&quot; data-mid=&quot;&quot; data-style=&quot;background-image: url(&amp;quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaaJcib7FH02wTKvoHALAMw4fz1xQiadzfseF0IbPMa2m6ZzKbkEnkibqvY4n1tXiciblUYbKBSG5BeJgSQ/0&amp;quot;); background-position: center center; background-repeat: no-repeat; background-size: 18px; margin: 0px 0px -12px; max-width: 100%; overflow-wrap: break-word; box-sizing: border-box; min-width: 18px !important; height: 36px !important;&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;width: 100%; height: 1px; background: rgb(224, 32, 32); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot; class=&quot;js_darkmode__133&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;width: 100%; height: 1px; background: rgb(224, 32, 32); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot; class=&quot;js_darkmode__134&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-style=&quot;background: rgb(224, 32, 32); max-width: 100%; overflow-wrap: break-word; box-sizing: border-box; min-width: 6px !important; height: 6px !important;&quot; class=&quot;js_darkmode__135&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-darkmode-bgimage=&quot;1&quot;&gt;&lt;img data-ratio=&quot;0.0828125&quot; data-type=&quot;png&quot; data-w=&quot;640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaaYLV0bgNpicicsbF4YkGTMjqRfpJoZR4HKw9tjswyv8tTyvpReapxb7Qich64q3qE3hbZGVibGx18whg/640&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; data-mpa-category=&quot;正文&quot; data-mpa-template-id=&quot;2199&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt; 今日互动话题 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;你了解Spring Cloud Alibaba吗&lt;/span&gt;&lt;span&gt;？&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1.0487805&quot; data-type=&quot;gif&quot; data-w=&quot;328&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/NaKTKyyhWkMrhYr5DElE00HtbGL7c3exKF6VfQAKkcYYOvbzZMKSfSpZibXyG4q4QlWvAvQDNbRdNaJNGjdfGaA/640?wx_fmt=gif&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.0828125&quot; data-type=&quot;png&quot; data-w=&quot;640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaaYLV0bgNpicicsbF4YkGTMjqgmlicibzAUp01N1z0Q0cRLSOwwuICChFPNakXsfPBEO3IgH7OFKrwF1A/640&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; data-mpa-category=&quot;正文&quot; data-mpa-template-id=&quot;11953&quot;&gt;&lt;section data-mpa-category=&quot;模板&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;sectoin data-mid=&quot;&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/osiarcboV3ibCM5dvWb7c7Gxw6f8Z9LnickZ2aq5eia4YWStHMrmjA1fpDwpr3mmGuOaRyhTsH20ILhXIevNibakzpQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;134&quot;/&gt;&lt;/sectoin&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;今晚你留下来加个班&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/H2xHYH8lrvJwhwunG09VVRFFqZ0iclWzRzoSTCibURyicNibtmfP7WdmXZmXNOox0rc5IzPpZ6j11FuKLkvnccwBWQ/640&quot; data-ratio=&quot;0.319672131147541&quot; data-w=&quot;244&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;你做梦&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/3d46vkbLAbwPhHTcA26XbzibTD4W5hibEWAIwnAsZWp2cOL4bXv91wa4IUrVian5icm8dS9xv8diaj9nic08DrFc1JbQ/640&quot; data-ratio=&quot;0.319672131147541&quot; data-w=&quot;244&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;sectoin data-mid=&quot;&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/o3SHUaAXlDJic7ibLQ4gVibBtTmj41aIKkPiajMtwykfZzRfIxveMls7vJibMM2BahEymdS74s5LFKUiaTIMpUuFtDGw/640&quot; data-ratio=&quot;1&quot; data-w=&quot;134&quot;/&gt;&lt;/sectoin&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;sectoin data-mid=&quot;&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4F8BD2wvpNuJw4LqGayiaG2DqZwoac4jdialDiaJc88fIYNShicbvtwDouGcakibJiavVgrCcEso26SWoJOblp4mK33g/640&quot; data-ratio=&quot;1&quot; data-w=&quot;134&quot;/&gt;&lt;/sectoin&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;明天去财务结一下工资&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/r7j7UL3yRJ9YmosNsMnmZ6TQiar2b1ib4vp5SdTicAXVDxn34zgiajSiacRlCNtIvl3YKmJDpZOtibiclw5oSwuhMQYgQ/640&quot; data-ratio=&quot;0.319672131147541&quot; data-w=&quot;244&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;拜拜了您嘞&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ImTh5vClXbGgicH8mDRrLkUOQ9bB6JvH7BHqOMzC1PrEicxqRiaIypvxvkg9C38ZS2icJaLQiaQzo7VQJAAGWeVOXUw/640&quot; data-ratio=&quot;0.319672131147541&quot; data-w=&quot;244&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;sectoin data-mid=&quot;&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EOWNHyVXF1V3SsM7VJ1qcX23DBwNtajHFibGTFqwxB5Uic0icYwJmPaZGtkiaFXP4VrKia781WTcKuKrzUJdbAC0RDg/640&quot; data-ratio=&quot;1&quot; data-w=&quot;134&quot;/&gt;&lt;/sectoin&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; data-mpa-category=&quot;分隔&quot; data-mpa-template-id=&quot;9675&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-role=&quot;outer&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-tools-id=&quot;53349&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-darkmode-bgimage=&quot;1&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uLgbDOczlib06nm8CRrsSwiagjwPj1N9mKheibofZ3lPy3zHnyHMPZRHncytxDZZIicicjtYowjMic5rUsCMpzq7zwQ/640&quot; data-ratio=&quot;0.1641337386018237&quot; data-w=&quot;329&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-mpa-category=&quot;引导&quot; data-mpa-template-id=&quot;13285&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-mid=&quot;&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_svg/VLjDyM7pibyLqG5kt7XkD0t1f4HbX6icWAT6cZD7hXtCbM1DrfR5zU3zr5rDLDVs6GNchZeFLXxfazXyc8LZgQNkvNHwqGsGAV/640&quot; data-ratio=&quot;0.9230769230769231&quot; data-w=&quot;13&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-mpa-category=&quot;引导&quot; data-mpa-template-id=&quot;4515&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-id=&quot;92358&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-role=&quot;paragraph&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-width=&quot;100%&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section class=&quot;js_darkmode__bg__6 js_darkmode__136&quot; data-darkmode-bgimage=&quot;1&quot; data-style=&quot;width: 300px; height: 120px; margin: 0px auto; background-image: url(&amp;quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaaBAicDNCSs6H0O0SBGSALfnBZ89bNXiaxB0126X5as7lQUutjiatKIibGZWual0aWB8TRFXP7kT8fDEQ/0&amp;quot;); background-size: 100%; background-repeat: no-repeat; background-position: center center; overflow: hidden; display: -webkit-flex; justify-content: center; align-items: center; max-width: 100%; overflow-wrap: break-word; box-sizing: border-box;&quot;&gt;&lt;section data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-darkmode-bgimage=&quot;1&quot;&gt;&lt;section data-darkmode-bgimage=&quot;1&quot;&gt;&lt;p data-brushtype=&quot;text&quot; data-darkmode-bgimage=&quot;1&quot;&gt;&lt;strong data-darkmode-bgimage=&quot;1&quot;&gt;温馨提示&lt;/strong&gt; &lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-darkmode-bgimage=&quot;1&quot;&gt;&lt;p data-darkmode-bgimage=&quot;1&quot;&gt;&lt;strong data-darkmode-bgimage=&quot;1&quot;&gt;如果你喜欢本文，请分享到朋友圈，并关注架架构治理之道。&lt;/strong&gt; &lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7394d3ab98df7c4dc2be9ef3b7f76c06</guid>
<title>HTTP状态码1XX深入理解</title>
<link>https://toutiao.io/k/lnqe30k</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p id=&quot;js_tags&quot; class=&quot;article-tag__list single-tag__wrp js_single js_wx_tap_highlight wx_tap_card&quot; data-len=&quot;1&quot; role=&quot;link&quot; aria-labelledby=&quot;js_article-tag-card__left js_a11y_comma js_article-tag-card__right&quot;&gt;
                                            
                                                                                    &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__left&quot; class=&quot;article-tag-card__left&quot;&gt;
                                    &lt;span class=&quot;article-tag-card__title&quot;&gt;收录于话题&lt;/span&gt;
                                    &lt;span class=&quot;article-tag__item-wrp no-active js_tag&quot; data-url=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzUzNjAxODg4MQ==&amp;amp;action=getalbum&amp;amp;album_id=2155317684974993409#wechat_redirect&quot; data-tag_id=&quot;&quot; data-album_id=&quot;2155317684974993409&quot; data-tag_source=&quot;4&quot;&gt;
                                        &lt;span class=&quot;article-tag__item&quot;&gt;#网络通信&lt;/span&gt;
                                    &lt;/span&gt;
                                &lt;/span&gt;
                                &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__right&quot; class=&quot;article-tag-card__right&quot;&gt;10个&lt;/span&gt;
                                                                                        &lt;/p&gt;

                
                                
                
                

                
                                                                

                
                                


                
                
                
                
                                                
                                                                
                                
                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;前段时间看了《御赐小仵作》，里面有很多细节很有心。看了一些评论都是：终于在剧里能够看到真正在搞事业、发了工资第一时间还钱的正常人了。我印象比较深的是王府才能吃上的葡萄。觉得非常合理。剧里说的明明白白，是唐朝中晚期唐宣宗的时候，那时候丝绸之路刚刚开通，西域（现在的新疆以及更西的地方）的葡萄终于能吃上了，这就和那一整段历史给对应上了。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;谈到对应的问题，咱们回到正题，http状态码1XX。对于http状态200、404、500，大家可能熟悉一些。1XX可能实际中从来没有见过，今天咱们用剥洋葱的叙述方式，拨开1XX状态码的层层面纱。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;定义&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;HTTP状态码（英语：HTTP Status Code）是用以表示网页服务器超文本传输协议响应状态的3位数字代码。这句话要注意解读了。我先来考考大家读懂了没。请回答：&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;vote_area&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;这里我先不回答，无法决定的朋友再多读几遍定义。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;状态码1XX表示服务端已经收到了请求，但是还需要进一步处理。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;白居易有一首《问刘十九》：&lt;/p&gt;&lt;p&gt;绿蚁新醅酒，红泥小火炉。&lt;br/&gt;晚来天欲雪，能饮一杯无？&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这就和服务端可能会返回1XX的场景很像。客户端发起一个请求：我这里有美酒和暖炉，天要下雪了，来喝一杯？服务端收到之后返回1XX。代表接受邀请。这时候客户端就可以真正摆上一桌酒菜迎接客人了。如果服务端返回4XX，客户端也不用消耗资源杀鸡做菜了。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;1xx状态码是 HTTP/1.1 版本新定义的，用来表示请求被正常接收，会进行进一步处理。这些状态码相对较新，并且 HTTP/1.0 版本无法识别，所以原则上不应该向HTTP/1.0版本的客户端发送任何1xx状态码。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;100 Continue&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5626666666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2tk5ianItRl93yuXjceYv1zvGVzw83m6EEPp6opicpIUc0mHY8HeDx7WLuGeeOawAicnvrPOibkxDK7NLrLNfiaT3uw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;p&gt;该状态码说明服务器收到了请求的初始部分，并请客户端继续发送。在服务器发送了 100 Continue 状态码之后，如果收到客户端的请求，则必须进行响应。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这个状态码实际上是对如下场景的一种优化：客户端有一个较大的文件需要上传并保存，但是客户端不知道服务器是否愿意接受这个文件，所以希望在消耗网络资源进行传输之前，先询问一下服务器的意愿。实际操作为客户端发送一条特殊的请求报文，报文的头部应包含&lt;/p&gt;&lt;pre&gt;Expect: 100-continue&lt;/pre&gt;&lt;p&gt;此时，如果服务器愿意接受，就会返回 100 Continue 状态码，反之则返回 417 Expectation Failed 状态码。对于客户端而言，如果客户端没有发送实际请求的打算，则不应该发送包含 100 Continue Expect 的报文，因为这样会让服务器误以为客户端将要发送一个请求。大家可以基于对100的理解再回想一下《问刘十九》。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;之前提到过，并不是所有的HTTP应用都支持 100 Continue 这个状态码（例如HTTP/1.0及之前的版本的代理或服务器）所以客户端不应该在发送 100 Continue Expect 后一直等待服务器的响应，在一定时间后，客户端应当直接发送计划发送的内容。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;而对于服务器而言，也不应当把 100 Continue 当作一个严格的判断方法。服务器有可能在发送回应之前就收到了客户端发来的主体报文。此时服务器就不需要再发送 100 Continue 作为回应了。但仍然需要在接受完成后返回适当的状态码。理论上，当服务器收到一个 100 Continue Expect 请求时，应当进行响应。但服务器永远也不应向没有发送 100 Continue Expect 请求的客户端发送100 Continue 状态码作为回应。这里提到的应当进行响应是指：假设服务器不打算接收客户端将要发送的主体报文，也应当做适当的响应（例如发送 417 Expectation Failed）而不是单纯的关闭连接，这样会对客户端在网络层面上产生影响。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;作为代理的HTTP应用在收到带有 100 Continue Expect 的请求时，需要进行额外的判断。假设代理服务器明确知道报文下游的HTTP版本是兼容 HTTP/1.1 的，或者代理服务器不知道报文下游的版本，它都应当转发这条 100 Continue Expect 请求。但是如果代理服务器明确知道报文下游的应用无法处理 100 Continue Expect 的话，则应当直接向客户端返回 417 Expectation Failed 作为响应。而这也并非唯一的解决办法，另一种可行的办法是直接向客户端返回 100 Continue ，然后向下游传递删除了 100 Continue Expect 的报文。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;另外，如果代理服务器决定为 HTTP/1.0 及之前的版本服务的话，那么当它收到来自服务器的 100 Continue 响应报文时，则不应当向客户端转发这条响应，因为客户端很可能不知道如何处理该报文。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;101 Switching Protocols&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;HTTP 101 Switching Protocol（协议切换）状态码表示服务器应客户端升级协议的请求对协议进行切换。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;此机制始终由客户端发起，并且服务器可能接受或拒绝切换到新协议。客户端可使用常用的协议（如HTTP / 1.1）发起请求，请求说明需要切换到HTTP / 2或甚至到WebSocket。&lt;/p&gt;&lt;p&gt;我们来看一个实际的例子:&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7056145675265554&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRl93yuXjceYv1zvGVzw83m6E8LoVYDZTJ6mEfbZ2rYvt2FHLCjSR6akW5icYmGDz9rmb0ehSX64t8VQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1318&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;为了实现WebSocket通信，首先需要客户端发起一次普通HTTP请求。也就是说，WebSocket的建立是依赖HTTP的。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4608433734939759&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRl93yuXjceYv1zvGVzw83m6EN9ejib0vFdA18SXJv4IKdt84vw2oabYyQ0RgdiauICNibLoxibj2zLmEiaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;996&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;其中HTTP头部字段Upgrade: websocket和Connection: Upgrade非常重要，告诉服务器通信协议将发生改变，转为WebSocket协议。支持WebSocket的服务器端在确认以上请求后，应返回状态码为101 Switching Protocols的响应:&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.28063241106719367&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRl93yuXjceYv1zvGVzw83m6E5eCVicbn0CAsvWW80m37icQSF0OuK6y84hibiaMGBpLC8icHasTC3q7vw7g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;759&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;其中字段Sec-WebSocket-Accept是由服务器对前面客户端发送的Sec-WebSocket-Key进行确认和加密后的结果，相当于一次验证，以帮助客户端确信对方是真实可用的WebSocket服务器。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;验证通过后，这个握手响应就确立了WebSocket连接，此后，服务器端就可以主动发信息给客户端了。此时的状态比较像服务器端和客户端接通了电话，无论是谁有什么信息想告诉对方，开口就好了。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;一旦建立了WebSocket连接，此后的通信就不再使用HTTP了，改为使用WebSocket独立的数据帧。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRl93yuXjceYv1zvGVzw83m6Ek02RqejiaRTqnZMlzRPTLLgWQia3eepJK47zJaz6ZHIVJia4Azn6cXdeg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;500&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;102 Processing&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;h3&gt;102 Processing是由WebDAV（RFC 2518）扩展的状态码，代表处理将被继续执行。&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Web服务器可能需要相当长的时间来处理复杂的请求。当客户端的浏览器发送包含多个涉及复杂需求的子请求的WebDAV请求时，服务器需要一些时间来处理并发送此代码“102–Processing”。此代码旨在通过通知客户端服务器收到请求并对其进行处理来避免客户端出现超时错误。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;HTTP状态码的设计规则是：前面一位是分类。2XX表示服务端已经收到了请求，并且已经分析处理完；3XX表示服务端已经收到了请求，但是还需要其他资源或者服务处理；4XX表示服务端已经收到了请求，但是无法理解，说明客户端请求姿势不正确；5XX表示服务端已经收到了请求，但是由于服务端自身问题无法正确响应。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这种编码方法在很多地方都在用。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;比如身份证号规则&lt;/p&gt;&lt;p&gt;&lt;span&gt;前1、2位数字表示：所在省（直辖市、自治区）的代码；&lt;span&gt;第3、4位数字表示：所在地级市（自治州）的代码；&lt;/span&gt;&lt;span&gt;第5、6位数字表示：所在区（县、自治县、县级市）的代码；&lt;/span&gt;&lt;span&gt;第7—14位数字表示：出生年、月、日；&lt;/span&gt;&lt;span&gt;第15、16位数字表示：所在地的派出所的代码；&lt;/span&gt;&lt;/span&gt;第17位数字表示性别：奇数表示男性，偶数表示女性；&lt;span&gt;第18位数字是校检码。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;比如行别代码&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;支付系统为每类参与者分配一个标识号，&lt;/span&gt;&lt;span&gt;由&lt;span&gt;三位数字组成，第一位是银行类型，剩下两位是标识号。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;支付系统的参与者行号规则和身份证规则很像，除了每几位都有特殊含义，结尾一位也是验证码。反正参与者行号规则我是记下来了。默念了8遍记下来的，真不容易。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;往期相关阅读&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对了，最后给大家一个小福利。有的朋友知道我兴趣非常广泛，研究心理学、文学…… 其实我还喜欢研究《周易》。自己做了个姓名缘分测试小游戏。在【编程一生】公众号输入下面格式的字就可以获取缘分测试结果。注意不是所有的都能测试出来结果哦，库在不断更新。今天测试不出来，明天可能就行了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;格式为&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;男：XX 女：XX&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.7786666666666666&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2tk5ianItRl93yuXjceYv1zvGVzw83m6EF6uSpt1xDFU48LcjQqnX9rL5jUWLcDtfjNYIQuoRRBERDG9Ehg5Flw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>4f6c5e29e2c5cf30e2a60f77f5a067ee</guid>
<title>如何一步步提升Go内存缓存性能</title>
<link>https://toutiao.io/k/03tswms</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;span&gt;本文记录了&lt;/span&gt;&lt;code&gt;ecache&lt;/code&gt;&lt;span&gt; v1.0.5到v1.1.0的性能优化过程&lt;/span&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;背景介绍&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;ecache&lt;/code&gt;是一款极简设计、高性能、并发安全、支持分布式一致性的轻量级内存缓存，支持LRU和LRU-2两种模式&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;项目地址：https://github.com/orca-zhang/ecache&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;准备工作&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;原则&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;基于真实的度量。——《重构——改善现有代码的设计》P69&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;哪怕你完全了解系统，也请实际度量它的性能，不要臆测。臆测会让你学到一些东西，但十有八九你是错的。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;思路&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;我期望能够有一个仓库，每次优化以后，都能横向比较同类库之间的性能，并且通过直观的柱状图之类的图表展示出来，于是有了benchplus/gocache项目，它是一个持续基准测试的项目。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;第一版我设计了写入和读取整型、写入1K/1M数据、写入小对象（&lt;code&gt;bigcache&lt;/code&gt;和&lt;code&gt;freecache&lt;/code&gt;需要序列化）、写满以后继续写入整型等用例。第二版又增加了并发读写、GC耗时、命中率、内存占用等用例。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;工具&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;golang pprof&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;graphivs（用来生成剖析结果图片）&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;mac下安装命令：&lt;code&gt;brew install graphviz&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;步骤&lt;span/&gt;&lt;/h3&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;运行一次ecache的测试用例&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;sh&amp;gt; &lt;code&gt;GO111MOUDLE=off go test -bench=BenchmarkGetInt_ecache ecache_test.go -cpuprofile=cpu.prof&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;剖析结果文件&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;sh&amp;gt; &lt;code&gt;go tool pprof benchplus.test cpu.prof&lt;/code&gt;&lt;br/&gt;交互模式下：&lt;code&gt;(pprof) svg&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;分析生成的svg图&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;优化一：读取性能（从100ns/op到40ns/op）&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;总体还是比较符合预期的，毕竟在性能方面已经有所考量和侧重，但是在最初的测试中，优势依然不是特别明显，比如读取性能，最快的&lt;code&gt;bigcache&lt;/code&gt;读取整型值的性能在 80ns/op 左右，但是&lt;code&gt;ecache&lt;/code&gt;在第一版只能跑出 100ns/op 左右的性能。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;hashCode&lt;/code&gt;占了总耗时的50%&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8380281690140845&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vbERicIdYZbDWN0icNKyb0w73R0z1FBrIa0fmJ4UV8KH7T6XWMwvqwoOISPm2mfces2o32aJtLxHtXD23IJYf30A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1420&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;分析剖析结果，发现大部分时间花在了&lt;code&gt;string&lt;/code&gt;转&lt;code&gt;[]byte&lt;/code&gt;产生临时对象的产生和销毁上&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;优化思路：换一种hash方法，按照以前的经验，BKRD和AP的分布性比较好，BKRD实现更简单，性能也不错，所以选择BKRD替代CRC32【commit-0e7aaaae】&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;hashBKRD&lt;/span&gt;&lt;span&gt;(s &lt;span&gt;string&lt;/span&gt;)&lt;/span&gt; &lt;span&gt;(hash &lt;span&gt;int32&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; i := &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;len&lt;/span&gt;(s); i++ {&lt;br/&gt;        hash = hash*&lt;span&gt;131&lt;/span&gt; + &lt;span&gt;int32&lt;/span&gt;(s[i])&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; hash&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;继续剖析——&lt;code&gt;time.Now()&lt;/code&gt;占了总耗时的33%&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9788961038961039&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vbERicIdYZbDWN0icNKyb0w73R0z1FBrIaicBzhRyFfZc4icibrdY9EwG3uKmvcoJddSTlXu6hU0dxmYkVeHMJ8zsIA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1232&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;优化思路：由于内部只需要时间戳，并且缓存系统要求的时间戳并不一定那么精准，所以考虑用维护一个全局时间戳的方式来优化————短期自增（每100ms）、定期校准（约1s）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;code&gt;time.Now()&lt;/code&gt;【代码版本快照】改为内部计时器【commit-8dc1fa7d】，获取当前时间使用内部的&lt;code&gt;now()&lt;/code&gt;方法可直接获得时间戳，而不再需要使用会产生临时对象的&lt;code&gt;time.Now().UnixNano()&lt;/code&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;内部计时器最初采用&lt;code&gt;time.Timer&lt;/code&gt;实现，实际测试发现定时器会受系统压力影响，精度无法保证，后改为&lt;code&gt;time.Sleep&lt;/code&gt;【commit-92245e4b】&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;var&lt;/span&gt; clock = time.Now().UnixNano()&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;now&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;int64&lt;/span&gt;&lt;/span&gt; { &lt;span&gt;return&lt;/span&gt; atomic.LoadInt64(&amp;amp;clock) }&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;init&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;go&lt;/span&gt; &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; {&lt;br/&gt;            atomic.StoreInt64(&amp;amp;clock, time.Now().UnixNano()) &lt;span&gt;// 每秒校准&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;for&lt;/span&gt; i := &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;9&lt;/span&gt;; i++ {&lt;br/&gt;                time.Sleep(&lt;span&gt;100&lt;/span&gt; * time.Millisecond)&lt;br/&gt;                atomic.AddInt64(&amp;amp;clock, &lt;span&gt;int64&lt;/span&gt;(&lt;span&gt;100&lt;/span&gt;*time.Millisecond))&lt;br/&gt;            }&lt;br/&gt;            time.Sleep(&lt;span&gt;100&lt;/span&gt; * time.Millisecond)&lt;br/&gt;        }&lt;br/&gt;    }()&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;本次优化完成以后，读取整型性能提升至40ns/op，从设计的指标来看，&lt;code&gt;ecache&lt;/code&gt;的数据都已名列前茅&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.35470383275261325&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vbERicIdYZbDWN0icNKyb0w73R0z1FBrIaAo3vaXlM4Dyua9vqbhBavBXkzfPD5aPMa7TE4tMJDGzxG16mqr53jg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2870&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;优化二：GC耗时（从3倍耗时到超越）&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;虽然通过&lt;code&gt;bigcache&lt;/code&gt;提供的bench，得到的数据比&lt;code&gt;bigcache&lt;/code&gt;本身要好（后分析可能是因为在平时写入时把GC耗时分担到了总耗时，而bench里没有总耗时统计），但是随后又添加的并发读写测试和GC测试中发现&lt;code&gt;ecache&lt;/code&gt;优势不明显，比如写整型值的GC耗时是当时最快的&lt;code&gt;bigcache&lt;/code&gt;（80ms左右）的2倍多（200ms左右），写1K数据的GC耗时是当时最快的&lt;code&gt;freecache&lt;/code&gt;的3倍多。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;从剖析结果来看，重点方向在三个方面&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;减少临时对象产生&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;减少栈对象逃逸到堆（避免返回指针）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;interface性能较差（存储小对象时，相比拷贝没有优势）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;针对双链表的改进思路&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;双链表节点实现成不需要产生临时节点指针的形式&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;用一次性预分配的连续区域存储节点&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;用索引列表来表达双链表&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; node &lt;span&gt;struct&lt;/span&gt; {&lt;br/&gt;    k        &lt;span&gt;string&lt;/span&gt;&lt;br/&gt;    v        value&lt;br/&gt;    expireAt &lt;span&gt;int64&lt;/span&gt; &lt;span&gt;// 纳秒时间戳，为0说明被标记删除&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; cache &lt;span&gt;struct&lt;/span&gt; {&lt;br/&gt;    dlnk [][&lt;span&gt;2&lt;/span&gt;]&lt;span&gt;uint16&lt;/span&gt;       &lt;span&gt;// 双链表索引列表，第0个元素存储{尾节点索引，头节点索引}，其他元素存{前序节点索引，后继节点索引}&lt;/span&gt;&lt;br/&gt;    m    []node            &lt;span&gt;// 预分配连续空间内存&lt;/span&gt;&lt;br/&gt;    hmap &lt;span&gt;map&lt;/span&gt;[&lt;span&gt;string&lt;/span&gt;]&lt;span&gt;uint16&lt;/span&gt; &lt;span&gt;// &amp;lt;key，dlnk中的位置&amp;gt;&lt;/span&gt;&lt;br/&gt;    last &lt;span&gt;uint16&lt;/span&gt;            &lt;span&gt;// 没有满时，分配到的位置&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;一些取巧的设计&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;只用一个&lt;code&gt;last&lt;/code&gt;字段和连续节点空间的容量比较来判断是否分配满&lt;pre&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;if&lt;/span&gt; c.last == &lt;span&gt;uint16&lt;/span&gt;(&lt;span&gt;cap&lt;/span&gt;(c.m)) &lt;span&gt;// 分配满了&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;用uint16类型存储索引，节省空间的同时，配合桶的数量，足够大&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;dlnk&lt;/code&gt;用&lt;code&gt;n+1&lt;/code&gt;个元素来存储索引，每个元素都是&lt;code&gt;{前序节点索引, 后继节点索引}&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;索引为0代表空，刚好&lt;code&gt;dlnk[0]&lt;/code&gt;存储的是&lt;code&gt;{尾节点索引，头节点索引}&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;因为头尾节点和其他节点存储在一起，复用&lt;code&gt;adjust&lt;/code&gt;方法，通过参数就能实现将元素移动到头部还是尾部的功能&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;ajust(x, p, n)&lt;/code&gt;移动到头部&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;ajust(x, n, p)&lt;/code&gt;移动到尾部&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;删除元素时复用时间戳，设置为0代表删除，并且移动到链表尾部&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;调整完效果还不错，&lt;code&gt;mallogc&lt;/code&gt;缩短了、&lt;code&gt;_refresh&lt;/code&gt;时候的&lt;code&gt;gcWriteBarrier&lt;/code&gt;也不见了&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7571428571428571&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vbERicIdYZbDWN0icNKyb0w73R0z1FBrIatrd8NrDEiaaTlZZMOgJiaUvhcG5dew3dGSaz4tuQMHK1Jzbzk3BtHkPw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1260&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;进一步优化&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;interface的问题还没有解决，尝试直接用&lt;code&gt;int64&lt;/code&gt;存储value，性能好很多，比&lt;code&gt;bigcache&lt;/code&gt;要快，但是这并不是&lt;code&gt;ecache&lt;/code&gt;设计的初衷，我们期望能够适应不同场景，并且能存储不同类型的对象&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;先尝试用一个包装器把&lt;code&gt;interface&lt;/code&gt;类型和&lt;code&gt;int64&lt;/code&gt;类型分开放置&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; value &lt;span&gt;struct&lt;/span&gt; {&lt;br/&gt;    v *&lt;span&gt;interface&lt;/span&gt;{} &lt;span&gt;// 存放任意类型&lt;/span&gt;&lt;br/&gt;    i &lt;span&gt;int64&lt;/span&gt;        &lt;span&gt;// 存放整型&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;但是性能差很多，剖析发现是包装以后的临时对象太多，于是尝试用1000大小的&lt;code&gt;ringbuffer&lt;/code&gt;实现了一个对象池，优化了分配性能，结果能和&lt;code&gt;bigcache&lt;/code&gt;相同了，感兴趣的可以了解一下源码&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;不过最终没有使用，因为灵机一动，发现&lt;code&gt;node&lt;/code&gt;的&lt;code&gt;value&lt;/code&gt;字段，不用对象指针（单纯栈对象拷贝赋值）和用指针加&lt;code&gt;ringbuffer&lt;/code&gt;性能是一样的（好险！差点就变复杂了😅）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;还差最后一步&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;整型的耗时问题优化完了，还有&lt;code&gt;freecache&lt;/code&gt;写入1K的问题不是吗，我一直在想，他为什么能这么快，甚至还看了他的源码，不过偷师没成&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;经历了将近一整天的各种优化（尝试使用reflect2判断类型；cacheline优化）都没效果，差点就放弃了，终于找到了解决方案————用&lt;code&gt;[]byte&lt;/code&gt;类型直接接收！（PS：似曾相识的套路）&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; value &lt;span&gt;struct&lt;/span&gt; {&lt;br/&gt;    i *&lt;span&gt;interface&lt;/span&gt;{} &lt;span&gt;// 存放任意类型&lt;/span&gt;&lt;br/&gt;    b []&lt;span&gt;byte&lt;/span&gt;       &lt;span&gt;// 存放字节数组&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;测试结果很理想，总耗时和GC耗时都超越了最快的&lt;code&gt;freecache&lt;/code&gt;，PS：不过也是trade-off，只是较大的对象在&lt;code&gt;ecache&lt;/code&gt;GC上消耗的时间没有&lt;code&gt;freecache&lt;/code&gt;拷贝消耗的时间多而已&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;最后把整型也用&lt;code&gt;encoding/binary.LittleEndian.PutUint64&lt;/code&gt;合并进了&lt;code&gt;[]byte&lt;/code&gt;，内存占用一样，性能稍慢一点点&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;其他改进&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;时间戳原来记录的是写入时间，群友review提出了时间回跳可能会有问题，改为&lt;code&gt;expireAt&lt;/code&gt;过期的时间点，保证一定会在设置的过期时间内过期&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;仔细检查并发场景下&lt;code&gt;node&lt;/code&gt;复用可能导致取到错误值的情况&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;优化结果&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4777158774373259&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vbERicIdYZbDWN0icNKyb0w73R0z1FBrIanMbYBtBiblaczHp0iaBoSMdJURgmiaZlmD0QsAyU9urOICQSNy8AyHwvw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2872&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;🐌 代表很慢，✈️ 代表快，🚀 代表非常快，可以看到优化以后的&lt;code&gt;ecache&lt;/code&gt;，各项测试表现都不错（除大量并发写入整型的GC耗时无法超过&lt;code&gt;bigcache&lt;/code&gt;外）。&lt;/p&gt;&lt;table data-tool=&quot;mdnice编辑器&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;bigcache&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;cachego&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;ecache&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;freecache&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;gcache&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;gocache&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;PutInt&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;GetInt&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Put1K&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Put1M&lt;/td&gt;&lt;td&gt;🐌&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;🐌&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;PutTinyObject&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ChangeOutAllInt&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HeavyReadInt&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HeavyReadIntGC&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HeavyWriteInt&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HeavyWriteIntGC&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HeavyWrite1K&lt;/td&gt;&lt;td&gt;🐌&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HeavyWrite1KGC&lt;/td&gt;&lt;td&gt;🐌&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HeavyMixedInt&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;✈️&lt;/td&gt;&lt;td&gt;🚀&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;版本对比&lt;/h2&gt;&lt;section&gt;基线版本v1.0.5 vs 优化版本v1.1.0：(https://github.com/orca-zhang/ecache/tree/68f69ca9cf3043bf3a9853d320389252e81310b9) vs (https://github.com/orca-zhang/ecache/tree/1cb426fe021959eacb86a675bebff69a2b430b6d&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;TinyLFU: A Highly Efficient Cache Admission Policy：https://arxiv.org/abs/1512.00727&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;设计实现高性能本地内存缓存：https://blog.joway.io/posts/modern-memory-cache/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;LRU算法及其优化策略——算法篇：https://juejin.cn/post/6844904049263771662&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>612347a2cb14585adaf5d64bd708c9c9</guid>
<title>InnoDB，快照读，在RR和RC下有何差异？（很多人，以为自己懂了...）</title>
<link>https://toutiao.io/k/eyqcgrb</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;什么是快照读&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;(Snapshot Read)？&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;MySQL数据库，InnoDB存储引擎，为了提高并发，使用MVCC机制，在并发事务时，通过读取数据行的历史数据版本，不加锁，来提高并发的一种&lt;/span&gt;&lt;span&gt;不加锁一致性读&lt;/span&gt;&lt;span&gt;(Consistent Nonlocking Read)&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;画外音：本文所有讨论基于MySQL-InnoDB。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;快照读的内核原理，详见：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;《&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&amp;amp;mid=2651967047&amp;amp;idx=1&amp;amp;sn=b605fe50e6dd74ecad659c464a0e29ee&amp;amp;chksm=bd2d7b9b8a5af28d35c13e469e8e2c6a7082f00e608fd52d999fc0f7a6aec016faf2a8d748fa&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;InnoDB并发如此高，原因竟然在这？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;InnoDB并发如此高，原因竟然在这？&lt;/a&gt;》&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;什么是读提交&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;(Read Committed)？&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;（1）数据库领域，事务隔离级别的一种，简称RC；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;（2）它解决“读脏”问题，保证读取到的数据行都是已提交事务写入的；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;（3）它可能存在“读幻影行”问题，同一个事务里，连续相同的read可能读到不同的结果集；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;什么是可重复读&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;(Repeated Read)？&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;（1）数据库领域，事务隔离级别的一种，简称RR；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;（2）它不但解决“读脏”问题，还部分解决了“读幻影行”问题，&lt;/span&gt;&lt;span&gt;同一个事务里，连续相同的read读到相同的结果集；&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;在&lt;strong&gt;读提交&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;RC&lt;/span&gt;&lt;span&gt;)，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;可重复读&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;RR&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;两个不同的事务的隔离级别下，&lt;strong&gt;快照读&lt;/strong&gt;有什么不同呢？&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们一起来做一些实验。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;假设有InnoDB表：&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;t(id PK, name);&lt;/span&gt;&lt;span&gt;&lt;br/&gt; &lt;br/&gt;表中有三条记录：&lt;br/&gt;&lt;/span&gt;&lt;span&gt;1, shenjian&lt;br/&gt;2, zhangsan&lt;br/&gt;3, lisi&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;case 1&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;span&gt;，两个并发事务A，B执行的时间序列如下（A先于B开始，B先于A结束）：&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;A1: start transaction;&lt;br/&gt;         B1: start transaction;&lt;br/&gt;A2: select * from t;&lt;br/&gt;         B2: insert into t values (4, wangwu);&lt;br/&gt;A3: select * from t;&lt;br/&gt;         B3: commit;&lt;br/&gt;A4: select * from t;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;提问1&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：假设事务的隔离级别是&lt;/span&gt;&lt;span&gt;可重复读RR&lt;/span&gt;&lt;span&gt;，事务A中的三次查询，A2, A3, A4分别读到什么结果集？&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;提问2&lt;/strong&gt;：假设事务的隔离级别是&lt;/span&gt;&lt;span&gt;读提交RC&lt;/span&gt;&lt;span&gt;，A2, A3, A4又分别读到什么结果集呢？&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;case 2&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;，仍然是上面的两个事务，只是A和B开始时间稍有不同（B先于A开始，B先于A结束）：&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;         B1: start transaction;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;A1: start transaction;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;A2: select * from t;&lt;br/&gt;         B2: insert into t values (4, wangwu);&lt;br/&gt;A3: select * from t;&lt;br/&gt;         B3: commit;&lt;br/&gt;A4: select * from t;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;提问3&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：假设事务的隔离级别是&lt;/span&gt;&lt;span&gt;可重复读RR&lt;/span&gt;&lt;span&gt;，事务A中的三次查询，A2, A3, A4分别读到什么结果集？&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;提问4&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：假设事务的隔离级别是&lt;/span&gt;&lt;span&gt;读提交RC&lt;/span&gt;&lt;span&gt;，A2, A3, A4的结果集又是什么呢？&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;case 3&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;，仍然是并发的事务A与B（A先于B开始，B先于A结束）：&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;A1: start transaction;&lt;br/&gt;         B1: start transaction;&lt;br/&gt;         B2: insert into t values (4, wangwu);&lt;br/&gt;         B3: commit;&lt;br/&gt;A2: select * from t;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;提问5&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：假设事务的隔离级别是&lt;/span&gt;&lt;span&gt;可重复读RR&lt;/span&gt;&lt;span&gt;，事务A中的A2查询，结果集是什么？&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;提问6&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：假设事务的隔离级别是&lt;/span&gt;&lt;span&gt;读提交RC&lt;/span&gt;&lt;span&gt;，A2的结果集又是什么呢？&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;case 4&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;，事务开始的时间再换一下（B先于A开始，B先于A结束）：&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;         B1: start transaction;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;A1: start transaction;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;         B2: insert into t values (4, wangwu);&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;         B3: commit;&lt;br/&gt;A2: select * from t;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;提问7&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：假设事务的隔离级别是&lt;/span&gt;&lt;span&gt;可重复读RR&lt;/span&gt;&lt;span&gt;，事务A中的A2查询，结果集是什么？&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;提问8&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：假设事务的隔离级别是&lt;/span&gt;&lt;span&gt;读提交RC&lt;/span&gt;&lt;span&gt;，A2的结果集又是什么呢？&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;很多时候，我们以为自己懂了，其实...&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MjM5ODYxMDA5OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/YrezxckhYOxbibeY4UQvLjjG76dIsbXYGaaKCJpqU0kzRuu3r2CXosccgtc57I15CePibfpQMd5dBibXZDNNZYtkg/0?wx_fmt=png&quot; data-nickname=&quot;架构师之路&quot; data-alias=&quot;road5858&quot; data-signature=&quot;架构师之路，坚持撰写接地气的架构文章&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;架构师之路&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;-分享&lt;/span&gt;&lt;span&gt;可落地&lt;/span&gt;&lt;span&gt;的架构文章&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;相关文章&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;《&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&amp;amp;mid=2651967047&amp;amp;idx=1&amp;amp;sn=b605fe50e6dd74ecad659c464a0e29ee&amp;amp;chksm=bd2d7b9b8a5af28d35c13e469e8e2c6a7082f00e608fd52d999fc0f7a6aec016faf2a8d748fa&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;InnoDB并发如此高，原因竟然在这？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;InnoDB并发如此高，原因竟然在这？&lt;/a&gt;&lt;span&gt;》&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;知其然，知其所以然，下一篇揭晓答案。&lt;/span&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>